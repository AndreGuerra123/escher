{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/Behavior.js","js/src/Brush.js","js/src/BuildInput.js","js/src/Builder.js","js/src/CallbackManager.js","js/src/Canvas.js","js/src/CobraModel.js","js/src/DataMenu.js","js/src/DirectionArrow.js","js/src/Draw.js","js/src/KeyManager.js","js/src/Map.js","js/src/PlacedDiv.js","js/src/QuickJump.js","js/src/Scale.js","js/src/ScaleEditor.js","js/src/SearchBar.js","js/src/SearchIndex.js","js/src/Settings.js","js/src/SettingsMenu.js","js/src/TextEditInput.js","js/src/UndoStack.js","js/src/ZoomContainer.js","js/src/build.js","js/src/complete.ly.js","js/src/data_styles.js","js/src/inline.js","js/src/main.js","js/src/static.js","js/src/ui.js","js/src/utils.js","node_modules/baconjs/dist/Bacon.js","node_modules/filesaver/node_modules/mkdirp/index.js","node_modules/filesaver/node_modules/safename/safename.js","node_modules/filesaver/src/Filesaver.js","node_modules/filesaver/src/changename.js","node_modules/grunt-browserify/node_modules/browserify/lib/_empty.js","node_modules/grunt-browserify/node_modules/browserify/node_modules/path-browserify/index.js","node_modules/grunt-browserify/node_modules/browserify/node_modules/process/browser.js","node_modules/underscore/underscore.js","node_modules/vkbeautify/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","escher","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","map","undo_stack","empty_behavior","rotation_mode_enabled","rotation_drag","d3","behavior","drag","selectable_mousedown","text_label_mousedown","text_label_click","selectable_drag","node_mouseover","node_mouseout","label_mousedown","label_mouseover","label_mouseout","bezier_drag","bezier_mouseover","bezier_mouseout","reaction_label_drag","node_label_drag","turn_everything_on","toggle_selectable_click","toggle_selectable_drag","toggle_label_drag","toggle_label_mousedown","turn_everything_off","toggle_rotation_mode","on_off","show_center","sel","selectAll","data","enter","append","attr","center","x","y","on","cur","utils","d3_transform_catch","new_loc","event","dx","translate","dy","bind","current","parseFloat","style","hide_center","select","average_location","nodes","xs","ys","node_id","node","undefined","push","mean","selection_node","selection_background","callback_manager","run","selected_nodes","get_selected_nodes","Object","keys","console","warn","selected_node_ids","reactions","beziers","start_fn","d","sourceEvent","stopPropagation","drag_fn","angle","total_angle","updated","build","rotate_nodes","draw_these_nodes","node_ids","draw_these_reactions","reaction_ids","end_fn","undo_fn","these_nodes","forEach","id","redo_fn","center_fn","_get_generic_angular_drag","selectable_click","defaultPrevented","select_selectable","parentNode","classed","toggle_text_label_edit","text_edit_mousedown","selection","coords_a","coords","preventDefault","mouse","_get_selectable_drag","_get_bezier_drag","label_drag","_get_reaction_label_drag","_get_node_label_drag","toggle_bezier_drag","String","turn_off_drag","combine_nodes_and_draw","fixed_node_id","dragged_node_id","dragged_node","fixed_node","updated_segment_objs","connected_segments","segment_obj","segment","reaction_id","segments","segment_id","from_node_id","to_node_id","error","clone","delete_node_data","draw_everything","the_timeout","total_displacement","node_ids_to_drag","text_label_ids_to_drag","move_label","text_label_id","displacement","text_label","text_labels","indexOf","__data__","bigg_id","node_group","setTimeout","insertBefore","firstChild","grabbed","get_selected_node_ids","selected_text_label_ids","get_selected_text_label_ids","c_plus_c","move_node_and_dependents","unique_concat","draw_these_text_labels","node_to_combine_array","each","saved_dragged_node","segment_objs_moved_to_combine","updated_reactions","filter","saved_displacement","saved_node_ids","saved_text_label_ids","saved_reaction_ids","c_times_scalar","clearTimeout","move_bezier","bez","bezier_id","dragging","bezier","draw_these_beziers","_get_generic_drag","reaction","label_x","label_y","relative_to_selection","rel","location","saved_d","saved_location","get_center","angle_for_event","saved_angle","saved_center","Behavior","make_class","prototype","is_enabled","insert_after","brush_sel","insert_before_node","nextSibling","enabled","toggle","selection_brush","setup_selection_brush","remove","selectable_selection","size_and_location","canvas","width","height","brush_fn","svg","brush","scale","identity","domain","key_manager","shift_key_on","held_keys","shift","extent","target","sx","sy","clear","Brush","zoom_container","settings","new_sel","placed_div","PlacedDiv","hide","c","completely","backgroundColor","input","text","hide_dropdown","default_angle","direction_arrow","DirectionArrow","set_rotation","setup_map_callbacks","setup_zoom_callbacks","target_coords","set","selected_node","is_active","reload","hide_target","count","place_at_selected","is_visible","toggle_start_reaction_listener","show_dropdown","reload_at_selected","set_status","show","escape","add_escape_listener","blur","hideDropDown","place","repaint","setText","focus","deselect_text_labels","select_single_node","set_location","starting_from_scratch","already_drawn","drawn_id","cobra_model","show_names","get_option","allow_duplicates","options","cobra_reactions","cobra_metabolites","metabolites","has_data_on_reactions","selected_m_name","reaction_data","reaction_data_styles","name","bold_mets_in_str","str","mets","replace","RegExp","join","reaction_suggestions","reaction_name","show_r_name","met_bigg_id","html","data_string","matches","show_met_names","met_id","key","show_gene_names","genes","g_obj","reaction_string","CobraModel","build_reaction_string","reversibility","lower_bound","upper_bound","concat","sort_fn","Math","abs","toLowerCase","sort","complete","check_and_build","new_reaction_from_scratch","get_rotation","new_reaction_for_metabolite","onEnter","onChange","start_reaction_listener","deselect_nodes","show_target","BuildInput","map_data","model_data","embedded_css","builder_embed","datum","set_options","menu","scroll_behavior","use_3d_transform","enable_editing","enable_keys","enable_search","fill_screen","zoom_to_element","starting_reaction","never_ask_before_quit","unique_map_id","primary_metabolite_radius","secondary_metabolite_radius","marker_radius","gene_font_size","hide_secondary_metabolites","show_gene_reaction_rules","hide_all_labels","reaction_styles","reaction_compare_style","reaction_scale","type","color","size","reaction_no_data_color","reaction_no_data_size","gene_data","and_method_in_gene_reaction_rule","metabolite_data","metabolite_styles","metabolite_compare_style","metabolite_scale","metabolite_no_data_color","metabolite_no_data_size","identifiers_on_map","highlight_missing","allow_building_duplicate_reactions","first_load_callback","check_for_parent_tag","set_option","option","new_value","conditional_options","Settings","streams","onValue","val","has","reduce","has_found","scale_el","set_conditional","CallbackManager","load_model","load_map","_update_data","status_bus","new_behavior","set_scroll_behavior","set_use_3d_transform","draw_all_nodes","draw_all_reactions","should_update_data","from_cobra_json","remove_child_nodes","ZoomContainer","zoomed_sel","Map","from_data","build_input","text_edit_input","TextEditInput","_setup_modes","menu_div","search_bar_div","button_div","search_bar","SearchBar","search_index","settings_bar","settings_div","SettingsMenu","slice","_get_keys","assigned_keys","input_list","update","_setup_menu","_setup_simple_zoom_buttons","element_id","zoom_to_reaction","zoom_to_node","zoom_extent_canvas","get_size","start_coords","zoom_extent_nodes","_setup_status","_setup_quick_jump","zoom_mode","view_mode","_setup_confirm_before_exit","_set_mode","mode","_toggle_direction_buttons","toggle_pan_drag","toggle_resize","select_none","build_mode","brush_mode","rotate_mode","text_mode","set_reaction_data","set_gene_data","clear_gene_reaction_rules","set_metabolite_data","update_model","update_map","kind","should_draw","make_gene_data_object","all_reactions","extend","data_styles","import_and_check","met_data_object","reaction_data_object","gene_data_object","update_metabolite_data","update_reaction_data","apply_metabolite_data_to_map","apply_reaction_data_to_map","apply_gene_data_to_map","update_model_timer","delay","apply_metabolite_data","apply_reaction_data","apply_gene_data","menu_selection","button_selection","load_map_for_file","check_map","map_name","load_model_for_file","load_reaction_data_for_file","load_metabolite_data_for_file","load_gene_data_for_file","ui","dropdown_menu","button","save","key_text","assign","load","fn","pre_fn","failure_fn","save_svg","clear_map","model_menu","convert_map","clear_model","disable_model_clear_convert","dropdown","data_menu","load_reaction_data","accept_csv","clear_reaction_data","divider","clear_gene_data","clear_metabolite_data","disable_clears","edit_menu","undo","redo","toggle_primary","cycle_primary","select_all","invert_selection","view_menu","zoom_in","zoom_out","extent_nodes","extent_canvas","search","toggle_beziers","show_settings","button_panel","individual_button","icon","classes","tooltip","radio_button_group","direction_buttons","button_group","direction_arrow_left","direction_arrow_right","direction_arrow_up","direction_arrow_down","select_button","$","find","ids","this_id","b_id","status_bar","status","load_fn","new_map_name","quick_jump_path","callback","confirm","url","name_to_url","json","quick_jump","QuickJump","was_enabled","zoom","zoom_on","modifiers","control","load_metabolite_data","load_gene_data","ignore_with_input","delete","delete_selected","delete_del","toggle_selected_node_primary","cycle_primary_node","right","down","left","up","onbeforeunload","Builder","callbacks","this_arg","_","isUndefined","pass_args","Array","arguments","a_name","split_name","split","apply","resize_enabled","setup","stop_propagation","transform_string","current_transform","tr","ldragresize","oldx","min","dragbar_width","mouse_node","mouse_node_mult","rect","top","bottom","rdragresize","dragx","max","tdragresize","oldy","bdragresize","dragy","drag_right","origin","drag_left","drag_top","drag_bottom","Canvas","stoichiometries","is_reversible","format","number","reactant_bits","product_bits","the_metabolite","coefficient","from_exported_data","model","the_id","gene_ids","genes_for_gene_reaction_rule","gene_reaction_rule","gene_id","gene","met","cofactors","styles","compare_style","apply_reaction_data_to_reactions","apply_metabolite_data_to_nodes","gene_data_obj","apply_gene_data_to_reactions","model_for_export","load_with_files","files","select_sel","update_callback","addEventListener","load_datafile","value","file","this_file","load_the_file","list","getdatafiles","datafiles","empty","path_for_arrow","arrow_container","arrow","_setup_drag","transform","rotate","rotation","displace_rotation","d_rotation","b","d_angle","to_degrees","create_membrane","enter_selection","update_membrane","update_selection","create_reaction","create_reaction_label","update_reaction","drawn_nodes","defs","update_reaction_label","draw_a_nested_object","create_segment","update_segment","group","identifiers_in_tooltip","label_mousedown_fn","label_mouseover_fn","label_mouseout_fn","label","all_genes_g","show_gene_string","gene_string","show_gene_reaction_rule","gene_string_for_data","gene_g","exit","should_size","should_color","no_data_size","no_data_color","primary_r","secondary_r","get_arrow_size","reaction_size","isNaN","get_disp","arrow_size","node_is_primary","arrow_height","start","end","b1","b2","disp","from_node_coefficient","direction","displaced_coords","to_node_coefficient","curve","show_missing","reaction_color","arrowheads","node_type","get_angle","loc","show_arrowhead_flux","stoichiometry_labels","labels","disp_factor","rotate_coords","create_bezier","update_bezier","show_beziers","drag_behavior","mouseover","mouseout","drawn_reactions","seg_data","segment_d","create_node","metabolite_groups","update_node","has_data_on_nodes","mousedown_fn","click_fn","mouseover_fn","mouseout_fn","label_drag_behavior","marker_r","metabolite_data_styles","no_data_style","node_label","should_scale","metabolite_size","should_color_data","metabolite_color","create_text_label","update_text_label","reaction_arrow_displacement","displace","check_undefined","new_x","new_y","hyp","distance","Draw","reset_held_keys","h","command","ctrl_equals_cmd","unique_string","toggle_modifiers","mod","held","kc","k","check_key","pressed","modifier_keys","command_right","err","log","keyCode","meaningless","input_visible","key_id","assigned_key","add_enter_listener","add_key_listener","event_name","KeyManager","css","canvas_size_and_loc","map_id","map_description","generate_map_id","setup_defs","setup_containers","largest_ids","Scale","calc_data_stats","connect_to_settings","get_data_statistics","UndoStack","draw","SearchIndex","beziers_enabled","rotation_on","get_largest_id","obj","current_largest","parseInt","Date","now","toString","n_id","insert","r_id","g_id","segments_to_delete","s_id","from_node","to_node","midpoint","c_minus_c","label_id","new_beziers_for_reactions","largest_segment_id","reset_containers","time","_status_timer","has_cobra_model","draw_all_text_labels","draw_beziers","clear_deleted","draw_all_beziers","clear_deleted_reactions","reaction_subset","object_slice_for_ids_ref","update_fn","draw_an_object","bezier_ids","bezier_ids_for_reaction_ids","clear_deleted_segments","clear_deleted_beziers","clear_deleted_nodes","node_subset","create_fn","text_label_ids","clear_deleted_text_labels","text_label_subset","bezier_subset","hide_beziers","has_data","data_statistics","on_array","array","same","vals","quartiles","funcs","ar","new_val","get_selected_text_labels","selected_text_labels","select_metabolite_with_id","node_selection","selected","classable_node","classable_selection","node_count","out","select_text_label","text_label_selection","p","delete_selectable","segments_and_reactions_for_nodes","segment_objs_w_segments","saved_nodes","saved_segment_objs_w_segments","saved_reactions","saved_text_labels","delete_and_draw","segment_objs","delete_segment_data","delete_reaction_data","delete_text_label_data","changed_r_scale","changed_m_scale","extend_nodes","extend_reactions","reaction_ids_to_draw","seg_id","seg_o","new_beziers_for_segments","scale_changed","found","so","bez_id","bezier_id_for_segment_id","extend_and_draw_metabolite","new_nodes","selected_node_id","cobra_reaction","metabolite_id","metabolite","label_d","reaction_redo","reaction_undo","new_reactions","reaction_bigg_id","apply_undo_redo","extend_and_draw_reaction","new_beziers","new_coords","translate_off_screen","new_reaction","saved_beziers","reactions_to_draw","connected_anchor_ids","segment_info","connected_anchor_id","related_node_ids","conn_met_id","conn_node","a_selected_node_id","nodes_to_draw","last_i","last_node","last_is_primary","last_coords","last_segment","last_segment_info","primary_node_id","last_bezier","related_node_id","this_is_primary","these_coords","this_segment_info","this_segment","this_bezier","old_connected_segments","new_connected_segments","go","reaction_ids_to_draw_o","these_reactions","segment_ids_for_reactions","segment_obj_w_segment","these_ids","new_text_label","edit_text_label","saved_value","edit_and_draw","record_id","margin","_zoom_extent","new_zoom","new_pos","go_to","zoom_to_text_label","highlight_reaction","highlight","highlight_node","highlight_text_label","download_json","map_for_export","homepage","schema","new_segment","attrs","new_node","t_id","canvas_el","new_canvas_el","window_scale","window_translate","mouse_node_size_and_trans","w","hidden_sel","download_svg","reactions_not_found","reaction_attrs","met_nodes_not_found","metabolite_attrs","model_reaction_id","model_reaction","model_metabolite_id","model_metabolite","n_reactions_not_found","n_met_nodes_not_found","status_delay","div","map_size","load_callback","selector","url_comp","parse_url_components","default_value","view_options","change_map","success","replace_state_for_map_name","reset_selection","selectedIndex","href","history","replaceState","linear","x_size","y_size","clamp","scale_path","path","x_fn","y_fn","match","p0","p1","p2","reg","p3","p4","p5","p6","scale_decimals","scale_fn","precision","sort_scale","stats","sorted","v","color_range","size_range","range","update_metabolite","changed","grad_id","input_width","input_height","data_not_loaded","input_label_group","nd","no_data_container","add_group","trash_group","input_group","gradient","pickers_group","no_data","update_no_data","bar_w","bar_h","x_disp","_data_not_loaded","sc","sc_size","bring_to_front","d2","get_this_val","set_scale","sorted_domain","frac","stops","pickers","new_d","buf","floor","invert","trashes","add","last_ind","j","th","inputs","disabled","stat_types","opts","sind","label_w","ins","ScaleEditor","container","previous","next","counter","results","on_input_fn","debounce","index","record","overwrite","check_record","substring","re","exec","bacon","Bus","force_update_bus","Observable","convert_to_conditional_stream","_convert_to_conditional_stream","force_update_with_bus","_force_update_with_bus","busses","_create_conditional_setting","bus","stream","status_stream","is_not_hold_event","not","toProperty","is_not_first_clear","scan","is_not_first_hold","combined","combineAsArray","flatMap","fromArray","unheld","merge","initial_value","hold_changes","abandon_changes","accept_changes","toggle_abs_and_apply_data","background","box","view_gui","rse","style_gui","mse","abs_callback","cell","style_cells","get_styles","checked","option_name","string","boolean_options","pan","active_target","_accept_changes","_add_and_edit","stack_size","stack","oldest","newest","end_of_stack","top_of_stack","_incr","_decr","css3_transform_container","_scroll_behavior","_use_3d_transform","_pan_drag_on","_zoom_behavior","_zoom_timeout","_svg_scale","_svg_translate","_update_scroll","contains","wheel_fn","ev","sensitivity","returnValue","get_directional_disp","wheel_delta","delta","the_delt","new_translate","wheelDeltaX","deltaX","wheelDeltaY","deltaY","isNull","translate_array","_go_to_3d","_go_to_svg","svg_scale","svg_translate","n_scale","n_translate","tranform","_clear_3d","defer","zoom_by","amount","PI","new_reaction_id","selected_node_coords","reaction_length","main_axis","anchor_distance","reactant_ranks","product_ranks","reactant_count","product_count","reaction_is_reversed","formula","new_metabolite","carbons","Infinity","decompartmentalize","max_rank","old","primary_reactant_index","primary_product_index","is_primary","new_anchors","anchors","dis","anchor_ids","new_id","general_node_type","new_anchor_groups","from_id","to_id","new_segment_id","reverse_flux","primary_index","met_loc","calculate_new_metabolite_coordinates","new_node_id","circle","Boolean","metabolites_array","rotate_around","coord","updated_node_ids","updated_reaction_ids","move_node_and_labels","tbez","is_reversed","ds","draw_at_index","b1_strength","b2_strength","w2","secondary_dis","num_slots","de","reaction_axis","new_label","seg_bez","these","config","calculateWidthForText","spacer","document","createElement","visibility","position","outline","padding","border","whiteSpace","fontSize","fontFamily","fontWeight","body","appendChild","innerHTML","getBoundingClientRect","get_document","get_window","promptInnerHTML","hintColor","dropDownBorderColor","dropDownZIndex","dropDownOnHoverBackgroundColor","txtInput","spellcheck","txtHint","cloneNode","borderColor","boxShadow","verticalAlign","wrapper","prompt","overflow","marginLeft","dropDown","textAlign","zIndex","cursor","borderStyle","borderWidth","overflowX","overflowY","createDropDownController","elem","rows","ix","oldIndex","current_row","onMouseOver","onMouseOut","onDblClick","onmouseselection","refresh","token","vph","innerHeight","documentElement","clientHeight","distanceToTop","distanceToBottom","divRow","onmouseover","onmouseout","onmousedown","ondblclick","__hint","rs","display_limit","maxHeight","move","step","get_current_row","dropDownController","leftSide","registerOnTextChangeOldValue","get_hint","onArrowDown","onArrowUp","onTab","startFrom","hint","getText","optionsLength","registerOnTextChange","txt","handler","keyDownHandler","m","hasTextChanged","align_gene_data_to_reactions","aligned","null_val","first_gene_id","this_gene_data","existing_d","pnt","check","array_to_object","float_for_data","check_finite","isFinite","take_abs","diff","fold","log2_fold","_parse_float_or_null","fs","reverse_flux_for_data","rule","gene_values","null_or_d","out_text","genes_found","replace_gene_in_rule","RETURN_ARG","new_str","any_num","EMPTY_LINES","TRAILING_NEWLINE","result","text_for_data","csv_converter","csv_rows","converted","row","AND_OR","ALL_PARENS","unique_strings_array","evaluate_gene_reaction_rule","curr_val","all_null","new_curr_val","EXCESS_PARENS","OR_EXPRESSION","nums","OR","sum","AND_EXPRESSION","AND","num","Number","escape_reg_exp","ESCAPE_REG","space_or_par_start","space_or_par_finish","escaped","r_data","version","DataMenu","static","load_map_model_from_url","map_download_url","model_download_url","local_index","opt","map_path","_get_path","model_name","model_path","encodeURIComponent","organism","set_button","s2","pull_right","ul","li","link","set_json_or_csv_input_button","set_json_input_button","post_fn","load_json","click","load_json_or_csv","_check_filesaver","Blob","alert","defaults","must_be_float","has_key","hasChildNodes","removeChild","lastChild","load_css","css_path","ends_with","suffix","load_files","files_to_load","final_callback","remaining","isInternal","constructor","args","instance","container_sel","parent_node_selector","children_selector","object","id_key","create_function","update_function","exit_function","draw_object","make_array_ref","object_data_key","make_array","it","compare_arrays","a1","a2","arr","column","nk","copy","len","hasOwnProperty","obj1","obj2","attrname","arrays","new_array","func","wait","immediate","timeout","context","later","callNow","object_slice_for_ids","subset","coords1","coords2","scalar","JSON","stringify","blob","saveAs","File","FileReader","FileList","reader","onload","parse","onabort","onerror","readAsText","debug_event","onload_function","errors","csv","parseRows","svg_sel","do_beautify","xml","XMLSerializer","serializeToString","vkbeautify","rotate_coords_recursive","coords_array","rot","cos","sin","denominator","numerator","atan","radians","point","gamma","atan2","beta","sqrt","pow","names","compartmentalize","compartment_id","no_compartment","avg","median","half","random_characters","possible","charAt","random","el","tag","tagName","download_url","the_window","query","vars","pair","decodeURIComponent","ownerDocument","defaultView","transform_attr","_toConsumableArray","isArray","arr2","from","Source","obs","sync","lazy","queue","ConsumingSource","BufferingSource","Desc","method","Some","Event","eventIdCounter","Next","valueF","eager","isFunction","_isNext","valueInternal","Initial","End","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","assertFunction","dispatcher","registerObs","PropertyDispatcher","property","None","currentValueRootId","propertyEnded","Property","unsubAll","subscribeAll","guardedSink","sink","Bacon","valueAndEnd","endEvent","_slice","Exception","nop","former","cloneArray","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","assertEventStream","_isEventStream","assertObservable","isObservable","assertArray","assertNoArguments","prop","inherit","child","parent","hasProp","ctor","indexWhere","head","always","negate","tail","filtered","toArray","last","all","any","without","splice","seed","cached","_isNone","me","internals","recursionDepth","UpdateBarrier","rootEvent","waiterObs","waiters","afters","aftersIndex","flushed","afterTransaction","whenDoneWith","obsWaiters","flush","flushWaiters","deps","obsId","flushDepsOf","dep","internalDeps","inTransaction","after","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","reply","noMore","hasWaiters","_isSource","markEnded","consume","mayHave","hasAtLeast","flatten","values","isTrigger","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toSimpleExtractor","fieldValue","toFieldExtractor","parts","partFuncs","isFieldKey","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","_isSome","getOrElse","get","isDefined","inspect","toOption","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","subscription","_this2","unsubMe","iterable","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","sub","unsubscribeFromSource","_this","initValue_","initValue","initSent","subbed","sendInit","toEventStream","withHandler","never","when","usage","sources","pats","patterns","patSources","constantToFunction","pat","ixs","triggerFound","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","state","checkObservable","groupSimultaneous","_len5","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","_len9","_key9","_len10","_key10","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","equals","isNone","skipDuplicates","isEqual","prev","awaiting","and","or","scheduler","setInterval","clearInterval","getTime","bufferWithTime","bufferWithTimeOrCount","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","valuesToPush","_this6","delayMs","_this7","_len11","_key11","once","unsubRight","unsubLeft","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len12","_key12","flatMapConcat","sender","bufferingThrottle","minimumInterval","newSink","subscribeInput","_this8","unsubscribeInput","plug","_this9","liftCallback","_len13","_key13","fromCallback","_len14","_key14","fromNodeCallback","_len15","_key15","combineTemplate","template","ctxStack","setValue","applyStreamValue","constantValue","mkContext","pushContext","newContext","compile","popContext","compileTemplate","rootContext","addPropertyInitValueToStream","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","resultProperty","_this10","acc","initHandled","prevTuple","tuple","doAction","doEnd","doError","doLog","_len16","_key16","endOnError","_len17","_key17","take","first","mapError","flatMapError","sampler","thisSource","samplerSource","sample","interval","_len18","_key18","eventMethods","findHandlerMethods","methodPair","addListener","fromEventTarget","eventName","_findHandlerMethods","fromEvent","fromPoll","poll","fromPromise","promise","abort","bound","then","done","groupBy","keyF","limitF","src","similar","limited","pushNeeded","holdWhen","valve","onHold","bufferedValues","subscribed","endIfBothEnded","toSend","asEventStream","_this11","off","jQuery","Zepto","lastEvent","_len19","_key19","mergeAll","smartSink","unsubBoth","sinks","repeatedly","repeat","generator","flag","subscribeNext","retry","retries","maxRetries","isRetryable","finished","valueStream","retriesDone","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len20","_key20","slidingWindow","minValues","spies","running","spy","startWith","takeWhile","_len21","_key21","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","initial","lateBindFirst","_len23","_key23","_len22","_key22","Function","zipAsArray","_len24","_key24","zipWith","_len25","_key25","_len26","_key26","observablesAndFunction","zip","mkdirP","made","xfs","_0777","process","umask","cb","mkdir","er","dirname","stat","er2","isDirectory","mkdirp","mkdirSync","err0","statSync","err1","diacritics","base","letters","diaMap","removeDiacritics","newStr","transformName","space","safename","low","middle","dot","changeName","oldPath","newPath","rename","filename","filepath","checkSafeName","route","safenames","checker","folder","existsSync","folders","Filesaver","folderPath","exists","put","addOne","hasSuffix","splitted","newName","basename","ext","finalName","normalizeArray","allowAboveRoot","unshift","res","splitPathRe","splitPath","resolvedPath","resolvedAbsolute","cwd","TypeError","normalize","isAbsolute","trailingSlash","substr","paths","relative","to","trim","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dir","extname","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","fun","noop","nextTick","title","browser","env","argv","versions","removeListener","removeAllListeners","emit","binding","chdir","createReduce","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","create","Ctor","_wrapped","VERSION","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","every","some","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","computed","lastComputed","shuffle","rand","shuffled","sortBy","criteria","indexBy","countBy","partition","pass","fail","rest","drop","compact","shallow","strict","startIndex","isArguments","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","unzip","findLastIndex","high","mid","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","bindAll","memoize","hasher","cache","address","leading","trailing","timestamp","wrap","compose","times","before","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","functions","methods","extendOwn","pick","oiteratee","omit","props","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","noConflict","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","test","unescape","fallback","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","offset","variable","render","argument","chain","_chain","mixin","valueOf","toJSON","createShiftArr","isSubquery","parenthesisLevel","split_sql","tab","inComment","deep","sql","ar_by_quote","xmlmin","preserveComments","jsonmin","cssmin","sqlmin"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzhxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9oEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpfvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvaxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtbrizvntpl0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClnrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5gfile":"escher.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/** Behavior. Defines the set of click and drag behaviors for the map, and keeps track\n of which behaviors are activated.\n\n A Behavior instance has the following attributes:\n\n my_behavior.rotation_drag, my_behavior.text_label_mousedown,\n my_behavior.text_label_click, my_behavior.selectable_mousedown,\n my_behavior.selectable_click, my_behavior.selectable_drag,\n my_behavior.node_mouseover, my_behavior.node_mouseout,\n my_behavior.label_mousedown, my_behavior.label_mouseover,\n my_behavior.label_mouseout, my_behavior.bezier_drag,\n my_behavior.bezier_mouseover, my_behavior.bezier_mouseout,\n my_behavior.reaction_label_drag, my_behavior.node_label_drag,\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar build = require('./build');\n\n\nvar Behavior = utils.make_class();\n// methods\nBehavior.prototype = {\n    init: init,\n    toggle_rotation_mode: toggle_rotation_mode,\n    turn_everything_on: turn_everything_on,\n    turn_everything_off: turn_everything_off,\n    // toggle\n    toggle_selectable_click: toggle_selectable_click,\n    toggle_text_label_edit: toggle_text_label_edit,\n    toggle_selectable_drag: toggle_selectable_drag,\n    toggle_label_drag: toggle_label_drag,\n    toggle_label_mousedown: toggle_label_mousedown,\n    toggle_bezier_drag: toggle_bezier_drag,\n    // util\n    turn_off_drag: turn_off_drag,\n    // get drag behaviors\n    _get_selectable_drag: _get_selectable_drag,\n    _get_bezier_drag: _get_bezier_drag,\n    _get_reaction_label_drag: _get_reaction_label_drag,\n    _get_node_label_drag: _get_node_label_drag,\n    _get_generic_drag: _get_generic_drag,\n    _get_generic_angular_drag: _get_generic_angular_drag\n};\nmodule.exports = Behavior;\n\n\n// definitions\nfunction init(map, undo_stack) {\n    this.map = map;\n    this.undo_stack = undo_stack;\n\n    // make an empty function that can be called as a behavior and does nothing\n    this.empty_behavior = function() {};\n\n    // rotation mode operates separately from the rest\n    this.rotation_mode_enabled = false;\n    this.rotation_drag = d3.behavior.drag();\n\n    // behaviors to be applied\n    this.selectable_mousedown = null;\n    this.text_label_mousedown = null;\n    this.text_label_click = null;\n    this.selectable_drag = this.empty_behavior;\n    this.node_mouseover = null;\n    this.node_mouseout = null;\n    this.label_mousedown = null;\n    this.label_mouseover = null;\n    this.label_mouseout = null;\n    this.bezier_drag = this.empty_behavior;\n    this.bezier_mouseover = null;\n    this.bezier_mouseout = null;\n    this.reaction_label_drag = this.empty_behavior;\n    this.node_label_drag = this.empty_behavior;\n    this.turn_everything_on();\n}\nfunction turn_everything_on() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(true);\n    this.toggle_selectable_drag(true);\n    this.toggle_label_drag(true);\n    this.toggle_label_mousedown(true);\n}\nfunction turn_everything_off() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(false);\n    this.toggle_selectable_drag(false);\n    this.toggle_label_drag(false);\n    this.toggle_label_mousedown(false);\n}\n\nfunction toggle_rotation_mode(on_off) {\n    /** Listen for rotation, and rotate selected nodes.\n\n     */\n    if (on_off===undefined) {\n        this.rotation_mode_enabled = !this.rotation_mode_enabled;\n    } else {\n        this.rotation_mode_enabled = on_off;\n    }\n\n    var selection_node = this.map.sel.selectAll('.node-circle'),\n        selection_background = this.map.sel.selectAll('#canvas');\n\n    if (this.rotation_mode_enabled) {\n        this.map.callback_manager.run('start_rotation');\n\n        var selected_nodes = this.map.get_selected_nodes();\n        if (Object.keys(selected_nodes).length == 0) {\n            console.warn('No selected nodes');\n            return;\n        }\n\n        // show center\n        this.center = average_location(selected_nodes);\n        show_center.call(this);\n\n        // this.set_status('Drag to rotate.');\n        var map = this.map,\n            selected_node_ids = Object.keys(selected_nodes),\n            reactions = this.map.reactions,\n            nodes = this.map.nodes,\n            beziers = this.map.beziers;\n\n        var start_fn = function(d) {\n            // silence other listeners\n            d3.event.sourceEvent.stopPropagation();\n        },\n            drag_fn = function(d, angle, total_angle, center) {\n                var updated = build.rotate_nodes(selected_nodes, reactions,\n                                                 beziers, angle, center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            end_fn = function(d) {},\n            undo_fn = function(d, total_angle, center) {\n                // undo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, -total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            redo_fn = function(d, total_angle, center) {\n                // redo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            center_fn = function() {\n                return this.center;\n            }.bind(this);\n        this.rotation_drag = this._get_generic_angular_drag(start_fn, drag_fn, end_fn,\n                                                            undo_fn, redo_fn, center_fn,\n                                                            this.map.sel);\n        selection_background.call(this.rotation_drag);\n        this.selectable_drag = this.rotation_drag;\n    } else {\n        // turn off all listeners\n        hide_center.call(this);\n        selection_node.on('mousedown.center', null);\n        selection_background.on('mousedown.center', null);\n        selection_background.on('mousedown.drag', null);\n        selection_background.on('touchstart.drag', null);\n        this.rotation_drag = null;\n        this.selectable_drag = null;\n    }\n\n    // definitions\n    function show_center() {\n        var s = this.map.sel.selectAll('#rotation-center')\n                .data([0]),\n            enter = s.enter()\n                .append('g').attr('id', 'rotation-center');\n\n        enter.append('path').attr('d', 'M-32 0 L32 0')\n            .attr('class', 'rotation-center-line');\n        enter.append('path').attr('d', 'M0 -32 L0 32')\n            .attr('class', 'rotation-center-line');\n\n        s.attr('transform', 'translate('+this.center.x+','+this.center.y+')')\n            .attr('visibility', 'visible');\n\n        s.call(d3.behavior.drag()\n               .on('drag', function(sel) {\n                   var cur = utils.d3_transform_catch(sel.attr('transform')),\n                       new_loc = [d3.event.dx + cur.translate[0],\n                                  d3.event.dy + cur.translate[1]];\n                   sel.attr('transform', 'translate('+new_loc+')');\n                   this.center = { x: new_loc[0], y: new_loc[1] };\n               }.bind(this, s)));\n        s.on('mouseover', function() {\n            var current = parseFloat(this.selectAll('path').style('stroke-width'));\n            this.selectAll('path').style('stroke-width', current * 2 + 'px');\n        }.bind(s));\n        s.on('mouseout', function() {\n            this.selectAll('path').style('stroke-width', null);\n        }.bind(s));\n    }\n    function hide_center(sel) {\n        this.map.sel.select('#rotation-center')\n            .attr('visibility', 'hidden');\n    }\n    function average_location(nodes) {\n        var xs = [], ys = [];\n        for (var node_id in nodes) {\n            var node = nodes[node_id];\n            if (node.x !== undefined)\n                xs.push(node.x);\n            if (node.y !== undefined)\n                ys.push(node.y);\n        }\n        return { x: utils.mean(xs),\n                 y: utils.mean(ys) };\n    }\n}\n\nfunction toggle_selectable_click(on_off) {\n    /** With no argument, toggle the node click on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_mousedown === null;\n    if (on_off) {\n        var map = this.map;\n        this.selectable_mousedown = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // this.parentNode.__data__.was_selected = d3.select(this.parentNode).classed('selected');\n            // d3.select(this.parentNode).classed('selected', true);\n        };\n        this.selectable_click = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // click suppressed. This DOES have en effect.\n            if (d3.event.defaultPrevented) return;\n            // turn off the temporary selection so select_selectable\n            // works. This is a bit of a hack.\n            // if (!this.parentNode.__data__.was_selected)\n            //     d3.select(this.parentNode).classed('selected', false);\n            map.select_selectable(this, d);\n            // this.parentNode.__data__.was_selected = false;\n        };\n        this.node_mouseover = function(d) {\n            d3.select(this).style('stroke-width', null);\n            var current = parseFloat(d3.select(this).style('stroke-width'));\n            if (!d3.select(this.parentNode).classed('selected'))\n                d3.select(this).style('stroke-width', current * 3 + 'px');\n        };\n        this.node_mouseout = function(d) {\n            d3.select(this).style('stroke-width', null);\n        };\n    } else {\n        this.selectable_mousedown = null;\n        this.selectable_click = null;\n        this.node_mouseover = null;\n        this.node_mouseout = null;\n        this.map.sel.select('#nodes')\n            .selectAll('.node-circle').style('stroke-width', null);\n    }\n}\n\nfunction toggle_text_label_edit(on_off) {\n    /** With no argument, toggle the text edit on mousedown on/off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     The backup state is equal to selectable_mousedown.\n\n     */\n    if (on_off===undefined) on_off = this.text_edit_mousedown == null;\n    if (on_off) {\n        var map = this.map,\n            selection = this.selection;\n        this.text_label_mousedown = function() {\n            if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // run the callback\n            var coords_a = utils.d3_transform_catch(d3.select(this).attr('transform')).translate,\n                coords = {x: coords_a[0], y: coords_a[1]};\n            map.callback_manager.run('edit_text_label', null, d3.select(this), coords);\n            d3.event.stopPropagation();\n        };\n        this.text_label_click = null;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', true);\n        // add the new-label listener\n        this.map.sel.on('mousedown.new_text_label', function(node) {\n            // silence other listeners\n            d3.event.preventDefault();\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            this.map.callback_manager.run('new_text_label', null, coords);\n        }.bind(this, this.map.sel.node()));\n    } else {\n        this.text_label_mousedown = this.selectable_mousedown;\n        this.text_label_click = this.selectable_click;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', false);\n        // remove the new-label listener\n        this.map.sel.on('mousedown.new_text_label', null);\n        this.map.callback_manager.run('hide_text_label_editor');\n    }\n}\n\nfunction toggle_selectable_drag(on_off) {\n    /** With no argument, toggle the node drag & bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_drag===this.empty_behavior;\n    if (on_off) {\n        this.selectable_drag = this._get_selectable_drag(this.map, this.undo_stack);\n        this.bezier_drag = this._get_bezier_drag(this.map, this.undo_stack);\n    } else {\n        this.selectable_drag = this.empty_behavior;\n        this.bezier_drag = this.empty_behavior;\n    }\n}\nfunction toggle_label_drag(on_off) {\n    /** With no argument, toggle the label drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_drag===this.empty_behavior;\n    if (on_off) {\n        this.reaction_label_drag = this._get_reaction_label_drag(this.map);\n        this.node_label_drag = this._get_node_label_drag(this.map);\n    } else {\n        this.reaction_label_drag = this.empty_behavior;\n        this.node_label_drag = this.empty_behavior;\n    }\n}\n\nfunction toggle_label_mousedown(on_off) {\n    /** With no argument, toggle the reaction label mousedown on or off.z\n\n     Arguments\n     ---------\n\n     on_off: A boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_mousedown==null;\n    if (on_off) {\n        var map = this.map;\n        // TODO turn this feature (reaction label selection) back on, but\n        // with correct shift key management\n        this.label_mousedown = function(d) {\n            // if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // // select reaction/node\n            // d3.select(this.parentNode.parentNode)\n            //     .each(function(d) {\n            //         var node_ids = {};\n            //         for (var seg_id in d.segments) {\n            //             ['to_node_id', 'from_node_id'].forEach(function(n) {\n            //                 node_ids[d.segments[seg_id][n]] = true;\n            //             });\n            //         }\n            //         map.sel.selectAll('.selected').classed('selected', false);\n            //         map.sel.selectAll('.node')\n            //             .classed('selected', function(d) {\n            //                 return (d.node_id in node_ids);\n            //             });\n            //     });\n            // d3.event.stopPropagation();\n        };\n        this.label_mouseover = function(d) {\n            // d3.select(this).style('fill', 'rgb(56, 56, 184)');\n        };\n        this.label_mouseout = function(d) {\n            // d3.select(this).style('fill', null);\n        };\n    } else {\n        this.label_mousedown = null;\n        this.label_mouseover = null;\n        this.label_mouseout = null;\n        this.map.sel.select('.node-label,.reaction-label')\n            .style('fill', null);\n    }\n}\n\nfunction toggle_bezier_drag(on_off) {\n    /** With no argument, toggle the bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.bezier_drag===this.empty_behavior;\n    if (on_off) {\n        this.bezier_drag = this._get_bezier_drag(this.map);\n        this.bezier_mouseover = function(d) {\n            d3.select(this).style('stroke-width', String(3)+'px');\n        };\n        this.bezier_mouseout = function(d) {\n            d3.select(this).style('stroke-width', String(1)+'px');\n        };\n    } else {\n        this.bezier_drag = this.empty_behavior;\n        this.bezier_mouseover = null;\n        this.bezier_mouseout = null;\n    }\n}\n\nfunction turn_off_drag(sel) {\n    sel.on('mousedown.drag', null);\n    sel.on('touchstart.drag', null);\n}\n\nfunction _get_selectable_drag(map, undo_stack) {\n    /** Drag the selected nodes and text labels.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        the_timeout = null,\n        total_displacement = null,\n        // for nodes\n        node_ids_to_drag = null,\n        reaction_ids = null,\n        // for text labels\n        text_label_ids_to_drag = null,\n        move_label = function(text_label_id, displacement) {\n            var text_label = map.text_labels[text_label_id];\n            text_label.x = text_label.x + displacement.x;\n            text_label.y = text_label.y + displacement.y;\n        };\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners (e.g. nodes BELOW this one)\n        d3.event.sourceEvent.stopPropagation();\n        // remember the total displacement for later\n        // total_displacement = {};\n        total_displacement = {x: 0, y: 0};\n\n        // If a text label is selected, the rest is not necessary\n        if (d3.select(this).attr('class').indexOf('label') == -1) {\n            // Note that dragstart is called even for a click event\n            var data = this.parentNode.__data__,\n                bigg_id = data.bigg_id,\n                node_group = this.parentNode;\n            // Move element to back (for the next step to work). Wait 200ms\n            // before making the move, becuase otherwise the element will be\n            // deleted before the click event gets called, and selection\n            // will stop working.\n            the_timeout = setTimeout(function() {\n                node_group.parentNode.insertBefore(node_group,node_group.parentNode.firstChild);\n            }, 200);\n            // prepare to combine metabolites\n            map.sel.selectAll('.metabolite-circle')\n                .on('mouseover.combine', function(d) {\n                    if (d.bigg_id==bigg_id && d.node_id!=data.node_id) {\n                        d3.select(this).style('stroke-width', String(12)+'px')\n                            .classed('node-to-combine', true);\n                    }\n                }).on('mouseout.combine', function(d) {\n                    if (d.bigg_id==bigg_id) {\n                        map.sel.selectAll('.node-to-combine').style('stroke-width', String(2)+'px')\n                            .classed('node-to-combine', false);\n                    }\n                });\n        }\n    });\n    behavior.on(\"drag\", function(d) {\n        // if this node is not already selected, then select this one and\n        // deselect all other nodes. Otherwise, leave the selection alone.\n        if (!d3.select(this.parentNode).classed('selected'))\n            map.select_selectable(this, d);\n\n        // get the grabbed id\n        var grabbed = {};\n        if (d3.select(this).attr('class').indexOf('label')==-1) {\n            // if it is a node\n            grabbed['type'] = 'node';\n            grabbed['id'] = this.parentNode.__data__.node_id;\n        } else {\n            // if it is a text label\n            grabbed['type'] = 'label';\n            grabbed['id'] = this.__data__.text_label_id;\n        }\n\n        var selected_node_ids = map.get_selected_node_ids(),\n            selected_text_label_ids = map.get_selected_text_label_ids();\n        node_ids_to_drag = []; text_label_ids_to_drag = [];\n        // choose the nodes and text labels to drag\n        if (grabbed['type']=='node' &&\n            selected_node_ids.indexOf(grabbed['id'])==-1) {\n            node_ids_to_drag.push(grabbed['id']);\n        } else if (grabbed['type']=='label' &&\n                   selected_text_label_ids.indexOf(grabbed['id'])==-1) {\n            text_label_ids_to_drag.push(grabbed['id']);\n        } else {\n            node_ids_to_drag = selected_node_ids;\n            text_label_ids_to_drag = selected_text_label_ids;\n        }\n        reaction_ids = [];\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy };\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        node_ids_to_drag.forEach(function(node_id) {\n            // update data\n            var node = map.nodes[node_id],\n                updated = build.move_node_and_dependents(node, node_id,\n                                                         map.reactions,\n                                                         map.beziers,\n                                                         displacement);\n            reaction_ids = utils.unique_concat([reaction_ids, updated.reaction_ids]);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        text_label_ids_to_drag.forEach(function(text_label_id) {\n            move_label(text_label_id, displacement);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        // draw\n        map.draw_these_nodes(node_ids_to_drag);\n        map.draw_these_reactions(reaction_ids);\n        map.draw_these_text_labels(text_label_ids_to_drag);\n    });\n    behavior.on(\"dragend\", function() {\n        if (node_ids_to_drag===null) {\n            // Dragend can be called when drag has not been called. In this,\n            // case, do nothing.\n            total_displacement = null;\n            node_ids_to_drag = null;\n            text_label_ids_to_drag = null;\n            reaction_ids = null;\n            the_timeout = null;\n            return;\n        }\n        // look for mets to combine\n        var node_to_combine_array = [];\n        map.sel.selectAll('.node-to-combine').each(function(d) {\n            node_to_combine_array.push(d.node_id);\n        });\n        if (node_to_combine_array.length==1) {\n            // If a node is ready for it, combine nodes\n            var fixed_node_id = node_to_combine_array[0],\n                dragged_node_id = this.parentNode.__data__.node_id,\n                saved_dragged_node = utils.clone(map.nodes[dragged_node_id]),\n                segment_objs_moved_to_combine = combine_nodes_and_draw(fixed_node_id,\n                                                                       dragged_node_id);\n            undo_stack.push(function() {\n                // undo\n                // put the old node back\n                map.nodes[dragged_node_id] = saved_dragged_node;\n                var fixed_node = map.nodes[fixed_node_id],\n                    updated_reactions = [];\n                segment_objs_moved_to_combine.forEach(function(segment_obj) {\n                    var segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                    if (segment.from_node_id==fixed_node_id) {\n                        segment.from_node_id = dragged_node_id;\n                    } else if (segment.to_node_id==fixed_node_id) {\n                        segment.to_node_id = dragged_node_id;\n                    } else {\n                        console.error('Segment does not connect to fixed node');\n                    }\n                    // removed this segment_obj from the fixed node\n                    fixed_node.connected_segments = fixed_node.connected_segments.filter(function(x) {\n                        return !(x.reaction_id==segment_obj.reaction_id && x.segment_id==segment_obj.segment_id);\n                    });\n                    if (updated_reactions.indexOf(segment_obj.reaction_id)==-1)\n                        updated_reactions.push(segment_obj.reaction_id);\n                });\n                map.draw_these_nodes([dragged_node_id]);\n                map.draw_these_reactions(updated_reactions);\n            }, function () {\n                // redo\n                combine_nodes_and_draw(fixed_node_id, dragged_node_id);\n            });\n\n        } else {\n            // otherwise, drag node\n\n            // add to undo/redo stack\n            // remember the displacement, dragged nodes, and reactions\n            var saved_displacement = utils.clone(total_displacement),\n                // BUG TODO this variable disappears!\n                // Happens sometimes when you drag a node, then delete it, then undo twice\n                saved_node_ids = utils.clone(node_ids_to_drag),\n                saved_text_label_ids = utils.clone(text_label_ids_to_drag),\n                saved_reaction_ids = utils.clone(reaction_ids);\n            undo_stack.push(function() {\n                // undo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   utils.c_times_scalar(saved_displacement, -1));\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id,\n                               utils.c_times_scalar(saved_displacement, -1));\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            }, function () {\n                // redo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   saved_displacement);\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id, saved_displacement);\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            });\n        }\n\n        // stop combining metabolites\n        map.sel.selectAll('.metabolite-circle')\n            .on('mouseover.combine', null)\n            .on('mouseout.combine', null);\n\n        // clear the timeout\n        clearTimeout(the_timeout);\n\n        // clear the shared variables\n        total_displacement = null;\n        node_ids_to_drag = null;\n        text_label_ids_to_drag = null;\n        reaction_ids = null;\n        the_timeout = null;\n    });\n    return behavior;\n\n    // definitions\n    function combine_nodes_and_draw(fixed_node_id, dragged_node_id) {\n        var dragged_node = map.nodes[dragged_node_id],\n            fixed_node = map.nodes[fixed_node_id],\n            updated_segment_objs = [];\n        dragged_node.connected_segments.forEach(function(segment_obj) {\n            // change the segments to reflect\n            var segment;\n            try {\n                segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segment ' + segment_obj.segment_id);\n                return;\n            }\n            if (segment.from_node_id==dragged_node_id) segment.from_node_id = fixed_node_id;\n            else if (segment.to_node_id==dragged_node_id) segment.to_node_id = fixed_node_id;\n            else {\n                console.error('Segment does not connect to dragged node');\n                return;\n            }\n            // moved segment_obj to fixed_node\n            fixed_node.connected_segments.push(segment_obj);\n            updated_segment_objs.push(utils.clone(segment_obj));\n            return;\n        });\n        // delete the old node\n        map.delete_node_data([dragged_node_id]);\n        // turn off the class\n        map.sel.selectAll('.node-to-combine').classed('node-to-combine', false);\n        // draw\n        map.draw_everything();\n        // return for undo\n        return updated_segment_objs;\n    }\n}\nfunction _get_bezier_drag(map) {\n    var move_bezier = function(reaction_id, segment_id, bez, bezier_id, displacement) {\n        var segment = map.reactions[reaction_id].segments[segment_id];\n        segment[bez] = utils.c_plus_c(segment[bez], displacement);\n        map.beziers[bezier_id].x = segment[bez].x;\n        map.beziers[bezier_id].y = segment[bez].y;\n    },\n        start_fn = function(d) {\n            d.dragging = true;\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        end_fn = function(d) {\n            d.dragging = false;\n        },\n        undo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_reaction_label_drag(map) {\n    var move_label = function(reaction_id, displacement) {\n        var reaction = map.reactions[reaction_id];\n        reaction.label_x = reaction.label_x + displacement.x;\n        reaction.label_y = reaction.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.reaction_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_node_label_drag(map) {\n    var move_label = function(node_id, displacement) {\n        var node = map.nodes[node_id];\n        node.label_x = node.label_x + displacement.x;\n        node.label_y = node.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.node_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_nodes([d.node_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\n\nfunction _get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn\n\n     undo_fn\n\n     redo_fn\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_displacement,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_displacement = { x: 0, y: 0 };\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] };\n\n        // remember the displacement\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        drag_fn(d, displacement, total_displacement, location);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_displacement = utils.clone(total_displacement), // BUG TODO this variable disappears!\n            saved_location = { x: d3.mouse(rel)[0],\n                               y: d3.mouse(rel)[1] };\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_displacement, saved_location);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_displacement, saved_location);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n\nfunction _get_generic_angular_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                   get_center, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo. Supplies angles in\n     place of displacements.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn:\n\n     undo_fn:\n\n     redo_fn:\n\n     get_center:\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_angle,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_angle = 0;\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] },\n            center = get_center(),\n            angle = utils.angle_for_event(displacement,\n                                          location,\n                                          center);\n        // remember the displacement\n        total_angle = total_angle + angle;\n        drag_fn(d, angle, total_angle, center);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_angle = total_angle,\n            saved_center = utils.clone(get_center());\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_angle, saved_center);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_angle, saved_center);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n","/** Brush. Define a brush to select elements in a map.\n\n Arguments\n ---------\n\n selection: A d3 selection to place the brush in.\n\n is_enabled: Whether to turn the brush on.\n\n map: An instance of escher.Map.\n\n insert_after: A d3 selector string to choose the svg element that the brush\n will be inserted after. Often a canvas element (e.g. '.canvas-group').\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Brush = utils.make_class();\nBrush.prototype = {\n    init: init,\n    toggle: toggle,\n    setup_selection_brush: setup_selection_brush\n};\nmodule.exports = Brush;\n\n\n// definitions\nfunction init(selection, is_enabled, map, insert_after) {\n    this.brush_sel = selection.append('g')\n        .attr('id', 'brush-container');\n    var node = this.brush_sel.node(),\n        insert_before_node = selection.select(insert_after).node().nextSibling;\n    if (!(node===insert_before_node))\n        node.parentNode.insertBefore(node, insert_before_node);\n    this.enabled = is_enabled;\n    this.map = map;\n};\n\nfunction brush_is_enabled() {\n    /** Returns a boolean for the on/off status of the brush\n\n     */\n    return this.map.sel.select('.brush').empty();\n}\nfunction toggle(on_off) {\n    /** Turn the brush on or off\n\n     */\n    if (on_off===undefined) on_off = !this.enabled;\n\n    if (on_off) {\n        this.selection_brush = this.setup_selection_brush();\n    } else {\n        this.brush_sel.selectAll('.brush').remove();\n    }\n}\nfunction setup_selection_brush() {\n    var selection = this.brush_sel,\n        selectable_selection = this.map.sel.selectAll('#nodes,#text-labels'),\n        size_and_location = this.map.canvas.size_and_location(),\n        width = size_and_location.width,\n        height = size_and_location.height,\n        x = size_and_location.x,\n        y = size_and_location.y;\n\n    // clear existing brush\n    selection.selectAll('g').remove();\n\n    var brush_fn = d3.svg.brush()\n            .x(d3.scale.identity().domain([x, x+width]))\n            .y(d3.scale.identity().domain([y, y+height]))\n            .on(\"brush\", function(key_manager) {\n                var shift_key_on = key_manager.held_keys.shift,\n                    extent = d3.event.target.extent(),\n                    selection;\n                if (shift_key_on) {\n                    // when shift is pressed, ignore the currently selected nodes\n                    selection = selectable_selection\n                        .selectAll('.node:not(.selected),.text-label:not(.selected)');\n                } else {\n                    // otherwise, brush all nodes\n                    selection = selectable_selection\n                        .selectAll('.node,.text-label');\n                }\n                selection.classed(\"selected\", function(d) {\n                    var sx = d.x, sy = d.y;\n                    return extent[0][0] <= sx && sx < extent[1][0]\n                        && extent[0][1] <= sy && sy < extent[1][1];\n                });\n            }.bind(null, this.map.key_manager))\n            .on(\"brushend\", function() {\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);\n            }),\n        brush = selection.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush_fn);\n\n    // turn off the mouse crosshair\n    selection.selectAll('.background')\n        .classed('cursor-grab', false)\n        .classed('cursor-grabbing', false)\n        .style('cursor', null);\n\n    return brush;\n}\n","/** BuildInput */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar completely = require('./complete.ly');\nvar DirectionArrow = require('./DirectionArrow');\nvar CobraModel = require('./CobraModel');\n\n\nvar BuildInput = utils.make_class();\nBuildInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    toggle: toggle,\n    show_dropdown: show_dropdown,\n    hide_dropdown: hide_dropdown,\n    place_at_selected: place_at_selected,\n    place: place,\n    reload_at_selected: reload_at_selected,\n    reload: reload,\n    toggle_start_reaction_listener: toggle_start_reaction_listener,\n    hide_target: hide_target,\n    show_target: show_target\n};\nmodule.exports = BuildInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container, settings) {\n    // set up container\n    var new_sel = selection.append('div').attr('id', 'rxn-input');\n    this.placed_div = PlacedDiv(new_sel, map, {x: 240, y: 0});\n    this.placed_div.hide();\n\n    // set up complete.ly\n    var c = completely(new_sel.node(), { backgroundColor: '#eee' });\n\n    d3.select(c.input);\n    this.completely = c;\n    // close button\n    new_sel.append('button').attr('class', \"button input-close-button\")\n        .text(\"×\")\n        .on('mousedown', function() { this.hide_dropdown(); }.bind(this));\n\n    // map\n    this.map = map;\n    // set up the reaction direction arrow\n    var default_angle = 90; // degrees\n    this.direction_arrow = new DirectionArrow(map.sel);\n    this.direction_arrow.set_rotation(default_angle);\n    this.setup_map_callbacks(map);\n\n    // zoom container\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n\n    // settings\n    this.settings = settings;\n\n    // toggle off\n    this.toggle(false);\n    this.target_coords = null;\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('select_metabolite_with_id.input', function(selected_node, coords) {\n        if (this.is_active) this.reload(selected_node, coords, false);\n        this.hide_target();\n    }.bind(this));\n    map.callback_manager.set('select_selectable.input', function(count, selected_node, coords) {\n        this.hide_target();\n        if (count == 1 && this.is_active && coords) {\n            this.reload(selected_node, coords, false);\n        } else {\n            this.toggle(false);\n        }\n    }.bind(this));\n    map.callback_manager.set('deselect_nodes', function() {\n        this.direction_arrow.hide();\n        this.hide_dropdown();\n    }.bind(this));\n\n    // svg export\n    map.callback_manager.set('before_svg_export', function() {\n        this.direction_arrow.hide();\n        this.hide_target();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.input', function() {\n        if (this.is_active) {\n            this.place_at_selected();\n        }\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n    if (this.is_active) {\n        this.toggle_start_reaction_listener(true);\n        if (this.target_coords !== null)\n            this.show_dropdown(this.target_coords);\n        else this.reload_at_selected();\n        this.map.set_status('Click on the canvas or an existing metabolite');\n        this.direction_arrow.show();\n        // escape key\n        this.escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.hide_dropdown();\n            }.bind(this), 'build_input');\n    } else {\n        this.toggle_start_reaction_listener(false);\n        this.placed_div.hide();\n        this.completely.input.blur();\n        this.completely.hideDropDown();\n        this.map.set_status(null);\n        this.direction_arrow.hide();\n        if (this.escape) this.escape.clear();\n        this.escape = null;\n    }\n}\nfunction show_dropdown(coords) {\n    this.placed_div.place(coords);\n    this.completely.input.blur();\n    this.completely.repaint();\n    this.completely.setText(\"\");\n    this.completely.input.focus();\n}\nfunction hide_dropdown() {\n    this.placed_div.hide();\n    this.completely.hideDropDown();\n}\nfunction place_at_selected() {\n    /** Place autocomplete box at the first selected node.\n\n     */\n\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    this.place(coords);\n}\nfunction place(coords) {\n    this.placed_div.place(coords);\n    this.direction_arrow.set_location(coords);\n    this.direction_arrow.show();\n}\n\nfunction reload_at_selected() {\n    /** Reload data for autocomplete box and redraw box at the first\n     selected node.\n\n     */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return false;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    // reload the reaction input\n    this.reload(selected_node, coords, false);\n    return true;\n}\nfunction reload(selected_node, coords, starting_from_scratch) {\n    /** Reload data for autocomplete box and redraw box at the new\n     coordinates.\n\n     */\n\n    // try finding the selected node\n    if (!starting_from_scratch && !selected_node) {\n        console.error('No selected node, and not starting from scratch');\n        return;\n    }\n\n    this.place(coords);\n\n    // blur\n    this.completely.input.blur();\n    this.completely.repaint(); // put in place()?\n\n    if (this.map.cobra_model===null) {\n        this.completely.setText('Cannot add: No model.');\n        return;\n    }\n\n    // settings\n    var show_names = this.settings.get_option('identifiers_on_map') == 'name',\n        allow_duplicates = this.settings.get_option('allow_building_duplicate_reactions');\n\n    // Find selected\n    var options = [],\n        cobra_reactions = this.map.cobra_model.reactions,\n        cobra_metabolites = this.map.cobra_model.metabolites,\n        reactions = this.map.reactions,\n        has_data_on_reactions = this.map.has_data_on_reactions,\n        reaction_data = this.map.reaction_data,\n        reaction_data_styles = this.map.reaction_data_styles,\n        selected_m_name = (selected_node ? (show_names ? selected_node.name : selected_node.bigg_id) : ''),\n        bold_mets_in_str = function(str, mets) {\n            return str.replace(new RegExp('(^| )(' + mets.join('|') + ')($| )', 'g'),\n                               '$1<b>$2</b>$3');\n        };\n\n    // for reactions\n    var reaction_suggestions = {};\n    for (var bigg_id in cobra_reactions) {\n        var reaction = cobra_reactions[bigg_id],\n            reaction_name = reaction.name,\n            show_r_name = (show_names ? reaction_name : bigg_id);\n\n        // ignore drawn reactions\n        if ((!allow_duplicates) && already_drawn(bigg_id, reactions))\n            continue;\n\n        // check segments for match to selected metabolite\n        for (var met_bigg_id in reaction.metabolites) {\n\n            // if starting with a selected metabolite, check for that id\n            if (starting_from_scratch || met_bigg_id == selected_node.bigg_id) {\n\n                // don't add suggestions twice\n                if (bigg_id in reaction_suggestions) continue;\n\n                var met_name = cobra_metabolites[met_bigg_id].name;\n\n                if (has_data_on_reactions) {\n                    options.push({ reaction_data: reaction.data,\n                                   html: ('<b>' + show_r_name + '</b>' +\n                                          ': ' +\n                                          reaction.data_string),\n                                   matches: [show_r_name],\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                } else {\n                    // get the metabolite names or IDs\n                    var mets = {},\n                        show_met_names = [];\n                    if (show_names) {\n                        for (var met_id in reaction.metabolites) {\n                            var name = cobra_metabolites[met_id].name;\n                            mets[name] = reaction.metabolites[met_id];\n                            show_met_names.push(name);\n                        }\n                    } else {\n                        mets = utils.clone(reaction.metabolites);\n                        for (var met_id in reaction.metabolites) {\n                            show_met_names.push(met_id);\n                        }\n                    }\n                    var key = show_names ? 'name' : 'bigg_id',\n                        show_gene_names = reaction.genes.map(function(g_obj) {\n                            return g_obj[key];\n                        });\n                    // get the reaction string\n                    var reaction_string = CobraModel.build_reaction_string(mets,\n                                                                           reaction.reversibility,\n                                                                           reaction.lower_bound,\n                                                                           reaction.upper_bound);\n                    options.push({ html: ('<b>' + show_r_name + '</b>' +\n                                          '\\t' +\n                                          bold_mets_in_str(reaction_string, [selected_m_name])),\n                                   matches: [show_r_name].concat(show_met_names).concat(show_gene_names),\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                }\n            }\n        }\n    }\n\n    // Generate the array of reactions to suggest and sort it\n    var sort_fn;\n    if (has_data_on_reactions) {\n        sort_fn = function(x, y) {\n            return Math.abs(y.reaction_data) - Math.abs(x.reaction_data);\n        };\n    } else {\n        sort_fn = function(x, y) {\n            return (x.html.toLowerCase() < y.html.toLowerCase() ? -1 : 1);\n        };\n    }\n    options = options.sort(sort_fn);\n    // set up the box with data, searching for first num results\n    var num = 20,\n        complete = this.completely;\n    complete.options = options;\n\n    // TODO test this behavior\n    // if (strings_to_display.length==1) complete.setText(strings_to_display[0]);\n    // else complete.setText(\"\");\n    complete.setText(\"\");\n\n    var direction_arrow = this.direction_arrow,\n        check_and_build = function(id) {\n            if (id !== null) {\n                // make sure the selected node exists, in case changes were made in the meantime\n                if (starting_from_scratch) {\n                    this.map.new_reaction_from_scratch(id,\n                                                       coords,\n                                                       direction_arrow.get_rotation());\n                } else {\n                    if (!(selected_node.node_id in this.map.nodes)) {\n                        console.error('Selected node no longer exists');\n                        this.hide_dropdown();\n                        return;\n                    }\n                    this.map.new_reaction_for_metabolite(id,\n                                                         selected_node.node_id,\n                                                         direction_arrow.get_rotation());\n                }\n            }\n        }.bind(this);\n    complete.onEnter = function(id) {\n        this.setText(\"\");\n        this.onChange(\"\");\n        check_and_build(id);\n    };\n    complete.repaint();\n    this.completely.input.focus();\n\n    //definitions\n    function already_drawn(bigg_id, reactions) {\n        for (var drawn_id in reactions) {\n            if (reactions[drawn_id].bigg_id==bigg_id)\n                return true;\n        }\n        return false;\n    };\n}\nfunction toggle_start_reaction_listener(on_off) {\n    /** Toggle listening for a click to place a new reaction on the canvas.\n\n     */\n    if (on_off===undefined)\n        this.start_reaction_listener = !this.start_reaction_listener;\n    else if (this.start_reaction_listener==on_off)\n        return;\n    else\n        this.start_reaction_listener = on_off;\n\n    if (this.start_reaction_listener) {\n        this.map.sel.on('click.start_reaction', function(node) {\n            // TODO fix this hack\n            if (this.direction_arrow.dragging) return;\n            // reload the reaction input\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            // unselect metabolites\n            this.map.deselect_nodes();\n            this.map.deselect_text_labels();\n            // reload the reaction input\n            this.reload(null, coords, true);\n            // generate the target symbol\n            this.show_target(this.map, coords);\n        }.bind(this, this.map.sel.node()));\n        this.map.sel.classed('start-reaction-cursor', true);\n    } else {\n        this.map.sel.on('click.start_reaction', null);\n        this.map.sel.classed('start-reaction-cursor', false);\n        this.hide_target();\n    }\n}\n\nfunction hide_target() {\n    if (this.target_coords)\n        this.map.sel.selectAll('.start-reaction-target').remove();\n    this.target_coords = null;\n}\nfunction show_target(map, coords) {\n    var s = map.sel.selectAll('.start-reaction-target').data([12, 5]);\n    s.enter().append('circle')\n        .classed('start-reaction-target', true)\n        .attr('r', function(d) { return d; })\n        .style('stroke-width', 4);\n    s.style('visibility', 'visible')\n        .attr('transform', 'translate('+coords.x+','+coords.y+')');\n    this.target_coords = coords;\n}\n","/** For documentation of this class, see docs/javascript_api.rst\n\n */\n\n/* global d3, $ */\n\nvar utils = require('./utils');\nvar BuildInput = require('./BuildInput');\nvar ZoomContainer = require('./ZoomContainer');\nvar Map = require('./Map');\nvar CobraModel = require('./CobraModel');\nvar Brush = require('./Brush');\nvar CallbackManager = require('./CallbackManager');\nvar ui = require('./ui');\nvar SearchBar = require('./SearchBar');\nvar Settings = require('./Settings');\nvar SettingsMenu = require('./SettingsMenu');\nvar TextEditInput = require('./TextEditInput');\nvar QuickJump = require('./QuickJump');\nvar data_styles = require('./data_styles');\nvar builder_embed = require('./inline').builder_embed;\n\n\nvar Builder = utils.make_class();\nBuilder.prototype = {\n    init: init,\n    load_map: load_map,\n    load_model: load_model,\n    _set_mode: _set_mode,\n    view_mode: view_mode,\n    build_mode: build_mode,\n    brush_mode: brush_mode,\n    zoom_mode: zoom_mode,\n    rotate_mode: rotate_mode,\n    text_mode: text_mode,\n    set_reaction_data: set_reaction_data,\n    set_metabolite_data: set_metabolite_data,\n    set_gene_data: set_gene_data,\n    _update_data: _update_data,\n    _toggle_direction_buttons: _toggle_direction_buttons,\n    _setup_menu: _setup_menu,\n    _setup_simple_zoom_buttons: _setup_simple_zoom_buttons,\n    _setup_status: _setup_status,\n    _setup_quick_jump: _setup_quick_jump,\n    _setup_modes: _setup_modes,\n    _get_keys: _get_keys,\n    _setup_confirm_before_exit: _setup_confirm_before_exit\n};\nmodule.exports = Builder;\n\n\n// definitions\nfunction init(map_data, model_data, embedded_css, selection, options) {\n\n    // defaults\n    if (!selection)\n        selection = d3.select('body').append('div');\n    if (!options)\n        options = {};\n    if (!embedded_css)\n        embedded_css = builder_embed;\n\n    this.map_data = map_data;\n    this.model_data = model_data;\n    this.embedded_css = embedded_css;\n    this.selection = selection;\n\n    // apply this object as data for the selection\n    this.selection.datum(this);\n\n    // set defaults\n    this.options = utils.set_options(options, {\n        // view options\n        menu: 'all',\n        scroll_behavior: 'pan',\n        use_3d_transform: false,\n        enable_editing: true,\n        enable_keys: true,\n        enable_search: true,\n        fill_screen: false,\n        zoom_to_element: null,\n        // map, model, and styles\n        starting_reaction: null,\n        never_ask_before_quit: false,\n        unique_map_id: null,\n        primary_metabolite_radius: 20,\n        secondary_metabolite_radius: 10,\n        marker_radius: 5,\n        gene_font_size: 18,\n        hide_secondary_metabolites: false,\n        show_gene_reaction_rules: false,\n        hide_all_labels: false,\n        // applied data\n        // reaction\n        reaction_data: null,\n        reaction_styles: ['color', 'size', 'text'],\n        reaction_compare_style: 'log2_fold',\n        reaction_scale: [{ type: 'min', color: '#c8c8c8', size: 12 },\n                         { type: 'median', color: '#9696ff', size: 20 },\n                         { type: 'max', color: '#ff0000', size: 25 }],\n        reaction_no_data_color: '#dcdcdc',\n        reaction_no_data_size: 8,\n        // gene\n        gene_data: null,\n        and_method_in_gene_reaction_rule: 'mean',\n        // metabolite\n        metabolite_data: null,\n        metabolite_styles: ['color', 'size', 'text'],\n        metabolite_compare_style: 'log2_fold',\n        metabolite_scale: [ { type: 'min', color: '#fffaf0', size: 20 },\n                            { type: 'median', color: '#f1c470', size: 30 },\n                            { type: 'max', color: '#800000', size: 40 } ],\n        metabolite_no_data_color: '#ffffff',\n        metabolite_no_data_size: 10,\n        // View and build options\n        identifiers_on_map: 'bigg_id',\n        highlight_missing: false,\n        allow_building_duplicate_reactions: false,\n        // Callbacks\n        first_load_callback: null\n    }, {\n        primary_metabolite_radius: true,\n        secondary_metabolite_radius: true,\n        marker_radius: true,\n        gene_font_size: true,\n        reaction_no_data_size: true,\n        metabolite_no_data_size: true\n    });\n\n    // check the location\n    if (utils.check_for_parent_tag(this.selection, 'svg')) {\n        throw new Error('Builder cannot be placed within an svg node '+\n                        'becuase UI elements are html-based.');\n    }\n\n    // Initialize the settings\n    var set_option = function(option, new_value) {\n        this.options[option] = new_value;\n    }.bind(this),\n        get_option = function(option) {\n            return this.options[option];\n        }.bind(this),\n        // the options that are erased when the settings menu is canceled\n        conditional_options = ['hide_secondary_metabolites', 'show_gene_reaction_rules',\n                               'hide_all_labels', 'scroll_behavior', 'use_3d_transform', 'reaction_styles',\n                               'reaction_compare_style', 'reaction_scale',\n                               'reaction_no_data_color', 'reaction_no_data_size',\n                               'and_method_in_gene_reaction_rule', 'metabolite_styles',\n                               'metabolite_compare_style', 'metabolite_scale',\n                               'metabolite_no_data_color', 'metabolite_no_data_size',\n                               'identifiers_on_map', 'highlight_missing',\n                               'allow_building_duplicate_reactions',];\n    this.settings = new Settings(set_option, get_option, conditional_options);\n\n    // check the scales have max and min\n    ['reaction_scale', 'metabolite_scale'].forEach(function(name) {\n        this.settings.streams[name].onValue(function(val) {\n            ['min', 'max'].forEach(function(type) {\n                var has = val.reduce(function(has_found, scale_el) {\n                    return has_found || (scale_el.type == type);\n                }, false);\n                if (!has) {\n                    val.push({ type: type, color: '#ffffff', size: 10 });\n                    this.settings.set_conditional(name, val);\n                }\n            }.bind(this));\n        }.bind(this));\n    }.bind(this));\n    // TODO warn about repeated types in the scale\n\n    // set up this callback manager\n    this.callback_manager = CallbackManager();\n    if (this.options.first_load_callback !== null)\n        this.callback_manager.set('first_load', this.options.first_load_callback);\n\n    // load the model, map, and update data in both\n    this.load_model(this.model_data, false);\n    this.load_map(this.map_data, false);\n    this._update_data(true, true);\n\n    // setting callbacks\n    // TODO enable atomic updates. Right now, every time\n    // the menu closes, everything is drawn.\n    this.settings.status_bus\n        .onValue(function(x) {\n            if (x === 'accepted') {\n                this._update_data(true, true, ['reaction', 'metabolite'], false);\n                if (this.zoom_container !== null) {\n                    var new_behavior = this.settings.get_option('scroll_behavior');\n                    this.zoom_container.set_scroll_behavior(new_behavior);\n                    this.zoom_container.set_use_3d_transform(this.settings.get_option('use_3d_transform'));\n                }\n                if (this.map !== null) {\n                    this.map.draw_all_nodes(false);\n                    this.map.draw_all_reactions(true, false);\n                }\n            }\n        }.bind(this));\n\n    this.callback_manager.run('first_load', this);\n}\n\n// Definitions\nfunction load_model(model_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Check the cobra model\n    if (model_data === null)\n        this.cobra_model = null;\n    else\n        this.cobra_model = CobraModel.from_cobra_json(model_data);\n\n    if (this.map) {\n        this.map.cobra_model = this.cobra_model;\n        if (should_update_data)\n            this._update_data(true, false);\n        if (this.settings.get_option('highlight_missing'))\n            this.map.draw_all_reactions(false, false);\n    }\n\n    this.callback_manager.run('load_model', null, model_data, should_update_data);\n}\n\nfunction load_map(map_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst\n\n     */\n\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Begin with some definitions\n    var selectable_mousedown_enabled = true,\n        shift_key_on = false;\n\n    // remove the old builder\n    utils.remove_child_nodes(this.selection);\n\n    // set up the zoom container\n    this.zoom_container = new ZoomContainer(this.selection,\n                                            this.options.scroll_behavior,\n                                            this.options.use_3d_transform,\n                                            this.options.fill_screen);\n    var zoomed_sel = this.zoom_container.zoomed_sel;\n    var svg = this.zoom_container.svg;\n\n    if (map_data!==null) {\n        // import map\n        this.map = Map.from_data(map_data,\n                                 svg,\n                                 this.embedded_css,\n                                 zoomed_sel,\n                                 this.zoom_container,\n                                 this.settings,\n                                 this.cobra_model,\n                                 this.options.enable_search);\n    } else {\n        // new map\n        this.map = new Map(svg,\n                           this.embedded_css,\n                           zoomed_sel,\n                           this.zoom_container,\n                           this.settings,\n                           this.cobra_model,\n                           null,\n                           this.options.enable_search);\n    }\n    // zoom container status changes\n    this.zoom_container.callback_manager.set('svg_start', function() {\n        this.map.set_status('Drawing ...');\n    }.bind(this));\n    this.zoom_container.callback_manager.set('svg_finish', function() {\n        this.map.set_status('');\n    }.bind(this));\n\n    // set the data for the map\n    if (should_update_data)\n        this._update_data(false, true);\n\n    // set up the reaction input with complete.ly\n    this.build_input = BuildInput(this.selection, this.map,\n                                  this.zoom_container, this.settings);\n\n    // set up the text edit input\n    this.text_edit_input = TextEditInput(this.selection, this.map,\n                                         this.zoom_container);\n\n    // set up the Brush\n    this.brush = new Brush(zoomed_sel, false, this.map, '.canvas-group');\n    this.map.canvas.callback_manager.set('resize', function() {\n        this.brush.toggle(true);\n    }.bind(this));\n\n    // set up the modes\n    this._setup_modes(this.map, this.brush, this.zoom_container);\n\n    var s = this.selection\n            .append('div').attr('class', 'search-menu-container')\n            .append('div').attr('class', 'search-menu-container-inline'),\n        menu_div = s.append('div'),\n        search_bar_div = s.append('div'),\n        button_div = this.selection.append('div');\n\n    // set up the search bar\n    this.search_bar = SearchBar(search_bar_div, this.map.search_index,\n                                this.map);\n    // set up the hide callbacks\n    this.search_bar.callback_manager.set('show', function() {\n        this.settings_bar.toggle(false);\n    }.bind(this));\n\n    // set up the settings\n    var settings_div = this.selection.append('div');\n    this.settings_bar = SettingsMenu(settings_div, this.settings, this.map,\n                                     function(type, on_off) {\n                                         // temporarily set the abs type, for\n                                         // previewing it in the Settings\n                                         // menu\n                                         var o = this.options[type + '_styles'];\n                                         if (on_off && o.indexOf('abs') == -1)\n                                             o.push('abs');\n                                         else if (!on_off) {\n                                             var i = o.indexOf('abs');\n                                             if (i != -1)\n                                                 this.options[type + '_styles'] = o.slice(0, i).concat(o.slice(i + 1));\n                                         }\n                                         this._update_data(false, true, type);\n                                     }.bind(this));\n    this.settings_bar.callback_manager.set('show', function() {\n        this.search_bar.toggle(false);\n    }.bind(this));\n\n    // set up key manager\n    var keys = this._get_keys(this.map, this.zoom_container,\n                              this.search_bar, this.settings_bar,\n                              this.options.enable_editing);\n    this.map.key_manager.assigned_keys = keys;\n    // tell the key manager about the reaction input and search bar\n    this.map.key_manager.input_list = [this.build_input, this.search_bar,\n                                       this.settings_bar, this.text_edit_input];\n    // make sure the key manager remembers all those changes\n    this.map.key_manager.update();\n    // turn it on/off\n    this.map.key_manager.toggle(this.options.enable_keys);\n\n    // set up menu and status bars\n    if (this.options.menu=='all') {\n        this._setup_menu(menu_div, button_div, this.map, this.zoom_container, this.map.key_manager, keys,\n                         this.options.enable_editing, this.options.enable_keys);\n    } else if (this.options.menu=='zoom') {\n        this._setup_simple_zoom_buttons(button_div, keys);\n    }\n\n    // setup selection box\n    if (this.options.zoom_to_element) {\n        var type = this.options.zoom_to_element.type,\n            element_id = this.options.zoom_to_element.id;\n        if (typeof type === 'undefined' || ['reaction', 'node'].indexOf(type) == -1)\n            throw new Error('zoom_to_element type must be \"reaction\" or \"node\"');\n        if (typeof element_id === 'undefined')\n            throw new Error('zoom_to_element must include id');\n        if (type == 'reaction')\n            this.map.zoom_to_reaction(element_id);\n        else if (type == 'node')\n            this.map.zoom_to_node(element_id);\n    } else if (map_data !== null) {\n        this.map.zoom_extent_canvas();\n    } else {\n        if (this.options.starting_reaction !== null && this.cobra_model !== null) {\n            // Draw default reaction if no map is provided\n            var size = this.zoom_container.get_size();\n            var start_coords = { x: size.width / 2,\n                                 y: size.height / 4 };\n            this.map.new_reaction_from_scratch(this.options.starting_reaction, start_coords, 90);\n            this.map.zoom_extent_nodes();\n        } else {\n            this.map.zoom_extent_canvas();\n        }\n    }\n\n    // status in both modes\n    var status = this._setup_status(this.selection, this.map);\n\n    // set up quick jump\n    this._setup_quick_jump(this.selection);\n\n    // start in zoom mode for builder, view mode for viewer\n    if (this.options.enable_editing)\n        this.zoom_mode();\n    else\n        this.view_mode();\n\n    // confirm before leaving the page\n    if (this.options.enable_editing)\n        this._setup_confirm_before_exit();\n\n    // draw\n    this.map.draw_everything();\n}\n\nfunction _set_mode(mode) {\n    this.search_bar.toggle(false);\n    // input\n    this.build_input.toggle(mode=='build');\n    this.build_input.direction_arrow.toggle(mode=='build');\n    if (this.options.menu=='all' && this.options.enable_editing)\n        this._toggle_direction_buttons(mode=='build');\n    // brush\n    this.brush.toggle(mode=='brush');\n    // zoom\n    this.zoom_container.toggle_pan_drag(mode=='zoom' || mode=='view');\n    // resize canvas\n    this.map.canvas.toggle_resize(mode=='zoom' || mode=='brush');\n    // Behavior. Be careful of the order becuase rotation and\n    // toggle_selectable_drag both use Behavior.selectable_drag.\n    if (mode == 'rotate') {\n        this.map.behavior.toggle_selectable_drag(false); // before toggle_rotation_mode\n        this.map.behavior.toggle_rotation_mode(true);\n    } else {\n        this.map.behavior.toggle_rotation_mode(mode=='rotate'); // before toggle_selectable_drag\n        this.map.behavior.toggle_selectable_drag(mode=='brush');\n    }\n    this.map.behavior.toggle_selectable_click(mode=='build' || mode=='brush');\n    this.map.behavior.toggle_label_drag(mode=='brush');\n    this.map.behavior.toggle_label_mousedown(mode=='brush');\n    this.map.behavior.toggle_text_label_edit(mode=='text');\n    this.map.behavior.toggle_bezier_drag(mode=='brush');\n    // edit selections\n    if (mode=='view' || mode=='text')\n        this.map.select_none();\n    if (mode=='rotate')\n        this.map.deselect_text_labels();\n    this.map.draw_everything();\n}\n\nfunction view_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('view_mode');\n    this._set_mode('view');\n}\n\nfunction build_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('build_mode');\n    this._set_mode('build');\n}\n\nfunction brush_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('brush_mode');\n    this._set_mode('brush');\n}\n\nfunction zoom_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('zoom_mode');\n    this._set_mode('zoom');\n}\n\nfunction rotate_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('rotate_mode');\n    this._set_mode('rotate');\n}\n\nfunction text_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('text_mode');\n    this._set_mode('text');\n}\n\nfunction set_reaction_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.reaction_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_gene_data(data, clear_gene_reaction_rules) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (clear_gene_reaction_rules) // default undefined\n        this.settings.set_conditional('show_gene_reaction_rules', false);\n    this.options.gene_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_metabolite_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.metabolite_data = data;\n    this._update_data(true, true, 'metabolite');\n    this.map.set_status('');\n}\n\n\nfunction _update_data(update_model, update_map, kind, should_draw) {\n    /** Set data and settings for the model.\n\n     Arguments\n     ---------\n\n     update_model: (Boolean) Update data for the model.\n\n     update_map: (Boolean) Update data for the map.\n\n     kind: (Optional, Default: all) An array defining which data is being\n     updated that can include any of: ['reaction', 'metabolite'].\n\n     should_draw: (Optional, Default: true) Whether to redraw the update\n     sections of the map.\n\n     */\n\n    // defaults\n    if (kind === undefined)\n        kind = ['reaction', 'metabolite'];\n    if (should_draw === undefined)\n        should_draw = true;\n\n    var update_metabolite_data = (kind.indexOf('metabolite') != -1),\n        update_reaction_data = (kind.indexOf('reaction') != -1),\n        met_data_object,\n        reaction_data_object,\n        gene_data_object;\n\n    // -------------------\n    // First map, and draw\n\n    // metabolite data\n    if (update_metabolite_data && update_map && this.map !== null) {\n        met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                       'metabolite_data');\n        this.map.apply_metabolite_data_to_map(met_data_object);\n        if (should_draw)\n            this.map.draw_all_nodes(false);\n    }\n\n    // reaction data\n    if (update_reaction_data) {\n        if (this.options.reaction_data !== null && update_map && this.map !== null) {\n            reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                'reaction_data');\n            this.map.apply_reaction_data_to_map(reaction_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (this.options.gene_data !== null && update_map && this.map !== null) {\n            gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                     this.cobra_model, this.map);\n            this.map.apply_gene_data_to_map(gene_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (update_map && this.map !== null) {\n            // clear the data\n            this.map.apply_reaction_data_to_map(null);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        }\n    }\n\n    // ----------------------------------------------------------------\n    // Then the model, after drawing. Delay by 5ms so the the map draws\n    // first.\n\n    // if this function runs again, cancel the previous model update\n    if (this.update_model_timer)\n        clearTimeout(this.update_model_timer);\n\n    var delay = 5;\n    this.update_model_timer = setTimeout(function() {\n\n        // metabolite_data\n        if (update_metabolite_data && update_model && this.cobra_model !== null) {\n            // if we haven't already made this\n            if (!met_data_object)\n                met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                               'metabolite_data');\n            this.cobra_model.apply_metabolite_data(met_data_object,\n                                                   this.options.metabolite_styles,\n                                                   this.options.metabolite_compare_style);\n        }\n\n        // reaction data\n        if (update_reaction_data) {\n            if (this.options.reaction_data !== null && update_model && this.cobra_model !== null) {\n                // if we haven't already made this\n                if (!reaction_data_object)\n                    reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                        'reaction_data');\n                this.cobra_model.apply_reaction_data(reaction_data_object,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            } else if (this.options.gene_data !== null && update_model && this.cobra_model !== null) {\n                if (!gene_data_object)\n                    gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                             this.cobra_model, this.map);\n                this.cobra_model.apply_gene_data(gene_data_object,\n                                                 this.options.reaction_styles,\n                                                 this.options.identifiers_on_map,\n                                                 this.options.reaction_compare_style,\n                                                 this.options.and_method_in_gene_reaction_rule);\n            } else if (update_model && this.cobra_model !== null) {\n                // clear the data\n                this.cobra_model.apply_reaction_data(null,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            }\n        }\n\n        // callback\n        this.callback_manager.run('update_data', null, update_model, update_map, kind, should_draw);\n\n    }.bind(this), delay);\n\n    // definitions\n    function make_gene_data_object(gene_data, cobra_model, map) {\n        var all_reactions = {};\n        if (cobra_model !== null)\n            utils.extend(all_reactions, cobra_model.reactions);\n        // extend, overwrite\n        if (map !== null)\n            utils.extend(all_reactions, map.reactions, true);\n\n        // this object has reaction keys and values containing associated genes\n        return data_styles.import_and_check(gene_data, 'gene_data', all_reactions);\n    }\n}\n\nfunction _setup_menu(menu_selection, button_selection, map, zoom_container,\n                     key_manager, keys, enable_editing, enable_keys) {\n    var menu = menu_selection.attr('id', 'menu')\n            .append('ul')\n            .attr('class', 'nav nav-pills');\n    // map dropdown\n    ui.dropdown_menu(menu, 'Map')\n        .button({ key: keys.save,\n                  text: 'Save map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+S)' : null) })\n        .button({ text: 'Load map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+O)' : null),\n                  input: { assign: key_manager.assigned_keys.load,\n                           key: 'fn',\n                           fn: load_map_for_file.bind(this),\n                           pre_fn: function() {\n                               map.set_status('Loading map ...');\n                           },\n                           failure_fn: function() {\n                               map.set_status('');\n                           }}\n                })\n        .button({ key: keys.save_svg,\n                  text: 'Export as SVG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+S)' : null) })\n        .button({ key: keys.clear_map,\n                  text: 'Clear map' });\n    // model dropdown\n    var model_menu = ui.dropdown_menu(menu, 'Model')\n            .button({ text: 'Load COBRA model JSON',\n                      key_text: (enable_keys ? ' (Ctrl+M)' : null),\n                      input: { assign: key_manager.assigned_keys.load_model,\n                               key: 'fn',\n                               fn: load_model_for_file.bind(this),\n                               pre_fn: function() {\n                                   map.set_status('Loading model ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               } }\n                    })\n            .button({ id: 'convert_map',\n                      key: keys.convert_map,\n                      text: 'Update names and gene reaction rules using model' })\n            .button({ id: 'clear_model',\n                      key: keys.clear_model,\n                      text: 'Clear model' });\n    // disable the clear and convert buttons\n    var disable_model_clear_convert = function() {\n        model_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if ((d.id == 'clear_model' || d.id == 'convert_map') &&\n                    this.cobra_model === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_model_clear_convert();\n    this.callback_manager.set('load_model', disable_model_clear_convert);\n\n    // data dropdown\n    var data_menu = ui.dropdown_menu(menu, 'Data')\n            .button({ input: { assign: key_manager.assigned_keys.load_reaction_data,\n                               key: 'fn',\n                               fn: load_reaction_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading reaction data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load reaction data' })\n            .button({ key: keys.clear_reaction_data,\n                      text: 'Clear reaction data' })\n            .divider()\n            .button({ input: { fn: load_gene_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading gene data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load gene data' })\n            .button({ key: keys.clear_gene_data,\n                      text: 'Clear gene data' })\n            .divider()\n            .button({ input: { fn: load_metabolite_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading metabolite data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load metabolite data' })\n            .button({ key: keys.clear_metabolite_data,\n                      text: 'Clear metabolite data' });\n\n    // update the buttons\n    var disable_clears = function() {\n        data_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if (!d) return null;\n                if (d.text == 'Clear reaction data' && this.options.reaction_data === null)\n                    return true;\n                if (d.text == 'Clear gene data' && this.options.gene_data === null)\n                    return true;\n                if (d.text == 'Clear metabolite data' && this.options.metabolite_data === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_clears();\n    this.callback_manager.set('update_data', disable_clears);\n\n    // edit dropdown\n    var edit_menu = ui.dropdown_menu(menu, 'Edit', true);\n    if (enable_editing) {\n        edit_menu\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-menu-button',\n                      text: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-menu-button',\n                      text: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-menu-button',\n                      text: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-menu-button',\n                      text: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-menu-button',\n                      text: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) })\n            .divider()\n            .button({ key: keys.delete,\n                      text: 'Delete',\n                      key_text: (enable_keys ? ' (Del)' : null) })\n            .button({ key: keys.undo,\n                      text: 'Undo',\n                      key_text: (enable_keys ? ' (Ctrl+Z)' : null) })\n            .button({ key: keys.redo,\n                      text: 'Redo',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+Z)' : null) })\n            .button({ key: keys.toggle_primary,\n                      text: 'Toggle primary/secondary',\n                      key_text: (enable_keys ? ' (P)' : null) })\n            .button({ key: keys.cycle_primary,\n                      text: 'Rotate reactant locations',\n                      key_text: (enable_keys ? ' (C)' : null) })\n            .button({ key: keys.select_all,\n                      text: 'Select all',\n                      key_text: (enable_keys ? ' (Ctrl+A)' : null) })\n            .button({ key: keys.select_none,\n                      text: 'Select none',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+A)' : null) })\n            .button({ key: keys.invert_selection,\n                      text: 'Invert selection' });\n    } else {\n        edit_menu.button({ key: keys.view_mode,\n                           id: 'view-mode-menu-button',\n                           text: 'View mode' });\n    }\n\n    // view dropdown\n    var view_menu = ui.dropdown_menu(menu, 'View', true)\n            .button({ key: keys.zoom_in,\n                      text: 'Zoom in',\n                      key_text: (enable_keys ? ' (Ctrl and +)' : null) })\n            .button({ key: keys.zoom_out,\n                      text: 'Zoom out',\n                      key_text: (enable_keys ? ' (Ctrl and -)' : null) })\n            .button({ key: keys.extent_nodes,\n                      text: 'Zoom to nodes',\n                      key_text: (enable_keys ? ' (Ctrl+0)' : null) })\n            .button({ key: keys.extent_canvas,\n                      text: 'Zoom to canvas',\n                      key_text: (enable_keys ? ' (Ctrl+1)' : null) })\n            .button({ key: keys.search,\n                      text: 'Find',\n                      key_text: (enable_keys ? ' (Ctrl+F)' : null) });\n    if (enable_editing) {\n        view_menu.button({ key: keys.toggle_beziers,\n                           id: 'bezier-button',\n                           text: 'Show control points',\n                           key_text: (enable_keys ? ' (B)' : null) });\n        map.callback_manager\n            .set('toggle_beziers.button', function(on_off) {\n                menu.select('#bezier-button').select('.dropdown-button-text')\n                    .text((on_off ? 'Hide' : 'Show') +\n                          ' control points' +\n                          (enable_keys ? ' (B)' : ''));\n            });\n    }\n    view_menu.divider()\n        .button({ key: keys.show_settings,\n                  text: 'Settings',\n                  key_text: (enable_keys ? ' (Ctrl+,)' : null) });\n\n    // help\n    menu.append('a')\n        .attr('class', 'help-button')\n        .attr('target', '#')\n        .attr('href', 'https://escher.readthedocs.org')\n        .text('?');\n\n    var button_panel = button_selection.append('ul')\n            .attr('class', 'nav nav-pills nav-stacked')\n            .attr('id', 'button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_in,\n                           icon: 'glyphicon glyphicon-plus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom in',\n                           key_text: (enable_keys ? ' (Ctrl and +)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_out,\n                           icon: 'glyphicon glyphicon-minus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom out',\n                           key_text: (enable_keys ? ' (Ctrl and -)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.extent_canvas,\n                           icon: 'glyphicon glyphicon-resize-full',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom to canvas',\n                           key_text: (enable_keys ? ' (Ctrl+1)' : null) });\n\n    // mode buttons\n    if (enable_editing) {\n        ui.radio_button_group(button_panel.append('li'))\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-button',\n                      icon: 'glyphicon glyphicon-move',\n                      tooltip: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-button',\n                      icon: 'glyphicon glyphicon-hand-up',\n                      tooltip: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-button',\n                      icon: 'glyphicon glyphicon-plus',\n                      tooltip: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-button',\n                      icon: 'glyphicon glyphicon-repeat',\n                      tooltip: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-button',\n                      icon: 'glyphicon glyphicon-font',\n                      tooltip: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) });\n\n        // arrow buttons\n        this.direction_buttons = button_panel.append('li');\n        var o = ui.button_group(this.direction_buttons)\n                .button({ key: keys.direction_arrow_left,\n                          icon: 'glyphicon glyphicon-arrow-left',\n                          tooltip: 'Direction arrow (←)' })\n                .button({ key: keys.direction_arrow_right,\n                          icon: 'glyphicon glyphicon-arrow-right',\n                          tooltip: 'Direction arrow (→)' })\n                .button({ key: keys.direction_arrow_up,\n                          icon: 'glyphicon glyphicon-arrow-up',\n                          tooltip: 'Direction arrow (↑)' })\n                .button({ key: keys.direction_arrow_down,\n                          icon: 'glyphicon glyphicon-arrow-down',\n                          tooltip: 'Direction arrow (↓)' });\n    }\n\n    // set up mode callbacks\n    var select_button = function(id) {\n        // toggle the button\n        $(this.selection.node()).find('#' + id)\n            .button('toggle');\n\n        // menu buttons\n        var ids = ['zoom-mode-menu-button', 'brush-mode-menu-button',\n                   'build-mode-menu-button', 'rotate-mode-menu-button',\n                   'view-mode-menu-button', 'text-mode-menu-button'];\n        ids.forEach(function(this_id) {\n            var b_id = this_id.replace('-menu', '');\n            this.selection.select('#' + this_id)\n                .select('span')\n                .classed('glyphicon', b_id == id)\n                .classed('glyphicon-ok', b_id == id);\n        }.bind(this));\n    };\n    this.callback_manager.set('zoom_mode', select_button.bind(this, 'zoom-mode-button'));\n    this.callback_manager.set('brush_mode', select_button.bind(this, 'brush-mode-button'));\n    this.callback_manager.set('build_mode', select_button.bind(this, 'build-mode-button'));\n    this.callback_manager.set('rotate_mode', select_button.bind(this, 'rotate-mode-button'));\n    this.callback_manager.set('view_mode', select_button.bind(this, 'view-mode-button'));\n    this.callback_manager.set('text_mode', select_button.bind(this, 'text-mode-button'));\n\n    // definitions\n    function load_map_for_file(error, map_data) {\n        /** Load a map. This reloads the whole builder.\n\n         */\n\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading map: ' + error, 2000);\n            return;\n        }\n\n        try {\n            check_map(map_data);\n            this.load_map(map_data);\n            this.map.set_status('Loaded map ' + map_data[0].map_name, 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading map: ' + e, 2000);\n        }\n\n        // definitions\n        function check_map(data) {\n            /** Perform a quick check to make sure the map is mostly valid.\n\n             */\n\n            if (!('map_id' in data[0] && 'reactions' in data[1] &&\n                  'nodes' in data[1] && 'canvas' in data[1]))\n                throw new Error('Bad map data.');\n        }\n    }\n    function load_model_for_file(error, data) {\n        /** Load a cobra model. Redraws the whole map if the\n         highlight_missing option is true.\n\n         */\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading model: ' + error, 2000);\n            return;\n        }\n\n        try {\n            this.load_model(data, true);\n            this.build_input.toggle(false);\n            if ('id' in data)\n                this.map.set_status('Loaded model ' + data.id, 3000);\n            else\n                this.map.set_status('Loaded model (no model id)', 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading model: ' + e, 2000);\n        }\n\n    }\n    function load_reaction_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off gene data\n        if (data !== null)\n            this.set_gene_data(null);\n\n        this.set_reaction_data(data);\n    }\n    function load_metabolite_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        this.set_metabolite_data(data);\n    }\n    function load_gene_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off reaction data\n        if (data !== null)\n            this.set_reaction_data(null);\n\n        // turn on gene_reaction_rules\n        this.settings.set_conditional('show_gene_reaction_rules', true);\n\n        this.set_gene_data(data);\n    }\n}\n\nfunction _setup_simple_zoom_buttons(button_selection, keys) {\n    var button_panel = button_selection.append('div')\n            .attr('id', 'simple-button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_in,\n                           text: '+',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom in (Ctrl +)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_out,\n                           text: '–',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom out (Ctrl -)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.extent_canvas,\n                           text: '↔',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom to canvas (Ctrl 1)' });\n\n}\n\nfunction _toggle_direction_buttons(on_off) {\n    if (on_off===undefined)\n        on_off = !this.direction_buttons.style('visibility')=='visible';\n    this.direction_buttons.style('visibility', on_off ? 'visible' : 'hidden');\n}\n\nfunction _setup_status(selection, map) {\n    var status_bar = selection.append('div').attr('id', 'status');\n    map.callback_manager.set('set_status', function(status) {\n        status_bar.html(status);\n    });\n    return status_bar;\n}\n\nfunction _setup_quick_jump(selection) {\n    // function to load a map\n    var load_fn = function(new_map_name, quick_jump_path, callback) {\n        if (this.options.enable_editing && !this.options.never_ask_before_quit) {\n            if (!(confirm(('You will lose any unsaved changes.\\n\\n' +\n                           'Are you sure you want to switch maps?')))) {\n                if (callback) callback(false);\n                return;\n            }\n        }\n        this.map.set_status('Loading map ' + new_map_name + ' ...');\n        var url = utils.name_to_url(new_map_name, quick_jump_path);\n        d3.json(url, function(error, data) {\n            if (error) {\n                console.warn('Could not load data: ' + error);\n                if (callback) callback(false);\n            }\n            // run callback before load_map so the new map has the correct\n            // quick_jump menu\n            if (callback) callback(true);\n            // now reload\n            this.load_map(data);\n            this.map.set_status('');\n        }.bind(this));\n    }.bind(this);\n\n    // make the quick jump object\n    this.quick_jump = QuickJump(selection, load_fn);\n}\n\nfunction _setup_modes(map, brush, zoom_container) {\n    // set up zoom+pan and brush modes\n    var was_enabled = {};\n    map.callback_manager.set('start_rotation', function() {\n        was_enabled.brush = brush.enabled;\n        brush.toggle(false);\n        was_enabled.zoom = zoom_container.zoom_on;\n        zoom_container.toggle_pan_drag(false);\n        was_enabled.selectable_mousedown = map.behavior.selectable_mousedown!=null;\n        map.behavior.toggle_selectable_click(false);\n        was_enabled.label_mousedown = map.behavior.label_mousedown!=null;\n        map.behavior.toggle_label_mousedown(false);\n    });\n    map.callback_manager.set('end_rotation', function() {\n        brush.toggle(was_enabled.brush);\n        zoom_container.toggle_pan_drag(was_enabled.zoom);\n        map.behavior.toggle_selectable_click(was_enabled.selectable_mousedown);\n        map.behavior.toggle_label_mousedown(was_enabled.label_mousedown);\n        was_enabled = {};\n    });\n}\n\nfunction _get_keys(map, zoom_container, search_bar, settings_bar, enable_editing) {\n    var keys = {\n        save: { key: 83, modifiers: { control: true }, // ctrl-s\n                target: map,\n                fn: map.save },\n        save_svg: { key: 83, modifiers: { control: true, shift: true },\n                    target: map,\n                    fn: map.save_svg },\n        load: { key: 79, modifiers: { control: true }, // ctrl-o\n                fn: null }, // defined by button\n        convert_map: { fn: this.map.convert_map.bind(this.map) },\n        clear_map: { fn: this.map.clear_map.bind(this.map) },\n        load_model: { key: 77, modifiers: { control: true }, // ctrl-m\n                      fn: null }, // defined by button\n        clear_model: { fn: this.load_model.bind(this, null, true) },\n        load_reaction_data: { fn: null }, // defined by button\n        clear_reaction_data: { target: this,\n                               fn: function() { this.set_reaction_data(null); }},\n        load_metabolite_data: { fn: null }, // defined by button\n        clear_metabolite_data: { target: this,\n                                 fn: function() { this.set_metabolite_data(null); }},\n        load_gene_data: { fn: null }, // defined by button\n        clear_gene_data: { fn: function() {\n            this.set_gene_data(null, true);\n        }.bind(this)},\n        zoom_in: { key: 187, modifiers: { control: true }, // ctrl +\n                   target: zoom_container,\n                   fn: zoom_container.zoom_in },\n        zoom_out: { key: 189, modifiers: { control: true }, // ctrl -\n                    target: zoom_container,\n                    fn: zoom_container.zoom_out },\n        extent_nodes: { key: 48, modifiers: { control: true }, // ctrl-0\n                        target: map,\n                        fn: map.zoom_extent_nodes },\n        extent_canvas: { key: 49, modifiers: { control: true }, // ctrl-1\n                         target: map,\n                         fn: map.zoom_extent_canvas },\n        search: { key: 70, modifiers: { control: true }, // ctrl-f\n                  fn: search_bar.toggle.bind(search_bar, true) },\n        view_mode: { fn: this.view_mode.bind(this),\n                     ignore_with_input: true },\n        show_settings: { key: 188, modifiers: { control: true }, // Ctrl ,\n                         fn: settings_bar.toggle.bind(settings_bar) }\n    };\n    if (enable_editing) {\n        utils.extend(keys, {\n            build_mode: { key: 78, // n\n                          fn: this.build_mode.bind(this),\n                          ignore_with_input: true },\n            zoom_mode: { key: 90, // z\n                         fn: this.zoom_mode.bind(this),\n                         ignore_with_input: true },\n            brush_mode: { key: 86, // v\n                          fn: this.brush_mode.bind(this),\n                          ignore_with_input: true },\n            rotate_mode: { key: 82, // r\n                           fn: this.rotate_mode.bind(this),\n                           ignore_with_input: true },\n            text_mode: { key: 84, // t\n                         fn: this.text_mode.bind(this),\n                         ignore_with_input: true },\n            toggle_beziers: { key: 66,\n                              target: map,\n                              fn: map.toggle_beziers,\n                              ignore_with_input: true  }, // b\n            delete: { key: 8, modifiers: { control: true }, // ctrl-backspace\n                      target: map,\n                      fn: map.delete_selected,\n                      ignore_with_input: true },\n            delete_del: { key: 46, modifiers: { control: false }, // Del\n                          target: map,\n                          fn: map.delete_selected,\n                          ignore_with_input: true },\n            toggle_primary: { key: 80, // p\n                              target: map,\n                              fn: map.toggle_selected_node_primary,\n                              ignore_with_input: true },\n            cycle_primary: { key: 67, // c\n                             target: map,\n                             fn: map.cycle_primary_node,\n                             ignore_with_input: true },\n            direction_arrow_right: { key: 39, // right\n                                     fn: this.build_input.direction_arrow.right\n                                     .bind(this.build_input.direction_arrow),\n                                     ignore_with_input: true },\n            direction_arrow_down: { key: 40, // down\n                                    fn: this.build_input.direction_arrow.down\n                                    .bind(this.build_input.direction_arrow),\n                                    ignore_with_input: true },\n            direction_arrow_left: { key: 37, // left\n                                    fn: this.build_input.direction_arrow.left\n                                    .bind(this.build_input.direction_arrow),\n                                    ignore_with_input: true },\n            direction_arrow_up: { key: 38, // up\n                                  fn: this.build_input.direction_arrow.up\n                                  .bind(this.build_input.direction_arrow),\n                                  ignore_with_input: true },\n            undo: { key: 90, modifiers: { control: true },\n                    target: map.undo_stack,\n                    fn: map.undo_stack.undo },\n            redo: { key: 90, modifiers: { control: true, shift: true },\n                    target: map.undo_stack,\n                    fn: map.undo_stack.redo },\n            select_all: { key: 65, modifiers: { control: true }, // Ctrl Shift a\n                          fn: map.select_all.bind(map) },\n            select_none: { key: 65, modifiers: { control: true, shift: true }, // Ctrl Shift a\n                           fn: map.select_none.bind(map) },\n            invert_selection: { fn: map.invert_selection.bind(map) }\n        });\n    }\n    return keys;\n}\n\nfunction _setup_confirm_before_exit() {\n    /** Ask if the user wants to exit the page (to avoid unplanned refresh).\n\n     */\n\n    window.onbeforeunload = function(e) {\n        // If we haven't been passed the event get the window.event\n        e = e || window.event;\n        return  (this.options.never_ask_before_quit ? null :\n                 'You will lose any unsaved changes.');\n    }.bind(this);\n}\n","/** CallbackManager */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\n\nvar CallbackManager = utils.make_class();\nCallbackManager.prototype = {\n    init: init,\n    set: set,\n    remove: remove,\n    run: run\n};\nmodule.exports = CallbackManager;\n\n\nfunction init() {\n\n}\n\n\nfunction set(name, fn) {\n    /** As in d3 callbacks, you can namespace your callbacks after a period:\n\n     select_metabolite.direction_arrow\n     select_metabolite.input\n\n     Both are called by select_metabolite\n\n\n     TODO add *arguments to set, as in _.defer()\n\n     */\n    if (this.callbacks===undefined) this.callbacks = {};\n    if (this.callbacks[name]===undefined) this.callbacks[name] = [];\n    this.callbacks[name].push(fn);\n\n    return this;\n}\n\n\nfunction remove(name) {\n    /** Remove a callback by name\n\n     */\n    if (this.callbacks===undefined || Object.keys(this.callbacks).length==0) {\n        console.warn('No callbacks to remove');\n    }\n    delete this.callbacks[name];\n    return this;\n}\n\n\nfunction run(name, this_arg) {\n    /** Run all callbacks that match the portion of name before the period ('.').\n\n     Arguments\n     ---------\n\n     name: The callback name, which can include a tag after a '.' to\n     specificy a particular callback.\n\n     this_arg: (Optional, Default: null) The object assigned to `this` in\n     the callback.\n\n     */\n    if (_.isUndefined(this.callbacks)) return this;\n    if (_.isUndefined(this_arg)) this_arg = null;\n    // pass all but the first (name) argument to the callback\n    var pass_args = Array.prototype.slice.call(arguments, 2);\n    // look for matching callback names\n    for (var a_name in this.callbacks) {\n        var split_name = a_name.split('.')[0];\n        if (split_name==name) {\n            this.callbacks[a_name].forEach(function(fn) {\n                fn.apply(this_arg, pass_args);\n            });\n        }\n    }\n    return this;\n}\n","/** Canvas. Defines a canvas that accepts drag/zoom events and can be resized.\n\n Canvas(selection, x, y, width, height)\n\n Adapted from http://bl.ocks.org/mccannf/1629464.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Canvas = utils.make_class();\nCanvas.prototype = {\n    init: init,\n    toggle_resize: toggle_resize,\n    setup: setup,\n    size_and_location: size_and_location\n};\nmodule.exports = Canvas;\n\n\nfunction init(selection, size_and_location) {\n    this.selection = selection;\n    this.x = size_and_location.x;\n    this.y = size_and_location.y;\n    this.width = size_and_location.width;\n    this.height = size_and_location.height;\n\n    // enable by default\n    this.resize_enabled = true;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    this.setup();\n}\n\nfunction toggle_resize(on_off) {\n    /** Turn the resize on or off\n\n     */\n    if (on_off===undefined) on_off = !this.resize_enabled;\n\n    if (on_off) {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'auto');\n    } else {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'none');\n    }\n}\n\nfunction setup() {\n    var self = this,\n        extent = {\"x\": this.width, \"y\": this.height},\n        dragbar_width = 100,\n        mouse_node_mult = 10,\n        new_sel = this.selection.append('g')\n            .classed('canvas-group', true)\n            .data([{x: this.x, y: this.y}]);\n\n    var mouse_node = new_sel.append('rect')\n            .attr('id', 'mouse-node')\n            .attr(\"width\", this.width*mouse_node_mult)\n            .attr(\"height\", this.height*mouse_node_mult)\n            .attr(\"transform\", \"translate(\"+[self.x - this.width*mouse_node_mult/2,\n                                             self.y - this.height*mouse_node_mult/2]+\")\")\n            .attr('pointer-events', 'all');\n    this.mouse_node = mouse_node;\n\n    var rect = new_sel.append('rect')\n            .attr('id', 'canvas')\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height)\n            .attr(\"transform\", \"translate(\"+[self.x, self.y]+\")\");\n\n    var drag_right = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", rdragresize),\n        drag_left = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", ldragresize),\n        drag_top = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", tdragresize),\n        drag_bottom = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", bdragresize);\n\n    var left = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"id\", \"dragleft\")\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_left);\n\n    var right = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + self.width - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragright\")\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_right);\n\n    var top = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y - (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", dragbar_width)\n            .attr(\"id\", \"dragtop\")\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_top);\n\n    var bottom = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y + self.height - (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragbottom\")\n            .attr(\"height\", dragbar_width)\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_bottom);\n\n    // definitions\n    function stop_propagation() {\n        d3.event.sourceEvent.stopPropagation();\n    }\n    function transform_string(x, y, current_transform) {\n        var tr = utils.d3_transform_catch(current_transform),\n            translate = tr.translate;\n        if (x!==null) translate[0] = x;\n        if (y!==null) translate[1] = y;\n        return 'translate('+translate+')';\n    }\n    function ldragresize(d) {\n        var oldx = d.x;\n        d.x = Math.min(d.x + self.width - (dragbar_width / 2), d3.event.x);\n        self.x = d.x;\n        self.width = self.width + (oldx - d.x);\n        left.attr(\"transform\", function(d) {\n            return transform_string(d.x - (dragbar_width / 2), null, left.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, mouse_node.attr('transform'));\n        }).attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, rect.attr('transform'));\n        }).attr(\"width\", self.width);\n        top.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, top.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, bottom.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function rdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragx = Math.max(d.x + (dragbar_width/2), d.x + self.width + d3.event.dx);\n        //recalculate width\n        self.width = dragx - d.x;\n        //move the right drag handle\n        right.attr(\"transform\", function(d) {\n            return transform_string(dragx - (dragbar_width/2), null, right.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"width\", self.width);\n        top.attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function tdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var oldy = d.y;\n        d.y = Math.min(d.y + self.height - (dragbar_width / 2), d3.event.y);\n        self.y = d.y;\n        self.height = self.height + (oldy - d.y);\n        top.attr(\"transform\", function(d) {\n            return transform_string(null, d.y - (dragbar_width / 2), top.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, mouse_node.attr('transform'));\n        }).attr(\"width\", self.height*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, rect.attr('transform'));\n        }).attr(\"height\", self.height);\n        left.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), left.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n        right.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), right.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function bdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragy = Math.max(d.y + (dragbar_width/2), d.y + self.height + d3.event.dy);\n        //recalculate width\n        self.height = dragy - d.y;\n        //move the right drag handle\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(null, dragy - (dragbar_width/2), bottom.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"height\", self.height*mouse_node_mult);\n        rect.attr(\"height\", self.height);\n        left.attr(\"height\", self.height - dragbar_width);\n        right.attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n}\n\nfunction size_and_location() {\n    return { x: this.x,\n             y: this.y,\n             width: this.width,\n             height: this.height };\n}\n","/** CobraModel\n *\n */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nvar CobraModel = utils.make_class();\n// class methods\nCobraModel.from_exported_data = from_exported_data;\nCobraModel.from_cobra_json = from_cobra_json;\nCobraModel.build_reaction_string = build_reaction_string;\n// instance methods\nCobraModel.prototype = { init: init,\n                         apply_reaction_data: apply_reaction_data,\n                         apply_metabolite_data: apply_metabolite_data,\n                         apply_gene_data: apply_gene_data,\n                         model_for_export: model_for_export };\nmodule.exports = CobraModel;\n\n// class methods\nfunction build_reaction_string(stoichiometries, is_reversible) {\n    /** Return a reaction string for the given stoichiometries.\n\n     Adapted from cobra.core.Reaction.build_reaction_string().\n\n     Arguments\n     ---------\n\n     stoichiometries: An object with metabolites as keys and\n     stoichiometries as values.\n\n     is_reversible: Boolean. Whether the reaction is reversible.\n\n     */\n\n    var format = function(number) {\n        if (number == 1)\n            return \"\";\n        return String(number) + \" \";\n    };\n    var reactant_dict = {},\n        product_dict = {},\n        reactant_bits = [],\n        product_bits = [];\n    for (var the_metabolite in stoichiometries) {\n        var coefficient = stoichiometries[the_metabolite];\n        if (coefficient > 0)\n            product_bits.push(format(coefficient) + the_metabolite);\n        else\n            reactant_bits.push(format(Math.abs(coefficient)) + the_metabolite);\n    }\n    var reaction_string = reactant_bits.join(' + ');\n    if (is_reversible) {\n        reaction_string += ' ↔ ';\n    } else {\n        reaction_string += ' → ';\n    }\n    reaction_string += product_bits.join(' + ');\n    return reaction_string;\n}\n\nfunction from_exported_data(data) {\n    /** Use data generated by CobraModel.model_for_export() to make a new\n     CobraModel object.\n\n     */\n    if (!(data.reactions && data.metabolites))\n        throw new Error('Bad model data.');\n\n    var model = new CobraModel();\n    model.reactions = data.reactions;\n    model.metabolites = data.metabolites;\n    return model;\n}\n\nfunction from_cobra_json(model_data) {\n    /** Use a JSON Cobra model exported by COBRApy to make a new CobraModel\n     object.\n\n     The COBRA \"id\" becomes a \"bigg_id\", and \"upper_bound\" and \"lower_bound\"\n     bounds become \"reversibility\".\n\n     Fills out a \"genes\" list.\n\n     */\n    // reactions and metabolites\n    if (!(model_data.reactions && model_data.metabolites))\n        throw new Error('Bad model data.');\n\n    // make a gene dictionary\n    var genes = {};\n    for (var i = 0, l = model_data.genes.length; i < l; i++) {\n        var r = model_data.genes[i],\n            the_id = r.id;\n        genes[the_id] = r;\n    }\n\n    var model = new CobraModel();\n\n    model.reactions = {};\n    for (var i = 0, l = model_data.reactions.length; i<l; i++) {\n        var r = model_data.reactions[i],\n            the_id = r.id,\n            reaction = utils.clone(r);\n        delete reaction.id;\n        reaction.bigg_id = the_id;\n        // add the appropriate genes\n        reaction.genes = [];\n\n        // set reversibility\n        reaction.reversibility = (reaction.lower_bound < 0 && reaction.upper_bound > 0);\n        if (reaction.upper_bound <= 0 && reaction.lower_bound < 0) {\n            // reverse stoichiometries\n            for (var met_id in reaction.metabolites) {\n                reaction.metabolites[met_id] = -reaction.metabolites[met_id];\n            }\n        }\n        delete reaction.lower_bound;\n        delete reaction.upper_bound;\n\n        if ('gene_reaction_rule' in reaction) {\n            var gene_ids = data_styles.genes_for_gene_reaction_rule(reaction.gene_reaction_rule);\n            gene_ids.forEach(function(gene_id) {\n                if (gene_id in genes) {\n                    var gene = utils.clone(genes[gene_id]);\n                    // rename id to bigg_id\n                    gene.bigg_id = gene.id;\n                    delete gene.id;\n                    reaction.genes.push(gene);\n                } else {\n                    console.warn('Could not find gene for gene_id ' + gene_id);\n                }\n            });\n        }\n        model.reactions[the_id] = reaction;\n    }\n    model.metabolites = {};\n    for (var i=0, l=model_data.metabolites.length; i<l; i++) {\n        var r = model_data.metabolites[i],\n            the_id = r.id,\n            met = utils.clone(r);\n        delete met.id;\n        met.bigg_id = the_id;\n        model.metabolites[the_id] = met;\n    }\n    return model;\n}\n\n// instance methods\nfunction init() {\n    this.reactions = {};\n    this.metabolites = {};\n    this.cofactors = ['atp', 'adp', 'nad', 'nadh', 'nadp', 'nadph', 'gtp',\n                      'gdp', 'h', 'coa'];\n}\n\nfunction apply_reaction_data(reaction_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_reaction_data overrides apply_gene_data.\n\n     */\n    data_styles.apply_reaction_data_to_reactions(this.reactions, reaction_data,\n                                                 styles, compare_style);\n}\n\nfunction apply_metabolite_data(metabolite_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     */\n    data_styles.apply_metabolite_data_to_nodes(this.metabolites, metabolite_data,\n                                               styles, compare_style);\n}\n\nfunction apply_gene_data(gene_data_obj, styles, identifiers_on_map,\n                         compare_style, and_method_in_gene_reaction_rule) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_gene_data overrides apply_reaction_data.\n\n     */\n    data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                             styles, identifiers_on_map,\n                                             compare_style,\n                                             and_method_in_gene_reaction_rule);\n}\n\nfunction model_for_export() {\n    /** Export a CobraModel object for reloading later.\n\n     This object is not for loading into COBRApy! Export to COBRApy is not\n     currently supported.\n\n     */\n    return { reactions: this.reactions,\n             metabolites: this.metabolites };\n}\n","/** DataMenu */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = function(options) {\n    var o = utils.set_options(options, {\n        selection: null,\n        getdatafiles: null,\n        datafiles: null,\n        update_callback: null,\n        target: null});\n\n    if (o.selection===null)\n        throw new Error('No selection provided for DataMenu');\n\n    // setup dropdown menu\n    // Append menu if it doesn't exist\n    var menu = o.selection.select('.data-menu');\n    if (menu.empty()) {\n        menu = o.selection.append('div')\n            .attr('class','data-menu');\n    }\n    var select_sel = menu.append('form')\n            .append('select').attr('class','dropdown-menu');\n\n    if (o.getdatafiles) {\n        if (o.datafiles) {\n            console.warn('DataMenu: getdatafiles option overrides datafiles');\n        }\n        d3.json(o.getdatafiles, function(error, d) {\n            // returns json object:  { data: [file0, file1, ...] }\n            if (error) {\n                return console.warn(error);\n            } else {\n                load_with_files(o.target, d.data, select_sel, o.update_callback, o.selection);\n            }\n            return null;\n        });\n    } else if (o.datafiles) {\n        load_with_files(o.target, o.datafiles, select_sel, o.update_callback, o.selection);\n    } else {\n        console.warn('DataMenu: No datafiles given');\n    }\n\n    return { update: update };\n\n    // definitions\n    function load_with_files(t, files, select_sel, update_callback, selection) {\n\n        //when it changes\n        select_sel.node().addEventListener(\"change\", function() {\n            load_datafile(t, this.value, selection, update_callback);\n        }, false);\n\n        var file = files[0];\n\n        update(files, select_sel);\n        load_datafile(t, file, selection, update_callback);\n    };\n    function load_datafile(t, this_file, selection, callback) {\n        utils.load_the_file(t, this_file, function(error, data) {\n            if (error) {\n                return console.warn(error);\n                selection.append('error loading');\n                o.data = null;\n            } else {\n                o.data = data;\n                if (callback) {\n                    callback(data);\n                }\n            }\n        });\n    };\n\n    function update(list, select_sel) {\n        // update select element with d3 selection /select_sel/ to have options\n        // given by /list/\n        // TODO remove paths from file list\n        select_sel.selectAll(\".menu-option\")\n            .data(list)\n            .enter()\n            .append('option')\n            .attr('value', function (d) { return d; } )\n            .text(function (d) { return d; } );\n        // TODO set value to default_filename_index\n        select_sel.node().focus();\n    };\n\n    function get_data() {\n        return o.data;\n    };\n};\n","/** DirectionArrow. A constructor for an arrow that can be rotated and dragged,\n and supplies its direction. */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar DirectionArrow = utils.make_class();\nDirectionArrow.prototype = {\n    init: init,\n    set_location: set_location,\n    set_rotation: set_rotation,\n    displace_rotation: displace_rotation,\n    get_rotation: get_rotation,\n    toggle: toggle,\n    show: show,\n    hide: hide,\n    right: right,\n    left: left,\n    up: up,\n    down: down,\n    _setup_drag: _setup_drag\n};\nmodule.exports = DirectionArrow;\n\n\n// definitions\nfunction init(sel) {\n    this.arrow_container = sel.append('g')\n        .attr('id', 'direction-arrow-container')\n        .attr('transform', 'translate(0,0)rotate(0)');\n    this.arrow = this.arrow_container.append('path')\n        .classed('direction-arrow', true)\n        .attr('d', path_for_arrow())\n        .style('visibility', 'hidden')\n        .attr('transform', 'translate(30,0)scale(2.5)');\n\n    this.sel = sel;\n    this.center = { x: 0, y: 0 };\n\n    this._setup_drag();\n    this.dragging = false;\n\n    this.is_visible = false;\n    this.show();\n\n    // definitions\n    function path_for_arrow() {\n        return \"M0 -5 L0 5 L20 5 L20 10 L30 0 L20 -10 L20 -5 Z\";\n    }\n}\nfunction set_location(coords) {\n    /** Move the arrow to coords.\n     */\n    this.center = coords;\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+coords.x+','+coords.y+')rotate('+transform.rotate+')');\n}\nfunction set_rotation(rotation) {\n    /** Rotate the arrow to rotation.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')rotate('+rotation+')');\n}\nfunction displace_rotation(d_rotation) {\n    /** Displace the arrow rotation by a set amount.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')'+\n                              'rotate('+(transform.rotate+d_rotation)+')');\n}\nfunction get_rotation() {\n    /** Returns the arrow rotation.\n     */\n    return utils.d3_transform_catch(this.arrow_container.attr('transform')).rotate;\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_visible = !this.is_visible;\n    else this.is_visible = on_off;\n    this.arrow.style('visibility', this.is_visible ? 'visible' : 'hidden');\n}\nfunction show() {\n    this.toggle(true);\n}\nfunction hide() {\n    this.toggle(false);\n}\nfunction right() {\n    this.set_rotation(0);\n}\nfunction down() {\n    this.set_rotation(90);\n}\nfunction left() {\n    this.set_rotation(180);\n}\nfunction up() {\n    this.set_rotation(270);\n}\n\nfunction _setup_drag() {\n    var b = d3.behavior.drag()\n            .on(\"dragstart\", function(d) {\n                // silence other listeners\n                d3.event.sourceEvent.stopPropagation();\n                this.dragging = true;\n            }.bind(this))\n            .on(\"drag.direction_arrow\", function(d) {\n                var displacement = { x: d3.event.dx,\n                                     y: d3.event.dy },\n                    location = { x: d3.mouse(this.sel.node())[0],\n                                 y: d3.mouse(this.sel.node())[1] },\n                    d_angle = utils.angle_for_event(displacement,\n                                                    location,\n                                                    this.center);\n                this.displace_rotation(utils.to_degrees(d_angle));\n            }.bind(this))\n            .on(\"dragend\", function(d) {\n                setTimeout(function() {\n                    this.dragging = false;\n                }.bind(this), 200);\n            }.bind(this));\n    this.arrow_container.call(b);\n}\n","/** Draw. Manages creating, updating, and removing objects during d3 data binding.\n\n Arguments\n ---------\n\n behavior: An escher.Behavior object.\n\n settings: An escher.Settings object.\n\n Callbacks\n ---------\n\n draw.callback_manager.run('create_membrane', draw, enter_selection);\n draw.callback_manager.run('update_membrane', draw, update_selection);\n draw.callback_manager.run('create_reaction', draw, enter_selection);\n draw.callback_manager.run('update_reaction', draw, update_selection);\n draw.callback_manager.run('create_reaction_label', draw, enter_selection);\n draw.callback_manager.run('update_reaction_label', draw, update_selection);\n draw.callback_manager.run('create_segment', draw, enter_selection);\n draw.callback_manager.run('update_segment', draw, update_selection);\n draw.callback_manager.run('create_bezier', draw, enter_selection);\n draw.callback_manager.run('update_bezier', draw, update_selection);\n draw.callback_manager.run('create_node', draw, enter_selection);\n draw.callback_manager.run('update_node', draw, update_selection);\n draw.callback_manager.run('create_text_label', draw, enter_selection);\n draw.callback_manager.run('update_text_label', draw, update_selection);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Draw = utils.make_class();\n// instance methods\nDraw.prototype = {\n    init: init,\n    create_reaction: create_reaction,\n    update_reaction: update_reaction,\n    create_bezier: create_bezier,\n    update_bezier: update_bezier,\n    create_node: create_node,\n    update_node: update_node,\n    create_text_label: create_text_label,\n    update_text_label: update_text_label,\n    create_membrane: create_membrane,\n    update_membrane: update_membrane,\n    create_reaction_label: create_reaction_label,\n    update_reaction_label: update_reaction_label,\n    create_segment: create_segment,\n    update_segment: update_segment\n};\nmodule.exports = Draw;\n\n// definitions\nfunction init(behavior, settings) {\n    this.behavior = behavior;\n    this.settings = settings;\n    this.callback_manager = new CallbackManager();\n}\n\nfunction create_membrane(enter_selection) {\n    enter_selection.append('rect')\n        .attr('class', 'membrane');\n    this.callback_manager.run('create_membrane', this, enter_selection);\n}\n\nfunction update_membrane(update_selection) {\n    update_selection\n        .attr('width', function(d){ return d.width; })\n        .attr('height', function(d){ return d.height; })\n        .attr('transform', function(d){return 'translate('+d.x+','+d.y+')';})\n        .style('stroke-width', function(d) { return 10; })\n        .attr('rx', function(d){ return 20; })\n        .attr('ry', function(d){ return 20; });\n\n    this.callback_manager.run('update_membrane', this, update_selection);\n}\n\nfunction create_reaction(enter_selection) {\n    // attributes for new reaction group\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'r'+d.reaction_id; })\n        .attr('class', 'reaction')\n        .call(this.create_reaction_label.bind(this));\n\n    this.callback_manager.run('create_reaction', this, enter_selection);\n    return;\n}\n\nfunction update_reaction(update_selection, scale, cobra_model, drawn_nodes,\n                         defs, has_data_on_reactions) {\n    /** Run on the update selection for reactions.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     cobra_model: A CobraModel object.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     defs: The defs object generated by utils.setup_defs() (e.g. Map.defs).\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    // update reaction label\n    update_selection.select('.reaction-label-group')\n        .call(function(sel) {\n            return this.update_reaction_label(sel, has_data_on_reactions);\n        }.bind(this));\n\n    // draw segments\n    utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                               this.create_segment.bind(this),\n                               function(sel) {\n                                   return this.update_segment(sel, scale, cobra_model,\n                                                              drawn_nodes, defs,\n                                                              has_data_on_reactions);\n                               }.bind(this),\n                               function(sel) {\n                                   sel.remove();\n                               });\n\n    // run the callback\n    this.callback_manager.run('update_reaction', this, update_selection);\n}\n\nfunction create_reaction_label(enter_selection) {\n    /** Draw reaction label for selection.\n\n     */\n\n    var group = enter_selection.append('g')\n            .attr('class', 'reaction-label-group');\n    group.append('title'); // tooltip\n    group.append('text')\n        .attr('class', 'reaction-label label');\n    group.append('g')\n        .attr('class', 'all-genes-label-group');\n\n    this.callback_manager.run('create_reaction_label', this, enter_selection);\n}\n\nfunction update_reaction_label(update_selection, has_data_on_reactions) {\n    /** Run on the update selection for reaction labels.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    var decimal_format = d3.format('.4g'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        reaction_data_styles = this.settings.get_option('reaction_styles'),\n        show_gene_reaction_rules = this.settings.get_option('show_gene_reaction_rules'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        gene_font_size = this.settings.get_option('gene_font_size'),\n        label_mousedown_fn = this.behavior.label_mousedown,\n        label_mouseover_fn = this.behavior.label_mouseover,\n        label_mouseout_fn = this.behavior.label_mouseout;\n\n    // label location\n    update_selection\n        .attr('transform', function(d) {\n            return 'translate(' + d.label_x + ',' + d.label_y + ')';\n        })\n        .call(this.behavior.turn_off_drag)\n        .call(this.behavior.reaction_label_drag);\n\n    // update label visibility\n    var label = update_selection.select('.reaction-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        label\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_reactions && reaction_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .on('mousedown', label_mousedown_fn)\n            .on('mouseover', label_mouseover_fn)\n            .on('mouseout', label_mouseout_fn);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n    // gene label\n    var all_genes_g = update_selection.select('.all-genes-label-group')\n            .selectAll('.gene-label-group')\n            .data(function(d) {\n                var show_gene_string = ('gene_string' in d &&\n                                        d.gene_string !== null &&\n                                        show_gene_reaction_rules &&\n                                        (!hide_all_labels) &&\n                                        reaction_data_styles.indexOf('text') !== -1),\n                    show_gene_reaction_rule = ('gene_reaction_rule' in d &&\n                                               d.gene_reaction_rule !== null &&\n                                               show_gene_reaction_rules &&\n                                               (!hide_all_labels) );\n                if (show_gene_string) {\n                    return d.gene_string;\n                } else if (show_gene_reaction_rule) {\n                    // make the gene string with no data\n                    return data_styles.gene_string_for_data(d.gene_reaction_rule, null,\n                                                            d.genes, null, identifiers_on_map,\n                                                            null);\n                } else {\n                    return [];\n                }\n            });\n    // enter\n    var gene_g = all_genes_g.enter()\n            .append('g')\n            .attr('class', 'gene-label-group');\n    gene_g.append('text')\n        .attr('class', 'gene-label')\n        .style('font-size', gene_font_size + 'px');\n    gene_g.append('title');\n    // update\n    all_genes_g.attr('transform', function(d, i) {\n        return 'translate(0, ' + (gene_font_size * 1.5 * (i + 1)) + ')';\n    });\n    // update text\n    all_genes_g.select('text').text(function(d) {\n        return d['text'];\n    });\n    // update tooltip\n    all_genes_g.select('title').text(function(d) {\n        return d[identifiers_in_tooltip];\n    });\n    // exit\n    all_genes_g.exit()\n        .remove();\n\n    this.callback_manager.run('update_reaction_label', this, update_selection);\n}\n\nfunction create_segment(enter_selection) {\n    // create segments\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'segment-group')\n            .attr('id', function(d) { return 's'+d.segment_id; });\n\n    // create reaction arrow\n    g.append('path')\n        .attr('class', 'segment');\n\n    g.append('g')\n        .attr('class', 'arrowheads');\n\n    g.append('g')\n        .attr('class', 'stoichiometry-labels');\n\n    this.callback_manager.run('create_segment', this, enter_selection);\n}\n\nfunction update_segment(update_selection, scale, cobra_model,\n                        drawn_nodes, defs, has_data_on_reactions) {\n    var reaction_data_styles = this.settings.get_option('reaction_styles'),\n        should_size = (has_data_on_reactions && reaction_data_styles.indexOf('size') != -1),\n        should_color = (has_data_on_reactions && reaction_data_styles.indexOf('color') != -1),\n        no_data_size = this.settings.get_option('reaction_no_data_size'),\n        no_data_color = this.settings.get_option('reaction_no_data_color');\n\n    // update segment attributes\n    var highlight_missing  = this.settings.get_option('highlight_missing'),\n        hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        get_arrow_size = function(data, should_size) {\n            var width = 20,\n                height = 13;\n            if (should_size) {\n                height = (data === null ? no_data_size : scale.reaction_size(data));\n                // check for nan\n                if (isNaN(height))\n                    height = no_data_size;\n                width = height * 2;\n            }\n            return { width: width, height: height };\n        },\n        get_disp = function(arrow_size, reversibility, coefficient, node_is_primary) {\n            var arrow_height = ((reversibility || coefficient > 0) ?\n                                arrow_size.height :\n                                0),\n                r = node_is_primary ? primary_r : secondary_r;\n            return r + arrow_height + 10;\n        };\n    // update arrows\n    update_selection\n        .selectAll('.segment')\n        .datum(function() {\n            return this.parentNode.__data__;\n        })\n        .style('visibility', function(d) {\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        })\n        .attr('d', function(d) {\n            if (d.from_node_id === null || d.to_node_id === null)\n                return null;\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id],\n                b1 = d.b1,\n                b2 = d.b2;\n            // if metabolite, then displace the arrow\n            if (start['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.from_node_coefficient,\n                                    start.node_is_primary);\n                var direction = (b1 === null) ? end : b1;\n                start = displaced_coords(disp, start, direction, 'start');\n            }\n            if (end['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.to_node_coefficient,\n                                    end.node_is_primary);\n                var direction = (b2 === null) ? start : b2;\n                end = displaced_coords(disp, direction, end, 'end');\n            }\n            var curve = ('M' + start.x + ',' + start.y + ' ');\n            if (b1 !== null && b2 !== null) {\n                curve += ('C' + b1.x + ',' + b1.y + ' ' +\n                          b2.x + ',' + b2.y + ' ');\n            }\n            curve += (end.x + ',' + end.y);\n            return curve;\n        })\n        .style('stroke', function(d) {\n            var reaction_id = this.parentNode.parentNode.__data__.bigg_id,\n                show_missing = (highlight_missing &&\n                                cobra_model !== null &&\n                                !(reaction_id in cobra_model.reactions));\n            if (show_missing) {\n                return 'red';\n            }\n            if (should_color) {\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            return null;\n        })\n        .style('stroke-width', function(d) {\n            if (should_size) {\n                var f = d.data;\n                return f === null ? no_data_size : scale.reaction_size(f);\n            } else {\n                return null;\n            }\n        });\n\n    // new arrowheads\n    var arrowheads = update_selection.select('.arrowheads')\n            .selectAll('.arrowhead')\n            .data(function (d) {\n                var arrowheads = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return arrowheads;\n\n                if (start.node_type == 'metabolite' && (d.reversibility || d.from_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.from_node_coefficient,\n                                        start.node_is_primary),\n                        direction = (b1 === null) ? end : b1,\n                        rotation = utils.to_degrees(utils.get_angle([start, direction])) + 90,\n                        loc = displaced_coords(disp, start, direction, 'start');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.from_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                if (end.node_type == 'metabolite' && (d.reversibility || d.to_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.to_node_coefficient,\n                                        end.node_is_primary),\n                        direction = (b2 === null) ? start : b2,\n                        rotation = utils.to_degrees(utils.get_angle([end, direction])) + 90,\n                        loc = displaced_coords(disp, direction, end, 'end');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.to_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                return arrowheads;\n            });\n    arrowheads.enter().append('path')\n        .classed('arrowhead', true);\n    // update arrowheads\n    arrowheads.attr('d', function(d) {\n        return ('M' + [-d.size.width / 2, 0] +\n                ' L' + [0, d.size.height] +\n                ' L' + [d.size.width / 2, 0] + ' Z');\n    }).attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')rotate(' + d.rotation + ')';\n    }).style('fill', function(d) {\n        if (should_color) {\n            if (d.show_arrowhead_flux) {\n                // show the flux\n                var f = d.data;\n                return f===null ? no_data_color : scale.reaction_color(f);\n            } else {\n                // if the arrowhead is not filled because it is reversed\n                return '#FFFFFF';\n            }\n        }\n        // default fill color\n        return null;\n    }).style('stroke', function(d) {\n        if (should_color) {\n            // show the flux color in the stroke whether or not the fill is present\n            var f = d.data;\n            return f===null ? no_data_color : scale.reaction_color(f);\n        }\n        // default stroke color\n        return null;\n    });\n    // remove\n    arrowheads.exit().remove();\n\n    // new stoichiometry labels\n    var stoichiometry_labels = update_selection.select('.stoichiometry-labels')\n            .selectAll('.stoichiometry-label')\n            .data(function (d) {\n                var labels = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2,\n                    disp_factor = 1.5;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return labels;\n\n                if (start.node_type=='metabolite' && (Math.abs(d.from_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b1 === null) ? end : b1;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, start));\n                    var loc = displaced_coords(disp, start, direction, 'start');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.from_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                if (end.node_type=='metabolite' && (Math.abs(d.to_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b2 === null) ? start : b2;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, end));\n                    var loc = displaced_coords(disp, direction, end, 'end');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.to_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                return labels;\n            });\n\n    // add labels\n    stoichiometry_labels.enter()\n        .append('text')\n        .attr('class', 'stoichiometry-label')\n        .attr('text-anchor', 'middle');\n    // update stoichiometry_labels\n    stoichiometry_labels\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .text(function(d) {\n            return d.coefficient;\n        })\n        .style('fill', function (d) {\n            if (should_color) {\n                // show the flux color\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            // default segment color\n            return null;\n        });\n    // remove\n    stoichiometry_labels.exit().remove();\n\n    this.callback_manager.run('update_segment', this, update_selection);\n}\n\nfunction create_bezier(enter_selection) {\n    var g = enter_selection.append('g')\n            .attr('id', function(d) { return d.bezier_id; })\n            .attr('class', function(d) { return 'bezier'; });\n    g.append('path')\n        .attr('class', 'connect-line');\n    g.append('circle')\n        .attr('class', function(d) { return 'bezier-circle '+d.bezier; })\n        .style('stroke-width', String(1)+'px')\n        .attr('r', String(7)+'px');\n\n    this.callback_manager.run('create_bezier', this, enter_selection);\n}\n\nfunction update_bezier(update_selection, show_beziers, drag_behavior,\n                       mouseover, mouseout, drawn_nodes, drawn_reactions) {\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n\n    if (!show_beziers) {\n        update_selection.attr('visibility', 'hidden');\n        return;\n    } else {\n        update_selection.attr('visibility', 'visible');\n    }\n\n    // hide secondary\n    update_selection\n        .style('visibility', function(d) {\n            var seg_data = drawn_reactions[d.reaction_id].segments[d.segment_id],\n                start = drawn_nodes[seg_data.from_node_id],\n                end = drawn_nodes[seg_data.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        });\n\n    // draw bezier points\n    update_selection.select('.bezier-circle')\n        .call(this.behavior.turn_off_drag)\n        .call(drag_behavior)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .attr('transform', function(d) {\n            if (d.x==null || d.y==null) return '';\n            return 'translate('+d.x+','+d.y+')';\n        });\n\n    // update bezier line\n    update_selection\n        .select('.connect-line')\n        .attr('d', function(d) {\n            var node,\n                segment_d = drawn_reactions[d.reaction_id].segments[d.segment_id];\n            node = (d.bezier=='b1' ?\n                    drawn_nodes[segment_d.from_node_id] :\n                    drawn_nodes[segment_d.to_node_id]);\n            if (d.x==null || d.y==null || node.x==null || node.y==null)\n                return '';\n            return 'M'+d.x+', '+d.y+' '+(node.x)+','+(node.y);\n        });\n\n    this.callback_manager.run('update_bezier', this, update_selection);\n}\n\nfunction create_node(enter_selection, drawn_nodes, drawn_reactions) {\n    /** Run on enter selection for nodes.\n\n     Arguments\n     ---------\n\n     enter_selection: The D3.js enter selection.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     drawn_reactions: The reactions object (e.g. Map.reactions).\n\n     */\n\n    // create nodes\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'node')\n            .attr('id', function(d) { return 'n'+d.node_id; });\n\n    // create metabolite circle and label\n    g.append('circle')\n        .attr('class', function(d) {\n            var c = 'node-circle';\n            if (d.node_type!==null)\n                c += (' ' + d.node_type + '-circle');\n            return c;\n        });\n    // labels\n    var metabolite_groups = g.filter(function(d) {\n        return d.node_type=='metabolite';\n    });\n    metabolite_groups.append('text')\n        .attr('class', 'node-label label');\n    metabolite_groups.append('title'); // tooltip\n\n    this.callback_manager.run('create_node', this, enter_selection);\n}\n\nfunction update_node(update_selection, scale, has_data_on_nodes,\n                     mousedown_fn, click_fn, mouseover_fn, mouseout_fn,\n                     drag_behavior, label_drag_behavior) {\n    /** Run on the update selection for nodes.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     has_data_on_nodes: Boolean to determine whether data needs to be drawn.\n\n     mousedown_fn: A function to call on mousedown for a node.\n\n     click_fn: A function to call on click for a node.\n\n     mouseover_fn: A function to call on mouseover for a node.\n\n     mouseout_fn: A function to call on mouseout for a node.\n\n     drag_behavior: The D3.js drag behavior object for the nodes.\n\n     label_drag_behavior: The D3.js drag behavior object for the node labels.\n\n     */\n\n    // update circle and label location\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        marker_r = this.settings.get_option('marker_radius'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        metabolite_data_styles = this.settings.get_option('metabolite_styles'),\n        no_data_style = { color: this.settings.get_option('metabolite_no_data_color'),\n                          size: this.settings.get_option('metabolite_no_data_size') };\n\n\n    var mg = update_selection\n            .select('.node-circle')\n            .attr('transform', function(d) {\n                return 'translate('+d.x+','+d.y+')';\n            })\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('r', function(d) {\n                if (d.node_type == 'metabolite') {\n                    var should_scale = (has_data_on_nodes &&\n                                        metabolite_data_styles.indexOf('size') != -1);\n                    if (should_scale) {\n                        var f = d.data;\n                        return f===null ? no_data_style['size'] : scale.metabolite_size(f);\n                    } else {\n                        return d.node_is_primary ? primary_r : secondary_r;\n                    }\n                }\n                // midmarkers and multimarkers\n                return marker_r;\n            })\n            .style('fill', function(d) {\n                if (d.node_type=='metabolite') {\n                    var should_color_data = (has_data_on_nodes &&\n                                             metabolite_data_styles.indexOf('color') != -1);\n                    if (should_color_data) {\n                        var f = d.data;\n                        return f===null ? no_data_style['color'] : scale.metabolite_color(f);\n                    } else {\n                        return null;\n                    }\n                }\n                // midmarkers and multimarkers\n                return null;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(drag_behavior)\n            .on('mousedown', mousedown_fn)\n            .on('click', click_fn)\n            .on('mouseover', mouseover_fn)\n            .on('mouseout', mouseout_fn);\n\n    // update node label visibility\n    var node_label = update_selection\n            .select('.node-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        node_label\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('transform', function(d) {\n                return 'translate('+d.label_x+','+d.label_y+')';\n            })\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_nodes && metabolite_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(label_drag_behavior);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n\n    this.callback_manager.run('update_node', this, update_selection);\n}\n\nfunction create_text_label(enter_selection) {\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'l'+d.text_label_id; })\n        .attr('class', 'text-label')\n        .append('text')\n        .attr('class', 'label');\n\n    this.callback_manager.run('create_text_label', this, enter_selection);\n}\n\nfunction update_text_label(update_selection) {\n    var mousedown_fn = this.behavior.text_label_mousedown,\n        click_fn = this.behavior.text_label_click,\n        drag_behavior = this.behavior.selectable_drag,\n        turn_off_drag = this.behavior.turn_off_drag;\n\n    update_selection\n        .select('.label')\n        .text(function(d) { return d.text; })\n        .attr('transform', function(d) { return 'translate('+d.x+','+d.y+')';})\n        .on('mousedown', mousedown_fn)\n        .on('click', click_fn)\n        .call(turn_off_drag)\n        .call(drag_behavior);\n\n    this.callback_manager.run('update_text_label', this, update_selection);\n}\n\nfunction displaced_coords(reaction_arrow_displacement, start, end, displace) {\n    utils.check_undefined(arguments, ['reaction_arrow_displacement', 'start', 'end', 'displace']);\n\n    var length = reaction_arrow_displacement,\n        hyp = utils.distance(start, end),\n        new_x, new_y;\n    if (!length || !hyp) console.error('Bad value');\n    if (displace=='start') {\n        new_x = start.x + length * (end.x - start.x) / hyp,\n        new_y = start.y + length * (end.y - start.y) / hyp;\n    } else if (displace=='end') {\n        new_x = end.x - length * (end.x - start.x) / hyp,\n        new_y = end.y - length * (end.y - start.y) / hyp;\n    } else { console.error('bad displace value: ' + displace); }\n    return {x: new_x, y: new_y};\n}\n","/** KeyManager */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar KeyManager = utils.make_class();\n// static methods\nKeyManager.reset_held_keys = reset_held_keys;\n// instance methods\nKeyManager.prototype = {\n    init: init,\n    update: update,\n    toggle: toggle,\n    add_escape_listener: add_escape_listener,\n    add_enter_listener: add_enter_listener,\n    add_key_listener: add_key_listener\n};\nmodule.exports = KeyManager;\n\n\n// static methods\nfunction reset_held_keys(h) {\n    h.command = false;\n    h.control = false;\n    h.option = false;\n    h.shift = false;\n}\n\n\n// instance methods\nfunction init(unique_map_id, assigned_keys, input_list, ctrl_equals_cmd) {\n    /** Assign keys for commands.\n\n     */\n\n    // identify this key manager\n    if (unique_map_id===undefined) unique_map_id = null;\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    if (assigned_keys===undefined) this.assigned_keys = {};\n    else this.assigned_keys = assigned_keys;\n    if (input_list===undefined) this.input_list = [];\n    else this.input_list = input_list;\n\n    if (ctrl_equals_cmd===undefined) ctrl_equals_cmd = true;\n    this.ctrl_equals_cmd = ctrl_equals_cmd;\n\n    this.held_keys = {};\n    reset_held_keys(this.held_keys);\n\n    this.enabled = true;\n\n    this.update();\n}\n\n\nfunction update() {\n    var held_keys = this.held_keys,\n        keys = this.assigned_keys,\n        self = this;\n\n    var modifier_keys = { command: 91,\n                          command_right: 93,\n                          control: 17,\n                          option: 18,\n                          shift: 16 };\n\n    try {\n        d3.select(window).on('keydown.key_manager' + this.unique_string, null);\n        d3.select(window).on('keyup.key_manager' + this.unique_string, null);\n    } catch (err) {\n        console.log('Not in a browser, so key manager does not work');\n        return;\n    }\n\n    if (!(this.enabled)) return;\n\n    d3.select(window).on('keydown.key_manager' + this.unique_string, function(ctrl_equals_cmd, input_list) {\n        var kc = d3.event.keyCode,\n            meaningless = true;\n        // check the inputs\n        var input_visible = false;\n        input_list.forEach(function(input) {\n            if (input.is_visible()) input_visible = true;\n        });\n        toggle_modifiers(modifier_keys, held_keys, kc, true);\n        for (var key_id in keys) {\n            var assigned_key = keys[key_id];\n            if (check_key(assigned_key, kc, held_keys, ctrl_equals_cmd)) {\n                meaningless = false;\n                if (!(assigned_key.ignore_with_input && input_visible)) {\n                    if (assigned_key.fn) {\n                        assigned_key.fn.call(assigned_key.target);\n                    } else {\n                        console.warn('No function for key');\n                    }\n                    // prevent browser action\n                    d3.event.preventDefault();\n                }\n            }\n        }\n        // Sometimes modifiers get 'stuck', so reset them once in a while.\n        // Only do this when a meaningless key is pressed\n        for (var k in modifier_keys)\n            if (modifier_keys[k] == kc) meaningless = false;\n        if (meaningless)\n            reset_held_keys(held_keys);\n    }.bind(null, this.ctrl_equals_cmd, this.input_list))\n        .on('keyup.key_manager' + this.unique_string, function() {\n            toggle_modifiers(modifier_keys, held_keys,\n                             d3.event.keyCode, false);\n        });\n    function toggle_modifiers(mod, held, kc, on_off) {\n        for (var k in mod)\n            if (mod[k] == kc)\n                held[k] = on_off;\n    }\n    function check_key(key, pressed, held, ctrl_equals_cmd) {\n        if (key.key != pressed) return false;\n        var mod = utils.clone(key.modifiers);\n        if (mod === undefined)\n            mod = { control: false,\n                    command: false,\n                    option: false,\n                    shift: false };\n        for (var k in held) {\n            if (ctrl_equals_cmd &&\n                mod['control'] &&\n                (k=='command' || k=='command_right' || k=='control') &&\n                (held['command'] || held['command_right'] || held['control'])) {\n                continue;\n            }\n            if (mod[k] === undefined) mod[k] = false;\n            if (mod[k] != held[k]) return false;\n        }\n        return true;\n    }\n}\nfunction toggle(on_off) {\n    /** Turn the brush on or off\n\n     */\n    if (on_off===undefined) on_off = !this.enabled;\n\n    this.enabled = on_off;\n    this.update();\n}\nfunction add_enter_listener(callback, id) {\n    /** Call the callback when the enter key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener(callback, 13, id);\n}\nfunction add_escape_listener(callback, id) {\n    /** Call the callback when the escape key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener(callback, 27, id);\n}\nfunction add_key_listener(callback, kc, id) {\n    /** Call the callback when the key is pressed, then unregisters the\n     listener.\n\n     */\n\n    var event_name = 'keydown.' + kc;\n    if (id !== undefined)\n        event_name += ('.' + id);\n    event_name += this.unique_string;\n\n    var selection = d3.select(window);\n    selection.on(event_name, function() {\n        if (d3.event.keyCode==kc) {\n            callback();\n        }\n    });\n    return {\n        clear: function() {\n            selection.on(event_name, null);\n        }\n    };\n}\n","/** Map\n\n Defines the metabolic map data, and manages drawing and building.\n\n Arguments\n ---------\n\n svg: The parent SVG container for the map.\n\n css:\n\n selection: A d3 selection for a node to place the map inside.\n\n selection:\n\n zoom_container:\n\n settings:\n\n cobra_model:\n\n canvas_size_and_loc:\n\n enable_search:\n\n map_name: (Optional, Default: 'new map')\n\n map_id: (Optional, Default: A string of random characters.)\n\n map_description: (Optional, Default: '')\n\n Callbacks\n ---------\n\n map.callback_manager.run('set_status', null, status);\n map.callback_manager.run('toggle_beziers', null, beziers_enabled);\n map.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n map.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n map.callback_manager.run('deselect_nodes');\n map.callback_manager.run('select_text_label');\n map.callback_manager.run('before_svg_export');\n map.callback_manager.run('after_svg_export');\n map.callback_manager.run('before_convert_map');\n map.callback_manager.run('after_convert_map');\n this.callback_manager.run('calc_data_stats__reaction', null, changed);\n this.callback_manager.run('calc_data_stats__metabolite', null, changed);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar Draw = require('./Draw');\nvar Behavior = require('./Behavior');\nvar Scale = require('./Scale');\nvar build = require('./build');\nvar UndoStack = require('./UndoStack');\nvar CallbackManager = require('./CallbackManager');\nvar KeyManager = require('./KeyManager');\nvar Canvas = require('./Canvas');\nvar data_styles = require('./data_styles');\nvar SearchIndex = require('./SearchIndex');\n\nvar bacon = require('baconjs');\n\n\nvar Map = utils.make_class();\n// class methods\nMap.from_data = from_data;\n// instance methods\nMap.prototype = {\n    // setup\n    init: init,\n    // more setup\n    setup_containers: setup_containers,\n    reset_containers: reset_containers,\n    // appearance\n    set_status: set_status,\n    clear_map: clear_map,\n    // selection\n    select_all: select_all,\n    select_none: select_none,\n    invert_selection: invert_selection,\n    select_selectable: select_selectable,\n    select_metabolite_with_id: select_metabolite_with_id,\n    select_single_node: select_single_node,\n    deselect_nodes: deselect_nodes,\n    select_text_label: select_text_label,\n    deselect_text_labels: deselect_text_labels,\n    // build\n    new_reaction_from_scratch: new_reaction_from_scratch,\n    extend_nodes: extend_nodes,\n    extend_reactions: extend_reactions,\n    new_reaction_for_metabolite: new_reaction_for_metabolite,\n    cycle_primary_node: cycle_primary_node,\n    toggle_selected_node_primary: toggle_selected_node_primary,\n    new_text_label: new_text_label,\n    edit_text_label: edit_text_label,\n    // delete\n    delete_selected: delete_selected,\n    delete_selectable: delete_selectable,\n    delete_node_data: delete_node_data,\n    delete_segment_data: delete_segment_data,\n    delete_reaction_data: delete_reaction_data,\n    delete_text_label_data: delete_text_label_data,\n    // find\n    get_selected_node_ids: get_selected_node_ids,\n    get_selected_nodes: get_selected_nodes,\n    get_selected_text_label_ids: get_selected_text_label_ids,\n    get_selected_text_labels: get_selected_text_labels,\n    segments_and_reactions_for_nodes: segments_and_reactions_for_nodes,\n    // draw\n    draw_everything: draw_everything,\n    // draw reactions\n    draw_all_reactions: draw_all_reactions,\n    draw_these_reactions: draw_these_reactions,\n    clear_deleted_reactions: clear_deleted_reactions,\n    // draw nodes\n    draw_all_nodes: draw_all_nodes,\n    draw_these_nodes: draw_these_nodes,\n    clear_deleted_nodes: clear_deleted_nodes,\n    // draw text_labels\n    draw_all_text_labels: draw_all_text_labels,\n    draw_these_text_labels: draw_these_text_labels,\n    clear_deleted_text_labels: clear_deleted_text_labels,\n    // draw beziers\n    draw_all_beziers: draw_all_beziers,\n    draw_these_beziers: draw_these_beziers,\n    clear_deleted_beziers: clear_deleted_beziers,\n    toggle_beziers: toggle_beziers,\n    hide_beziers: hide_beziers,\n    show_beziers: show_beziers,\n    // data\n    has_cobra_model: has_cobra_model,\n    apply_reaction_data_to_map: apply_reaction_data_to_map,\n    apply_metabolite_data_to_map: apply_metabolite_data_to_map,\n    apply_gene_data_to_map: apply_gene_data_to_map,\n    // data statistics\n    get_data_statistics: get_data_statistics,\n    calc_data_stats: calc_data_stats,\n    // zoom\n    zoom_extent_nodes: zoom_extent_nodes,\n    zoom_extent_canvas: zoom_extent_canvas,\n    _zoom_extent: _zoom_extent,\n    get_size: get_size,\n    zoom_to_reaction: zoom_to_reaction,\n    zoom_to_node: zoom_to_node,\n    zoom_to_text_label: zoom_to_text_label,\n    highlight_reaction: highlight_reaction,\n    highlight_node: highlight_node,\n    highlight_text_label: highlight_text_label,\n    highlight: highlight,\n    // io\n    save: save,\n    map_for_export: map_for_export,\n    save_svg: save_svg,\n    convert_map: convert_map\n};\nmodule.exports = Map;\n\n\n// -------------------------------------------------------------------------\n// setup\n\nfunction init(svg, css, selection, zoom_container, settings,\n              cobra_model, canvas_size_and_loc, enable_search,\n              map_name, map_id, map_description) {\n    if (canvas_size_and_loc===null) {\n        var size = zoom_container.get_size();\n        canvas_size_and_loc = {x: -size.width, y: -size.height,\n                               width: size.width*3, height: size.height*3};\n    }\n\n    if (map_name === undefined || map_name === null || map_name == '')\n        map_name = 'new_map';\n    else\n        map_name = String(map_name);\n    if (map_id === undefined || map_id === null || map_id == '')\n        map_id = utils.generate_map_id();\n    else\n        map_id = String(map_id);\n    if (map_description === undefined || map_description === null)\n        map_description = '';\n    else\n        map_description = String(map_description);\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // set up the defs\n    this.svg = svg;\n    this.defs = utils.setup_defs(svg, css);\n\n    // make the canvas\n    this.canvas = new Canvas(selection, canvas_size_and_loc);\n\n    this.setup_containers(selection);\n    this.sel = selection;\n    this.zoom_container = zoom_container;\n\n    this.settings = settings;\n\n    // set the model AFTER loading the datasets\n    this.cobra_model = cobra_model;\n\n    this.largest_ids = { reactions: -1,\n                         nodes: -1,\n                         segments: -1,\n                         text_labels: -1 };\n\n    // make the scales\n    this.scale = new Scale();\n    // initialize stats\n    this.calc_data_stats('reaction');\n    this.calc_data_stats('metabolite');\n    this.scale.connect_to_settings(this.settings, this,\n                                   get_data_statistics.bind(this));\n\n    // make the undo/redo stack\n    this.undo_stack = new UndoStack();\n\n    // make a behavior object\n    this.behavior = new Behavior(this, this.undo_stack);\n\n    // draw manager\n    this.draw = new Draw(this.behavior, this.settings);\n\n    // make a key manager\n    this.key_manager = new KeyManager(this.settings.get_option('unique_map_id'));\n\n    // make the search index\n    this.enable_search = enable_search;\n    this.search_index = new SearchIndex();\n\n    // map properties\n    this.map_name = map_name;\n    this.map_id = map_id;\n    this.map_description = map_description;\n\n    // deal with the window\n    var window_translate = {'x': 0, 'y': 0},\n        window_scale = 1;\n\n    // hide beziers\n    this.beziers_enabled = false;\n\n    // data\n    this.has_data_on_reactions = false;\n    this.has_data_on_nodes = false;\n\n    this.nodes = {};\n    this.reactions = {};\n    this.beziers = {};\n    this.text_labels = {};\n\n    // update data with null to populate data-specific attributes\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n\n    // rotation mode off\n    this.rotation_on = false;\n};\n\n// -------------------------------------------------------------------------\n// Import\n\nfunction from_data(map_data, svg, css, selection, zoom_container, settings,\n                   cobra_model, enable_search) {\n    /** Load a json map and add necessary fields for rendering.\n\n     */\n\n    var canvas = map_data[1].canvas,\n        map_name = map_data[0].map_name,\n        map_id = map_data[0].map_id,\n        map_description = (map_data[0].map_description.replace(/(\\nLast Modified.*)+$/g, '')\n                           + '\\nLast Modified ' + Date(Date.now()).toString()),\n        map = new Map(svg, css, selection, zoom_container, settings,\n                      cobra_model, canvas, enable_search,\n                      map_name, map_id, map_description);\n\n    map.reactions = map_data[1].reactions;\n    map.nodes = map_data[1].nodes;\n    map.text_labels = map_data[1].text_labels;\n\n    for (var n_id in map.nodes) {\n        var node = map.nodes[n_id];\n\n        // clear all the connected segments\n        node.connected_segments = [];\n\n        //  populate the nodes search index.\n        if (enable_search) {\n            if (node.node_type!='metabolite') continue;\n            map.search_index.insert('n'+n_id, { 'name': node.bigg_id,\n                                                'data': { type: 'metabolite',\n                                                          node_id: n_id }});\n            map.search_index.insert('n_name'+n_id, { 'name': node.name,\n                                                     'data': { type: 'metabolite',\n                                                               node_id: n_id }});\n        }\n    }\n\n    // Propagate coefficients and reversibility, build the connected\n    // segments, add bezier points, and populate the reaction search index.\n    for (var r_id in map.reactions) {\n        var reaction = map.reactions[r_id];\n\n        // reaction search index\n        if (enable_search) {\n            map.search_index.insert('r' + r_id,\n                                    { 'name': reaction.bigg_id,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            map.search_index.insert('r_name' + r_id,\n                                    { 'name': reaction.name,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                map.search_index.insert('r' + r_id + '_g' + g_id,\n                                        { 'name': gene.bigg_id,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n                map.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                        { 'name': gene.name,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n            }\n        }\n\n        // keep track of any bad segments\n        var segments_to_delete = [];\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id];\n\n            // propagate reversibility\n            segment.reversibility = reaction.reversibility;\n\n            // if there is an error with to_ or from_ nodes, remove this segment\n            if (!(segment.from_node_id in map.nodes) || !(segment.to_node_id in map.nodes)) {\n                console.warn('Bad node references in segment ' + s_id + '. Deleting segment.');\n                segments_to_delete.push(s_id);\n                continue\n            }\n\n            var from_node = map.nodes[segment.from_node_id],\n                to_node = map.nodes[segment.to_node_id];\n\n            // propagate coefficients\n            reaction.metabolites.forEach(function(met) {\n                if (met.bigg_id==from_node.bigg_id) {\n                    segment.from_node_coefficient = met.coefficient;\n                } else if (met.bigg_id==to_node.bigg_id) {\n                    segment.to_node_coefficient = met.coefficient;\n                }\n            });\n\n            // build connected segments\n            [from_node, to_node].forEach(function(node) {\n                node.connected_segments.push({ segment_id: s_id,\n                                               reaction_id: r_id });\n            });\n\n            // If the metabolite has no bezier points, then add them.\n            var start = map.nodes[segment.from_node_id],\n                end = map.nodes[segment.to_node_id];\n            if (start['node_type']=='metabolite' || end['node_type']=='metabolite') {\n                var midpoint = utils.c_plus_c(start, utils.c_times_scalar(utils.c_minus_c(end, start), 0.5));\n                if (segment.b1 === null) segment.b1 = midpoint;\n                if (segment.b2 === null) segment.b2 = midpoint;\n            }\n\n        }\n        // delete the bad segments\n        segments_to_delete.forEach(function(s_id) {\n            delete reaction.segments[s_id];\n        });\n    }\n\n    // add text_labels to the search index\n    if (enable_search) {\n        for (var label_id in map.text_labels) {\n            var label = map.text_labels[label_id];\n            map.search_index.insert('l'+label_id, { 'name': label.text,\n                                                    'data': { type: 'text_label',\n                                                              text_label_id: label_id }});\n        }\n    }\n\n    // populate the beziers\n    map.beziers = build.new_beziers_for_reactions(map.reactions);\n\n    // get largest ids for adding new reactions, nodes, text labels, and\n    // segments\n    map.largest_ids.reactions = get_largest_id(map.reactions);\n    map.largest_ids.nodes = get_largest_id(map.nodes);\n    map.largest_ids.text_labels = get_largest_id(map.text_labels);\n\n    var largest_segment_id = 0;\n    for (var id in map.reactions) {\n        largest_segment_id = get_largest_id(map.reactions[id].segments,\n                                            largest_segment_id);\n    }\n    map.largest_ids.segments = largest_segment_id;\n\n    // update data with null to populate data-specific attributes\n    map.apply_reaction_data_to_map(null);\n    map.apply_metabolite_data_to_map(null);\n    map.apply_gene_data_to_map(null);\n\n    return map;\n\n    // definitions\n    function get_largest_id(obj, current_largest) {\n        /** Return the largest integer key in obj, or current_largest, whichever is bigger. */\n        if (current_largest===undefined) current_largest = 0;\n        if (obj===undefined) return current_largest;\n        return Math.max.apply(null, Object.keys(obj).map(function(x) {\n            return parseInt(x);\n        }).concat([current_largest]));\n    }\n}\n\n// ---------------------------------------------------------------------\n// more setup\n\nfunction setup_containers(sel) {\n    sel.append('g')\n        .attr('id', 'reactions');\n    sel.append('g')\n        .attr('id', 'nodes');\n    sel.append('g')\n        .attr('id', 'beziers');\n    sel.append('g')\n        .attr('id', 'text-labels');\n}\nfunction reset_containers() {\n    this.sel.select('#reactions')\n        .selectAll('.reaction')\n        .remove();\n    this.sel.select('#nodes')\n        .selectAll('.node')\n        .remove();\n    this.sel.select('#beziers')\n        .selectAll('.bezier')\n        .remove();\n    this.sel.select('#text-labels')\n        .selectAll('.text-label')\n        .remove();\n}\n\n// -------------------------------------------------------------------------\n// Appearance\n\nfunction set_status(status, time) {\n    /** Set the status of the map, with an optional expiration\n     time. Rendering the status is taken care of by the Builder.\n\n     Arguments\n     ---------\n\n     status: The status string.\n\n     time: An optional time, in ms, after which the status is set to ''.\n\n     */\n\n    this.callback_manager.run('set_status', null, status);\n    // clear any other timers on the status bar\n    clearTimeout(this._status_timer);\n    this._status_timer = null;\n\n    if (time!==undefined) {\n        this._status_timer = setTimeout(function() {\n            this.callback_manager.run('set_status', null, '');\n        }.bind(this), time);\n    }\n}\nfunction clear_map() {\n    this.reactions = {};\n    this.beziers = {};\n    this.nodes = {};\n    this.text_labels = {};\n    this.map_name = 'new_map';\n    this.map_id = utils.generate_map_id();\n    this.map_description = '';\n    // reaction_data onto existing map reactions\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n    this.draw_everything();\n}\nfunction has_cobra_model() {\n    return (this.cobra_model !== null);\n}\nfunction draw_everything() {\n    /** Draw the all reactions, nodes, & text labels.\n\n     */\n    this.draw_all_reactions(true, true); // also draw beziers\n    this.draw_all_nodes(true);\n    this.draw_all_text_labels();\n}\n\nfunction draw_all_reactions(draw_beziers, clear_deleted) {\n    /** Draw all reactions, and clear deleted reactions.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n    if (clear_deleted===undefined) clear_deleted = true;\n\n    // Draw all reactions.\n    var reaction_ids = [];\n    for (var reaction_id in this.reactions) {\n        reaction_ids.push(reaction_id);\n    }\n    // If draw_beziers is true, just draw them all, rather than deciding\n    // which ones to draw.\n    this.draw_these_reactions(reaction_ids, false);\n    if (draw_beziers && this.beziers_enabled)\n        this.draw_all_beziers();\n\n    // Clear all deleted reactions.\n    if (clear_deleted)\n        this.clear_deleted_reactions(draw_beziers);\n}\n\nfunction draw_these_reactions(reaction_ids, draw_beziers) {\n    /** Draw specific reactions.\n\n     Does nothing with exit selection. Use clear_deleted_reactions to remove\n     reactions from the DOM.\n\n     Arguments\n     ---------\n\n     reactions_ids: An array of reaction_ids to update.\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // find reactions for reaction_ids\n    var reaction_subset = utils.object_slice_for_ids_ref(this.reactions,\n                                                         reaction_ids);\n\n    // function to update reactions\n    var update_fn = function(sel) {\n        return this.draw.update_reaction(sel, this.scale, this.cobra_model,\n                                         this.nodes, this.defs,\n                                         this.has_data_on_reactions);\n    }.bind(this);\n\n    // draw the reactions\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', reaction_subset,\n                         'reaction_id', this.draw.create_reaction.bind(this.draw),\n                         update_fn);\n\n    if (draw_beziers) {\n        // particular beziers to draw\n        var bezier_ids = build.bezier_ids_for_reaction_ids(reaction_subset);\n        this.draw_these_beziers(bezier_ids);\n    }\n}\n\nfunction clear_deleted_reactions(draw_beziers) {\n    /** Remove any reactions that are not in *this.reactions*.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also clear deleted\n     bezier control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // remove deleted reactions and segments\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', this.reactions, 'reaction_id',\n                         null,\n                         clear_deleted_segments,\n                         function(sel) { sel.remove(); });\n\n    if (draw_beziers==true)\n        this.clear_deleted_beziers();\n\n    // definitions\n    function clear_deleted_segments(update_selection) {\n        // draw segments\n        utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                                   null,\n                                   null,\n                                   function(sel) { sel.remove(); });\n    };\n}\n\nfunction draw_all_nodes(clear_deleted) {\n    /** Draw all nodes, and clear deleted nodes.\n\n     Arguments\n     ---------\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (clear_deleted === undefined) clear_deleted = true;\n\n    var node_ids = [];\n    for (var node_id in this.nodes) {\n        node_ids.push(node_id);\n    }\n    this.draw_these_nodes(node_ids);\n\n    // clear the deleted nodes\n    if (clear_deleted)\n        this.clear_deleted_nodes();\n}\n\nfunction draw_these_nodes(node_ids) {\n    /** Draw specific nodes.\n\n     Does nothing with exit selection. Use clear_deleted_nodes to remove\n     nodes from the DOM.\n\n     Arguments\n     ---------\n\n     nodes_ids: An array of node_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var node_subset = utils.object_slice_for_ids_ref(this.nodes, node_ids);\n\n    // functions to create and update nodes\n    var create_fn = function(sel) {\n        return this.draw.create_node(sel,\n                                     this.nodes,\n                                     this.reactions);\n    }.bind(this),\n        update_fn = function(sel) {\n            return this.draw.update_node(sel,\n                                         this.scale,\n                                         this.has_data_on_nodes,\n                                         this.behavior.selectable_mousedown,\n                                         this.behavior.selectable_click,\n                                         this.behavior.node_mouseover,\n                                         this.behavior.node_mouseout,\n                                         this.behavior.selectable_drag,\n                                         this.behavior.node_label_drag);\n        }.bind(this);\n\n    // draw the nodes\n    utils.draw_an_object(this.sel, '#nodes', '.node', node_subset, 'node_id',\n                         create_fn, update_fn);\n}\n\nfunction clear_deleted_nodes() {\n    /** Remove any nodes that are not in *this.nodes*.\n\n     */\n    // run remove for exit selection\n    utils.draw_an_object(this.sel, '#nodes', '.node', this.nodes, 'node_id',\n                         null, null, function(sel) { sel.remove(); });\n}\n\nfunction draw_all_text_labels() {\n    // Draw all text_labels.\n    var text_label_ids = [];\n    for (var text_label_id in this.text_labels) {\n        text_label_ids.push(text_label_id);\n    }\n    this.draw_these_text_labels(text_label_ids);\n\n    // Clear all deleted text_labels.\n    this.clear_deleted_text_labels();\n}\n\nfunction draw_these_text_labels(text_label_ids) {\n    /** Draw specific text_labels.\n\n     Does nothing with exit selection. Use clear_deleted_text_labels to remove\n     text_labels from the DOM.\n\n     Arguments\n     ---------\n\n     text_labels_ids: An array of text_label_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var text_label_subset = utils.object_slice_for_ids_ref(this.text_labels, text_label_ids);\n\n    // function to update text_labels\n    var update_fn = function(sel) {\n        return this.draw.update_text_label(sel, this.behavior);;\n    }.bind(this);\n\n    // draw the text_labels\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         text_label_subset, 'text_label_id',\n                         this.draw.create_text_label.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_text_labels() {\n    /** Remove any text_labels that are not in *this.text_labels*.\n\n     */\n    // clear deleted\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         this.text_labels, 'text_label_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction draw_all_beziers() {\n    /** Draw all beziers, and clear deleted reactions.\n\n     */\n    var bezier_ids = [];\n    for (var bezier_id in this.beziers) {\n        bezier_ids.push(bezier_id);\n    }\n    this.draw_these_beziers(bezier_ids);\n\n    // clear delete beziers\n    this.clear_deleted_beziers();\n}\n\nfunction draw_these_beziers(bezier_ids) {\n    /** Draw specific beziers.\n\n     Does nothing with exit selection. Use clear_deleted_beziers to remove\n     beziers from the DOM.\n\n     Arguments\n     ---------\n\n     beziers_ids: An array of bezier_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var bezier_subset = utils.object_slice_for_ids_ref(this.beziers, bezier_ids);\n\n    // function to update beziers\n    var update_fn = function(sel) {\n        return this.draw.update_bezier(sel,\n                                       this.beziers_enabled,\n                                       this.behavior.bezier_drag,\n                                       this.behavior.bezier_mouseover,\n                                       this.behavior.bezier_mouseout,\n                                       this.nodes,\n                                       this.reactions);\n    }.bind(this);\n\n    // draw the beziers\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', bezier_subset,\n                         'bezier_id', this.draw.create_bezier.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_beziers() {\n    /** Remove any beziers that are not in *this.beziers*.\n\n     */\n    // remove deleted\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', this.beziers,\n                         'bezier_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction show_beziers() {\n    this.toggle_beziers(true);\n}\n\nfunction hide_beziers() {\n    this.toggle_beziers(false);\n}\n\nfunction toggle_beziers(on_off) {\n    if (on_off===undefined) this.beziers_enabled = !this.beziers_enabled;\n    else this.beziers_enabled = on_off;\n    this.draw_all_beziers();\n    this.callback_manager.run('toggle_beziers', null, this.beziers_enabled);\n}\n\nfunction apply_reaction_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style');\n    var has_data = data_styles.apply_reaction_data_to_reactions(this.reactions, data,\n                                                                styles, compare_style);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\nfunction apply_metabolite_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('metabolite_styles'),\n        compare_style = this.settings.get_option('metabolite_compare_style');\n\n    var has_data = data_styles.apply_metabolite_data_to_nodes(this.nodes, data,\n                                                              styles, compare_style);\n    this.has_data_on_nodes = has_data;\n\n    return this.calc_data_stats('metabolite');\n}\n\nfunction apply_gene_data_to_map(gene_data_obj) {\n    /** Returns True if the scale has changed.\n\n     Arguments\n     ---------\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { rule: 'rule_string', genes: { gene_id: value } } }\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        and_method_in_gene_reaction_rule = this.settings.get_option('and_method_in_gene_reaction_rule');\n\n    var has_data = data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                                            styles, identifiers_on_map,\n                                                            compare_style,\n                                                            and_method_in_gene_reaction_rule);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\n// ------------------------------------------------\n// Data domains\nfunction get_data_statistics() {\n    return this.data_statistics;\n}\n\nfunction calc_data_stats(type) {\n    /** Returns True if the stats have changed.\n\n     Arguments\n     ---------\n\n     type: Either 'metabolite' or 'reaction'\n\n     */\n\n    if (['reaction', 'metabolite'].indexOf(type) == -1)\n        throw new Error('Bad type ' + type);\n\n    // make the data structure\n    if (!('data_statistics' in this)) {\n        this.data_statistics = {};\n        this.data_statistics[type] = {};\n    } else if (!(type in this.data_statistics)) {\n        this.data_statistics[type] = {};\n    }\n\n    var same = true;\n    // default min and max\n    var vals = [];\n    if (type == 'metabolite') {\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            // check number\n            if (node.data !== null)\n                vals.push(node.data);\n        }\n    } else if (type == 'reaction') {\n        for (var reaction_id in this.reactions) {\n            var reaction = this.reactions[reaction_id];\n            // check number\n            if (reaction.data !== null)\n                vals.push(reaction.data);\n        }\n    }\n\n    // calculate these statistics\n    var quartiles = utils.quartiles(vals),\n        funcs = [['min', on_array(Math.min)],\n                 ['max', on_array(Math.max)],\n                 ['mean', utils.mean],\n                 ['Q1', function() { return quartiles[0]; }],\n                 ['median', function() { return quartiles[1]; }],\n                 ['Q3', function() { return quartiles[2]; }]];\n    funcs.forEach(function(ar) {\n        var new_val, name = ar[0];\n        if (vals.length == 0) {\n            new_val = null;\n        } else {\n            var fn = ar[1];\n            new_val = fn(vals);\n        }\n        if (new_val != this.data_statistics[type][name])\n            same = false;\n        this.data_statistics[type][name] = new_val;\n    }.bind(this));\n\n    if (type == 'reaction')\n        this.callback_manager.run('calc_data_stats__reaction', null, !same);\n    else\n        this.callback_manager.run('calc_data_stats__metabolite', null, !same);\n    return !same;\n\n    // definitions\n    function on_array(fn) {\n        return function (array) { return fn.apply(null, array); };\n    }\n}\n\n// ---------------------------------------------------------------------\n// Node interaction\n\nfunction get_coords_for_node(node_id) {\n    var node = this.nodes[node_id],\n        coords = {'x': node.x, 'y': node.y};\n    return coords;\n}\nfunction get_selected_node_ids() {\n    var selected_node_ids = [];\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) { selected_node_ids.push(d.node_id); });\n    return selected_node_ids;\n}\nfunction get_selected_nodes() {\n    var selected_nodes = {},\n        self = this;\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_nodes[d.node_id] = this.nodes[d.node_id];\n        }.bind(this));\n    return selected_nodes;\n}\nfunction get_selected_text_label_ids() {\n    var selected_text_label_ids = [];\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) { selected_text_label_ids.push(d.text_label_id); });\n    return selected_text_label_ids;\n}\nfunction get_selected_text_labels() {\n    var selected_text_labels = {},\n        self = this;\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_text_labels[d.text_label_id] = this.text_labels[d.text_label_id];\n        }.bind(this));\n    return selected_text_labels;\n}\n\nfunction select_all() {\n    /** Select all nodes and text labels.\n\n     */\n    this.sel.selectAll('#nodes,#text-labels')\n        .selectAll('.node,.text-label')\n        .classed('selected', true);\n}\n\nfunction select_none() {\n    /** Deselect all nodes and text labels.\n\n     */\n    this.sel.selectAll('.selected')\n        .classed('selected', false);\n}\n\nfunction invert_selection() {\n    /** Invert selection of nodes and text labels.\n\n     */\n    var selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label');\n    selection.classed('selected', function() {\n        return !d3.select(this).classed('selected');\n    });\n}\n\nfunction select_metabolite_with_id(node_id) {\n    /** Select a metabolite with the given id, and turn off the reaction\n     target.\n\n     */\n    // deselect all text labels\n    this.deselect_text_labels();\n\n    var node_selection = this.sel.select('#nodes').selectAll('.node'),\n        coords,\n        selected_node;\n    node_selection.classed('selected', function(d) {\n        var selected = String(d.node_id) == String(node_id);\n        if (selected) {\n            selected_node = d;\n            coords = { x: d.x, y: d.y };\n        }\n        return selected;\n    });\n    this.sel.selectAll('.start-reaction-target').style('visibility', 'hidden');\n    this.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n}\nfunction select_selectable(node, d) {\n    /** Select a metabolite or text label, and manage the shift key.\n\n     */\n    var classable_selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label'),\n        shift_key_on = this.key_manager.held_keys.shift,\n        classable_node;\n    if (d3.select(node).attr('class').indexOf('text-label') == -1) {\n        // node\n        classable_node = node.parentNode;\n    } else {\n        // text-label\n        classable_node = node;\n    }\n    // toggle selection\n    if (shift_key_on) {\n        // toggle this node\n        d3.select(classable_node)\n            .classed('selected', !d3.select(classable_node).classed('selected'));\n    } else {\n        // unselect all other nodes, and select this one\n        classable_selection.classed('selected', false);\n        d3.select(classable_node).classed('selected', true);\n    }\n    // run the select_metabolite callback\n    var selected_nodes = this.sel.select('#nodes').selectAll('.selected'),\n        node_count = 0,\n        coords,\n        selected_node;\n    selected_nodes.each(function(d) {\n        selected_node = d;\n        coords = { x: d.x, y: d.y };\n        node_count++;\n    });\n    this.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n}\nfunction select_single_node() {\n    /** Unselect all but one selected node, and return the node.\n\n     If no nodes are selected, return null.\n\n     */\n    var out = null,\n        self = this,\n        node_selection = this.sel.select('#nodes').selectAll('.selected');\n    node_selection.classed('selected', function(d, i) {\n        if (i==0) {\n            out = d;\n            return true;\n        } else {\n            return false;\n        }\n    });\n    return out;\n}\nfunction deselect_nodes() {\n    var node_selection = this.sel.select('#nodes').selectAll('.node');\n    node_selection.classed('selected', false);\n    this.callback_manager.run('deselect_nodes');\n}\nfunction select_text_label(sel, d) {\n    // deselect all nodes\n    this.deselect_nodes();\n    // find the new selection\n    // Ignore shift key and only allow single selection for now\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', function(p) { return d === p; });\n    var selected_text_labels = this.sel.select('#text-labels').selectAll('.selected'),\n        coords;\n    selected_text_labels.each(function(d) {\n        coords = { x: d.x, y: d.y };\n    });\n    this.callback_manager.run('select_text_label');\n}\nfunction deselect_text_labels() {\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', false);\n}\n\n// ---------------------------------------------------------------------\n// Delete\n\nfunction delete_selected() {\n    /** Delete the selected nodes and associated segments and reactions, and selected labels.\n\n     Undoable.\n\n     */\n    var selected_nodes = this.get_selected_nodes(),\n        selected_text_labels = this.get_selected_text_labels();\n    if (Object.keys(selected_nodes).length >= 1 ||\n        Object.keys(selected_text_labels).length >= 1)\n        this.delete_selectable(selected_nodes, selected_text_labels, true);\n}\nfunction delete_selectable(selected_nodes, selected_text_labels, should_draw) {\n    /** Delete the nodes and associated segments and reactions. Undoable.\n\n     Arguments\n     ---------\n\n     selected_nodes: An object that is a subset of map.nodes.\n\n     selected_text_labels: An object that is a subset of map.text_labels.\n\n     should_draw: A boolean argument to determine whether to draw the changes to the map.\n\n     */\n\n    var out = this.segments_and_reactions_for_nodes(selected_nodes),\n        segment_objs_w_segments = out.segment_objs_w_segments, // TODO repeated values here\n        reactions = out.reactions;\n\n    // copy nodes to undelete\n    var saved_nodes = utils.clone(selected_nodes),\n        saved_segment_objs_w_segments = utils.clone(segment_objs_w_segments),\n        saved_reactions = utils.clone(reactions),\n        saved_text_labels = utils.clone(selected_text_labels),\n        delete_and_draw = function(nodes, reactions, segment_objs,\n                                   selected_text_labels) {\n            // delete nodes, segments, and reactions with no segments\n            this.delete_node_data(Object.keys(selected_nodes));\n            this.delete_segment_data(segment_objs); // also deletes beziers\n            this.delete_reaction_data(Object.keys(reactions));\n            this.delete_text_label_data(Object.keys(selected_text_labels));\n\n            // apply the reaction and node data\n            var changed_r_scale = false,\n                changed_m_scale = false;\n            if (this.has_data_on_reactions)\n                changed_r_scale = this.calc_data_stats('reaction');\n            if (this.has_data_on_nodes)\n                changed_m_scale = this.calc_data_stats('metabolite');\n\n            // redraw\n            if (should_draw) {\n                if (changed_r_scale)\n                    this.draw_all_reactions(true, true);\n                else\n                    this.clear_deleted_reactions(); // also clears segments and beziers\n                if (changed_m_scale)\n                    this.draw_all_nodes(true);\n                else\n                    this.clear_deleted_nodes();\n                this.clear_deleted_text_labels();\n            }\n        }.bind(this);\n\n    // delete\n    delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                    selected_text_labels);\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // redraw the saved nodes, reactions, and segments\n\n        this.extend_nodes(saved_nodes);\n        this.extend_reactions(saved_reactions);\n        var reaction_ids_to_draw = Object.keys(saved_reactions);\n        for (var segment_id in saved_segment_objs_w_segments) {\n            var segment_obj = saved_segment_objs_w_segments[segment_id];\n\n            var segment = segment_obj.segment;\n            this.reactions[segment_obj.reaction_id]\n                .segments[segment_obj.segment_id] = segment;\n\n            // updated connected nodes\n            [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n                // not necessary for the deleted nodes\n                if (node_id in saved_nodes) return;\n                var node = this.nodes[node_id];\n                node.connected_segments.push({ reaction_id: segment_obj.reaction_id,\n                                               segment_id: segment_obj.segment_id });\n            }.bind(this));\n\n            // extend the beziers\n            var seg_id = segment_obj.segment_id,\n                r_id = segment_obj.reaction_id,\n                seg_o = {};\n            seg_o[seg_id] = segment_obj.segment;\n            utils.extend(this.beziers, build.new_beziers_for_segments(seg_o, r_id));\n\n            if (reaction_ids_to_draw.indexOf(segment_obj.reaction_id)==-1)\n                reaction_ids_to_draw.push(segment_obj.reaction_id);\n        }\n\n        // apply the reaction and node data\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(reaction_ids_to_draw);\n        } else {\n            if (should_draw) this.draw_these_reactions(reaction_ids_to_draw);\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (should_draw) {\n                if (scale_changed) this.draw_all_nodes(false);\n                else this.draw_these_nodes(Object.keys(saved_nodes));\n            }\n        } else {\n            if (should_draw) this.draw_these_nodes(Object.keys(saved_nodes));\n        }\n\n        // redraw the saved text_labels\n        utils.extend(this.text_labels, saved_text_labels);\n        if (should_draw) this.draw_these_text_labels(Object.keys(saved_text_labels));\n        // copy text_labels to re-delete\n        selected_text_labels = utils.clone(saved_text_labels);\n\n        // copy nodes to re-delete\n        selected_nodes = utils.clone(saved_nodes);\n        segment_objs_w_segments = utils.clone(saved_segment_objs_w_segments);\n        reactions = utils.clone(saved_reactions);\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                        selected_text_labels);\n    }.bind(this));\n}\n\nfunction delete_node_data(node_ids) {\n    /** Delete nodes, and remove from search index.\n     */\n    node_ids.forEach(function(node_id) {\n        if (this.enable_search && this.nodes[node_id].node_type=='metabolite') {\n            var found = (this.search_index.remove('n' + node_id)\n                         && this.search_index.remove('n_name' + node_id));\n            if (!found)\n                console.warn('Could not find deleted metabolite in search index');\n        }\n        delete this.nodes[node_id];\n    }.bind(this));\n}\n\nfunction delete_segment_data(segment_objs) {\n    /** Delete segments, update connected_segments in nodes, and delete\n     bezier points.\n\n     segment_objs: Object with values like { reaction_id: '123', segment_id: '456' }\n\n     */\n    for (var segment_id in segment_objs) {\n        var segment_obj = segment_objs[segment_id];\n        var reaction = this.reactions[segment_obj.reaction_id];\n\n        // segment already deleted\n        if (!(segment_obj.segment_id in reaction.segments)) return;\n\n        var segment = reaction.segments[segment_obj.segment_id];\n        // updated connected nodes\n        [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n            if (!(node_id in this.nodes)) return;\n            var node = this.nodes[node_id];\n            node.connected_segments = node.connected_segments.filter(function(so) {\n                return so.segment_id != segment_obj.segment_id;\n            });\n        }.bind(this));\n\n        // remove beziers\n        ['b1', 'b2'].forEach(function(bez) {\n            var bez_id = build.bezier_id_for_segment_id(segment_obj.segment_id, bez);\n            delete this.beziers[bez_id];\n        }.bind(this));\n\n        delete reaction.segments[segment_obj.segment_id];\n    }\n}\nfunction delete_reaction_data(reaction_ids) {\n    /** Delete reactions, segments, and beziers, and remove reaction from\n     search index.\n\n     */\n    reaction_ids.forEach(function(reaction_id) {\n        // remove beziers\n        var reaction = this.reactions[reaction_id];\n        for (var segment_id in reaction.segments) {\n            ['b1', 'b2'].forEach(function(bez) {\n                var bez_id = build.bezier_id_for_segment_id(segment_id, bez);\n                delete this.beziers[bez_id];\n            }.bind(this));\n        }\n        // delete reaction\n        delete this.reactions[reaction_id];\n        // remove from search index\n        var found = (this.search_index.remove('r' + reaction_id)\n                     && this.search_index.remove('r_name' + reaction_id));\n        if (!found)\n            console.warn('Could not find deleted reaction ' +\n                         reaction_id + ' in search index');\n        for (var g_id in reaction.genes) {\n            var found = (this.search_index.remove('r' + reaction_id + '_g' + g_id)\n                         && this.search_index.remove('r' + reaction_id + '_g_name' + g_id));\n            if (!found)\n                console.warn('Could not find deleted gene ' +\n                             g_id + ' in search index');\n        }\n    }.bind(this));\n}\nfunction delete_text_label_data(text_label_ids) {\n    /** delete text labels for an array of ids\n     */\n    text_label_ids.forEach(function(text_label_id) {\n        // delete label\n        delete this.text_labels[text_label_id];\n        // remove from search index\n        var found = this.search_index.remove('l'+text_label_id);\n        if (!found)\n            console.warn('Could not find deleted text label in search index');\n    }.bind(this));\n}\n\n// ---------------------------------------------------------------------\n// Building\n\nfunction new_reaction_from_scratch(starting_reaction, coords, direction) {\n    /** Draw a reaction on a blank canvas.\n\n     starting_reaction: bigg_id for a reaction to draw.\n     coords: coordinates to start drawing\n\n     */\n\n    // If there is no cobra model, error\n    if (!this.cobra_model) return console.error('No CobraModel. Cannot build new reaction');\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = utils.clone(this.cobra_model.reactions[starting_reaction]);\n\n    // create the first node\n    for (var metabolite_id in cobra_reaction.metabolites) {\n        var coefficient = cobra_reaction.metabolites[metabolite_id],\n            metabolite = this.cobra_model.metabolites[metabolite_id];\n        if (coefficient < 0) {\n            var selected_node_id = String(++this.largest_ids.nodes),\n                label_d = { x: 30, y: 10 },\n                selected_node = { connected_segments: [],\n                                  x: coords.x,\n                                  y: coords.y,\n                                  node_is_primary: true,\n                                  label_x: coords.x + label_d.x,\n                                  label_y: coords.y + label_d.y,\n                                  name: metabolite.name,\n                                  bigg_id: metabolite_id,\n                                  node_type: 'metabolite' },\n                new_nodes = {};\n            new_nodes[selected_node_id] = selected_node;\n            break;\n        }\n    }\n\n    // draw\n    extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes);\n\n    // draw the reaction\n    var out = this.new_reaction_for_metabolite(starting_reaction,\n                                               selected_node_id,\n                                               direction, false),\n        reaction_redo = out.redo,\n        reaction_undo = out.undo;\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // first undo the reaction\n        reaction_undo();\n        // get the nodes to delete\n        this.delete_node_data(Object.keys(new_nodes));\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        // draw\n        this.clear_deleted_nodes();\n        // deselect\n        this.deselect_nodes();\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n        // now redo the reaction\n        reaction_redo();\n    }.bind(this));\n\n    return null;\n\n    // definitions\n    function extend_and_draw_metabolite(new_nodes, selected_node_id) {\n        this.extend_nodes(new_nodes);\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.apply_metabolite_data_to_nodes(new_nodes);\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes([selected_node_id]);\n        } else {\n            this.draw_these_nodes([selected_node_id]);\n        }\n    }\n}\n\nfunction extend_nodes(new_nodes) {\n    /** Add new nodes to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_type != 'metabolite')\n                continue;\n            this.search_index.insert('n' + node_id,\n                                     { 'name': node.bigg_id,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n            this.search_index.insert('n_name' + node_id,\n                                     { 'name': node.name,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n        }\n    }\n    utils.extend(this.nodes, new_nodes);\n}\nfunction extend_reactions(new_reactions) {\n    /** Add new reactions to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var r_id in new_reactions) {\n            var reaction = new_reactions[r_id];\n            this.search_index.insert('r' + r_id, { 'name': reaction.bigg_id,\n                                                   'data': { type: 'reaction',\n                                                             reaction_id: r_id }});\n            this.search_index.insert('r_name' + r_id, { 'name': reaction.name,\n                                                        'data': { type: 'reaction',\n                                                                  reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                this.search_index.insert('r' + r_id + '_g' + g_id,\n                                         { 'name': gene.bigg_id,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n                this.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                         { 'name': gene.name,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n            }\n        }\n    }\n    utils.extend(this.reactions, new_reactions);\n}\n\nfunction new_reaction_for_metabolite(reaction_bigg_id, selected_node_id,\n                                     direction, apply_undo_redo) {\n    /** Build a new reaction starting with selected_met.\n\n     Undoable\n\n     Arguments\n     ---------\n\n     reaction_bigg_id: The BiGG ID of the reaction to draw.\n\n     selected_node_id: The ID of the node to begin drawing with.\n\n     direction: The direction to draw in.\n\n     apply_undo_redo: (Optional, Default: true) If true, then add to the\n     undo stack. Otherwise, just return the undo and redo functions.\n\n     Returns\n     -------\n\n     { undo: undo_function,\n     redo: redo_function }\n\n     */\n\n    // default args\n    if (apply_undo_redo === undefined) apply_undo_redo = true;\n\n    // get the metabolite node\n    var selected_node = this.nodes[selected_node_id];\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = this.cobra_model.reactions[reaction_bigg_id];\n\n    // build the new reaction\n    var out = build.new_reaction(reaction_bigg_id, cobra_reaction,\n                                 this.cobra_model.metabolites,\n                                 selected_node_id,\n                                 utils.clone(selected_node),\n                                 this.largest_ids,\n                                 this.cobra_model.cofactors,\n                                 direction),\n        new_nodes = out.new_nodes,\n        new_reactions = out.new_reactions,\n        new_beziers = out.new_beziers;\n\n    // draw\n    extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                          new_beziers, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes),\n        saved_reactions = utils.clone(new_reactions),\n        saved_beziers = utils.clone(new_beziers);\n\n    // add to undo/redo stack\n    var undo_fn = function() {\n        // undo\n        // get the nodes to delete\n        delete new_nodes[selected_node_id];\n        this.delete_node_data(Object.keys(new_nodes));\n        this.delete_reaction_data(Object.keys(new_reactions)); // also deletes beziers\n        select_metabolite_with_id.apply(this, [selected_node_id]);\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        new_reactions = utils.clone(saved_reactions);\n        new_beziers = utils.clone(saved_beziers);\n        // draw\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, true);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.clear_deleted_reactions(true); // also clears segments and beziers\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(true);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.clear_deleted_nodes();\n        }\n    }.bind(this),\n        redo_fn = function () {\n            // redo\n            // clone the nodes and reactions, to redo this action later\n            extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                                  new_beziers, selected_node_id]);\n        }.bind(this);\n\n    if (apply_undo_redo)\n        this.undo_stack.push(undo_fn, redo_fn);\n\n    return { undo: undo_fn,\n             redo: redo_fn };\n\n    // definitions\n    function extend_and_draw_reaction(new_nodes, new_reactions, new_beziers,\n                                      selected_node_id) {\n        this.extend_reactions(new_reactions);\n        utils.extend(this.beziers, new_beziers);\n        // remove the selected node so it can be updated\n        this.delete_node_data([selected_node_id]); // TODO this is a hack. fix\n        this.extend_nodes(new_nodes);\n\n        // apply the reaction and node data to the scales\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.draw_these_reactions(Object.keys(new_reactions));\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.draw_these_nodes(Object.keys(new_nodes));\n        }\n\n        // select new primary metabolite\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_is_primary && node_id!=selected_node_id) {\n                this.select_metabolite_with_id(node_id);\n                var new_coords = { x: node.x, y: node.y };\n                if (this.zoom_container)\n                    this.zoom_container.translate_off_screen(new_coords);\n            }\n        }\n    }\n\n}\nfunction cycle_primary_node() {\n    var selected_nodes = this.get_selected_nodes();\n    // get the first node\n    var node_id = Object.keys(selected_nodes)[0],\n        node = selected_nodes[node_id],\n        reactions = this.reactions,\n        nodes = this.nodes;\n    // make the other reactants or products secondary\n    // 1. Get the connected anchor nodes for the node\n    var connected_anchor_ids = [],\n        reactions_to_draw;\n    nodes[node_id].connected_segments.forEach(function(segment_info) {\n        reactions_to_draw = [segment_info.reaction_id];\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        connected_anchor_ids.push(segment.from_node_id==node_id ?\n                                  segment.to_node_id : segment.from_node_id);\n    });\n    // can only be connected to one anchor\n    if (connected_anchor_ids.length != 1) {\n        console.error('Only connected nodes with a single reaction can be selected');\n        return;\n    }\n    var connected_anchor_id = connected_anchor_ids[0];\n    // 2. find nodes connected to the anchor that are metabolites\n    var related_node_ids = [node_id];\n    var segments = [];\n    nodes[connected_anchor_id].connected_segments.forEach(function(segment_info) { // deterministic order\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        var conn_met_id = segment.from_node_id == connected_anchor_id ? segment.to_node_id : segment.from_node_id,\n            conn_node = nodes[conn_met_id];\n        if (conn_node.node_type == 'metabolite' && conn_met_id != node_id) {\n            related_node_ids.push(String(conn_met_id));\n        }\n    });\n    // 3. make sure they only have 1 reaction connection, and check if\n    // they match the other selected nodes\n    for (var i=0; i<related_node_ids.length; i++) {\n        if (nodes[related_node_ids[i]].connected_segments.length > 1) {\n            console.error('Only connected nodes with a single reaction can be selected');\n            return;\n        }\n    }\n    for (var a_selected_node_id in selected_nodes) {\n        if (a_selected_node_id!=node_id && related_node_ids.indexOf(a_selected_node_id) == -1) {\n            console.warn('Selected nodes are not on the same reaction');\n            return;\n        }\n    }\n    // 4. change the primary node, and change coords, label coords, and beziers\n    var nodes_to_draw = [],\n        last_i = related_node_ids.length - 1,\n        last_node = nodes[related_node_ids[last_i]],\n        last_is_primary = last_node.node_is_primary,\n        last_coords = { x: last_node.x, y: last_node.y,\n                        label_x: last_node.label_x, label_y: last_node.label_y };\n    if (last_node.connected_segments.length > 1)\n        console.warn('Too many connected segments for node ' + last_node.node_id);\n    var last_segment_info = last_node.connected_segments[0], // guaranteed above to have only one\n        last_segment;\n    try {\n        last_segment = reactions[last_segment_info.reaction_id].segments[last_segment_info.segment_id];\n        if (last_segment === undefined) throw new Error('undefined segment');\n    } catch (e) {\n        console.error('Could not find connected segment ' + last_segment_info.segment_id);\n        return;\n    }\n    var last_bezier = { b1: last_segment.b1, b2: last_segment.b2 },\n        primary_node_id;\n    related_node_ids.forEach(function(related_node_id) {\n        var node = nodes[related_node_id],\n            this_is_primary = node.node_is_primary,\n            these_coords = { x: node.x, y: node.y,\n                             label_x: node.label_x, label_y: node.label_y },\n            this_segment_info = node.connected_segments[0],\n            this_segment = reactions[this_segment_info.reaction_id].segments[this_segment_info.segment_id],\n            this_bezier = { b1: this_segment.b1, b2: this_segment.b2 };\n        node.node_is_primary = last_is_primary;\n        node.x = last_coords.x; node.y = last_coords.y;\n        node.label_x = last_coords.label_x; node.label_y = last_coords.label_y;\n        this_segment.b1 = last_bezier.b1; this_segment.b2 = last_bezier.b2;\n        last_is_primary = this_is_primary;\n        last_coords = these_coords;\n        last_bezier = this_bezier;\n        if (node.node_is_primary) primary_node_id = related_node_id;\n        nodes_to_draw.push(related_node_id);\n    });\n    // 5. cycle the connected_segments array so the next time, it cycles differently\n    var old_connected_segments = nodes[connected_anchor_id].connected_segments,\n        last_i = old_connected_segments.length - 1,\n        new_connected_segments = [old_connected_segments[last_i]];\n    old_connected_segments.forEach(function(segment, i) {\n        if (last_i==i) return;\n        new_connected_segments.push(segment);\n    });\n    nodes[connected_anchor_id].connected_segments = new_connected_segments;\n    // 6. draw the nodes\n    this.draw_these_nodes(nodes_to_draw);\n    this.draw_these_reactions(reactions_to_draw);\n    // 7. select the primary node\n    this.select_metabolite_with_id(primary_node_id);\n    return;\n}\n\nfunction toggle_selected_node_primary() {\n    /** Toggle the primary/secondary status of each selected node.\n\n     Undoable.\n\n     */\n    var selected_node_ids = this.get_selected_node_ids(),\n        go = function(ids) {\n            var nodes_to_draw = {},\n                hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n            ids.forEach(function(id) {\n                if (!(id in this.nodes)) {\n                    console.warn('Could not find node: ' + id);\n                    return;\n                }\n                var node = this.nodes[id];\n                if (node.node_type == 'metabolite') {\n                    node.node_is_primary = !node.node_is_primary;\n                    nodes_to_draw[id] = node;\n                }\n            }.bind(this));\n            // draw the nodes\n            this.draw_these_nodes(Object.keys(nodes_to_draw));\n            // draw associated reactions\n            if (hide_secondary_metabolites) {\n                var out = this.segments_and_reactions_for_nodes(nodes_to_draw),\n                    reaction_ids_to_draw_o = {};\n                for (var id in out.segment_objs_w_segments) {\n                    var r_id = out.segment_objs_w_segments[id].reaction_id;\n                    reaction_ids_to_draw_o[r_id] = true;\n                }\n                this.draw_these_reactions(Object.keys(reaction_ids_to_draw_o));\n            }\n        }.bind(this);\n\n    // go\n    go(selected_node_ids);\n\n    // add to the undo stack\n    this.undo_stack.push(function () {\n        go(selected_node_ids);\n    }, function () {\n        go(selected_node_ids);\n    });\n}\n\nfunction segments_and_reactions_for_nodes(nodes) {\n    /** Get segments and reactions that should be deleted with node deletions\n\n     */\n    var segment_objs_w_segments = {},\n        these_reactions = {},\n        segment_ids_for_reactions = {},\n        reactions = this.reactions;\n    // for each node\n    for (var node_id in nodes) {\n        var node = nodes[node_id];\n        // find associated segments and reactions\n        node.connected_segments.forEach(function(segment_obj) {\n            var segment;\n            try {\n                segment = reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segments for node');\n                return;\n            }\n            var segment_obj_w_segment = utils.clone(segment_obj);\n            segment_obj_w_segment['segment'] = utils.clone(segment);\n            segment_objs_w_segments[segment_obj.segment_id] = segment_obj_w_segment;\n            if (!(segment_obj.reaction_id in segment_ids_for_reactions))\n                segment_ids_for_reactions[segment_obj.reaction_id] = [];\n            segment_ids_for_reactions[segment_obj.reaction_id].push(segment_obj.segment_id);\n        });\n    }\n    // find the reactions that should be deleted because they have no segments left\n    for (var reaction_id in segment_ids_for_reactions) {\n        var reaction = reactions[reaction_id],\n            these_ids = segment_ids_for_reactions[reaction_id],\n            has = true;\n        for (var segment_id in reaction.segments) {\n            if (these_ids.indexOf(segment_id)==-1) has = false;\n        }\n        if (has) these_reactions[reaction_id] = reaction;\n    }\n    return { segment_objs_w_segments: segment_objs_w_segments, reactions: these_reactions };\n}\n\nfunction new_text_label(coords, text) {\n    // make an label\n    var out = build.new_text_label(this.largest_ids, text, coords);\n    this.text_labels[out.id] = out.label;\n    var sel = this.draw_these_text_labels([out.id]);\n    // add to the search index\n    this.search_index.insert('l' + out.id, { 'name': text,\n                                             'data': { type: 'text_label',\n                                                       text_label_id: out.id }});\n    return out.id;\n}\n\nfunction edit_text_label(text_label_id, new_value, should_draw) {\n    // save old value\n    var saved_value = this.text_labels[text_label_id].text,\n        edit_and_draw = function(new_val, should_draw) {\n            // set the new value\n            this.text_labels[text_label_id].text = new_val;\n            if (should_draw) this.draw_these_text_labels([text_label_id]);\n            // update in the search index\n            var record_id = 'l' + text_label_id,\n                found = this.search_index.remove(record_id);\n            if (!found)\n                console.warn('Could not find modified text label in search index');\n            this.search_index.insert(record_id, { 'name': new_val,\n                                                  'data': { type: 'text_label',\n                                                            text_label_id: text_label_id }});\n        }.bind(this);\n\n    // edit the label\n    edit_and_draw(new_value, should_draw);\n\n    // add to undo stack\n    this.undo_stack.push(function() {\n        edit_and_draw(saved_value, should_draw);\n    }, function () {\n        edit_and_draw(new_value, should_draw);\n    });\n}\n\n// -------------------------------------------------------------------------\n// Zoom\n\nfunction zoom_extent_nodes(margin) {\n    /** Zoom to fit all the nodes.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'nodes');\n}\nfunction zoom_extent_canvas(margin) {\n    /** Zoom to fit the canvas.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'canvas');\n}\nfunction _zoom_extent(margin, mode) {\n    /** Zoom to fit the canvas or all the nodes. Returns error if one is\n     raised.\n\n     Arguments\n     ---------\n\n     margin: optional argument to set the margins.\n\n     mode: Values are 'nodes', 'canvas'.\n\n     */\n\n    // optional args\n    if (margin===undefined) margin = (mode=='nodes' ? 0.2 : 0);\n    if (mode===undefined) mode = 'canvas';\n\n    var new_zoom, new_pos,\n        size = this.get_size();\n    // scale margin to window size\n    margin = margin * size.height;\n\n    if (mode=='nodes') {\n        // get the extent of the nodes\n        var min = { x: null, y: null }, // TODO make infinity?\n            max = { x: null, y: null };\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            if (min.x===null) min.x = node.x;\n            if (min.y===null) min.y = node.y;\n            if (max.x===null) max.x = node.x;\n            if (max.y===null) max.y = node.y;\n\n            min.x = Math.min(min.x, node.x);\n            min.y = Math.min(min.y, node.y);\n            max.x = Math.max(max.x, node.x);\n            max.y = Math.max(max.y, node.y);\n        }\n        // set the zoom\n        new_zoom = Math.min((size.width - margin*2) / (max.x - min.x),\n                            (size.height - margin*2) / (max.y - min.y));\n        new_pos = { x: - (min.x * new_zoom) + margin + ((size.width - margin*2 - (max.x - min.x)*new_zoom) / 2),\n                    y: - (min.y * new_zoom) + margin + ((size.height - margin*2 - (max.y - min.y)*new_zoom) / 2) };\n    } else if (mode=='canvas') {\n        // center the canvas\n        new_zoom =  Math.min((size.width - margin*2) / (this.canvas.width),\n                             (size.height - margin*2) / (this.canvas.height));\n        new_pos = { x: - (this.canvas.x * new_zoom) + margin + ((size.width - margin*2 - this.canvas.width*new_zoom) / 2),\n                    y: - (this.canvas.y * new_zoom) + margin + ((size.height - margin*2 - this.canvas.height*new_zoom) / 2) };\n    } else {\n        return console.error('Did not recognize mode');\n    }\n    debugger;\n    this.zoom_container.go_to(new_zoom, new_pos);\n    return null;\n}\n\nfunction get_size() {\n    return this.zoom_container.get_size();\n}\n\nfunction zoom_to_reaction(reaction_id) {\n    var reaction = this.reactions[reaction_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - reaction.label_x * new_zoom + size.width/2,\n                    y: - reaction.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_node(node_id) {\n    var node = this.nodes[node_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - node.label_x * new_zoom + size.width/2,\n                    y: - node.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_text_label(text_label_id) {\n    var text_label = this.text_labels[text_label_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - text_label.x * new_zoom + size.width/2,\n                    y: - text_label.y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction highlight_reaction(reaction_id) {\n    this.highlight(this.sel.selectAll('#r'+reaction_id).selectAll('text'));\n}\n\nfunction highlight_node(node_id) {\n    this.highlight(this.sel.selectAll('#n'+node_id).selectAll('text'));\n}\n\nfunction highlight_text_label(text_label_id) {\n    this.highlight(this.sel.selectAll('#l'+text_label_id).selectAll('text'));\n}\n\nfunction highlight(sel) {\n    this.sel.selectAll('.highlight')\n        .classed('highlight', false);\n    if (sel !== null) {\n        sel.classed('highlight', true);\n    }\n}\n\n// -------------------------------------------------------------------------\n// IO\n\nfunction save() {\n    utils.download_json(this.map_for_export(), this.map_name);\n}\nfunction map_for_export() {\n    var out = [{ \"map_name\": this.map_name,\n                 \"map_id\": this.map_id,\n                 \"map_description\": this.map_description,\n                 \"homepage\": \"https://escher.github.io\",\n                 \"schema\": \"https://escher.github.io/escher/jsonschema/1-0-0#\"\n               },\n               { reactions: utils.clone(this.reactions),\n                 nodes: utils.clone(this.nodes),\n                 text_labels: utils.clone(this.text_labels),\n                 canvas: this.canvas.size_and_location() }\n              ];\n\n    // remove extra data\n    for (var r_id in out[1].reactions) {\n        var reaction = out[1].reactions[r_id],\n            new_reaction = {};\n        ['name', 'bigg_id','reversibility', 'label_x', 'label_y',\n         'gene_reaction_rule', 'genes', 'metabolites'\n        ].forEach(function(attr) {\n            new_reaction[attr] = reaction[attr];\n        });\n        new_reaction['segments'] = {};\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id],\n                new_segment = {};\n            ['from_node_id', 'to_node_id', 'b1', 'b2'\n            ].forEach(function(attr) {\n                new_segment[attr] = segment[attr];\n            });\n            new_reaction['segments'][s_id] = new_segment;\n        }\n        out[1].reactions[r_id] = new_reaction;\n    }\n    for (var n_id in out[1].nodes) {\n        var node = out[1].nodes[n_id],\n            new_node = {},\n            attrs;\n        if (node.node_type == 'metabolite') {\n            attrs = ['node_type', 'x', 'y', 'bigg_id', 'name', 'label_x', 'label_y',\n                     'node_is_primary'];\n        } else {\n            attrs = ['node_type', 'x', 'y'];\n        }\n        attrs.forEach(function(attr) {\n            new_node[attr] = node[attr];\n        });\n        out[1].nodes[n_id] = new_node;\n    }\n    for (var t_id in out[1].text_labels) {\n        var text_label = out[1].text_labels[t_id],\n            new_text_label = {},\n            attrs = [\"x\", \"y\", \"text\"];\n        attrs.forEach(function(attr) {\n            new_text_label[attr] = text_label[attr];\n        });\n        out[1].text_labels[t_id] = new_text_label;\n    }\n    // canvas\n    var canvas_el = out[1].canvas,\n        new_canvas_el = {},\n        attrs = [\"x\", \"y\", \"width\", \"height\"];\n    attrs.forEach(function(attr) {\n        new_canvas_el[attr] = canvas_el[attr];\n    });\n    out[1].canvas = new_canvas_el;\n\n    return out;\n}\nfunction save_svg() {\n    // run the before callback\n    this.callback_manager.run('before_svg_export');\n\n    // turn of zoom and translate so that illustrator likes the map\n    var window_scale = this.zoom_container.window_scale,\n        window_translate = this.zoom_container.window_translate,\n        canvas_size_and_loc = this.canvas.size_and_location(),\n        mouse_node_size_and_trans = { w: this.canvas.mouse_node.attr('width'),\n                                      h: this.canvas.mouse_node.attr('height'),\n                                      transform:  this.canvas.mouse_node.attr('transform')};\n    this.zoom_container.go_to(1.0, {x: -canvas_size_and_loc.x, y: -canvas_size_and_loc.y}, false);\n    this.svg.attr('width', canvas_size_and_loc.width);\n    this.svg.attr('height', canvas_size_and_loc.height);\n    this.canvas.mouse_node.attr('width', '0px');\n    this.canvas.mouse_node.attr('height', '0px');\n    this.canvas.mouse_node.attr('transform', null);\n    // hide the segment control points\n    var hidden_sel = this.sel.selectAll('.multimarker-circle,.midmarker-circle,#canvas')\n            .style('visibility', 'hidden');\n\n    // do the epxort\n    utils.download_svg('saved_map', this.svg, true);\n\n    // revert everything\n    this.zoom_container.go_to(window_scale, window_translate, false);\n    this.svg.attr('width', null);\n    this.svg.attr('height', null);\n    this.canvas.mouse_node.attr('width', mouse_node_size_and_trans.w);\n    this.canvas.mouse_node.attr('height', mouse_node_size_and_trans.h);\n    this.canvas.mouse_node.attr('transform', mouse_node_size_and_trans.transform);\n    // unhide the segment control points\n    hidden_sel.style('visibility', null);\n\n    // run the after callback\n    this.callback_manager.run('after_svg_export');\n}\n\nfunction convert_map() {\n    /** Assign the descriptive names and gene_reaction_rules from the model\n     to the map.\n\n     If no map is loaded, then throw an Error.\n\n     If some reactions are not in the model, then warn in the status.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_convert_map');\n\n    // check the model\n    if (!this.has_cobra_model()) throw Error('No COBRA model loaded.');\n    var model = this.cobra_model;\n\n    // ids for reactions and metabolites not found in the model\n    var reactions_not_found = {},\n        reaction_attrs = ['name', 'gene_reaction_rule', 'genes'],\n        met_nodes_not_found = {},\n        metabolite_attrs = ['name'],\n        found;\n    // convert reactions\n    for (var reaction_id in this.reactions) {\n        var reaction = this.reactions[reaction_id];\n        found = false;\n        // find in cobra model\n        for (var model_reaction_id in model.reactions) {\n            var model_reaction = model.reactions[model_reaction_id];\n            if (model_reaction.bigg_id == reaction.bigg_id) {\n                reaction_attrs.forEach(function(attr) {\n                    reaction[attr] = model_reaction[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            reactions_not_found[reaction_id] = true;\n    }\n    // convert metabolites\n    for (var node_id in this.nodes) {\n        var node = this.nodes[node_id];\n        // only look at metabolites\n        if (node.node_type != 'metabolite') continue;\n        found = false;\n        // find in cobra model\n        for (var model_metabolite_id in model.metabolites) {\n            var model_metabolite = model.metabolites[model_metabolite_id];\n            if (model_metabolite.bigg_id == node.bigg_id) {\n                metabolite_attrs.forEach(function(attr) {\n                    node[attr] = model_metabolite[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            met_nodes_not_found[node_id] = true;\n    }\n\n    // status\n    var n_reactions_not_found = Object.keys(reactions_not_found).length,\n        n_met_nodes_not_found = Object.keys(met_nodes_not_found).length,\n        status_delay = 3000;\n    if (n_reactions_not_found == 0 &&\n        n_met_nodes_not_found == 0) {\n        this.set_status('Successfully converted attributes.', status_delay);\n    } else if (n_met_nodes_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else if (n_reactions_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_met_nodes_not_found +\n                        ' metabolites in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions and ' + n_met_nodes_not_found + ' metabolites in the model.',\n                        status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    }\n\n    // redraw\n    this.draw_everything();\n\n    // run the after callback\n    this.callback_manager.run('after_convert_map');\n}\n","/** PlacedDiv. A container to position an html div to match the coordinates of a\n SVG element. */\n\nvar utils = require('./utils');\n\n\nvar PlacedDiv = utils.make_class();\n// instance methods\nPlacedDiv.prototype = {\n    init: init,\n    is_visible: is_visible,\n    place: place,\n    hide: hide\n};\nmodule.exports = PlacedDiv;\n\n\n// definitions\nfunction init(div, map, displacement) {\n    // make the input box\n    this.div = div;\n\n    if (displacement===undefined)\n        displacement = {x: 0, y: 0};\n    this.displacement = displacement;\n\n    this.map = map;\n}\n\nfunction is_visible() {\n    return this.div.style('display') != 'none';\n}\n\nfunction place(coords) {\n    /** Position the html div to match the given SVG coordinates.\n\n     */\n    // show the input\n    this.div.style('display', null);\n\n    // move the new input\n    var window_translate = this.map.zoom_container.window_translate,\n        window_scale = this.map.zoom_container.window_scale,\n        map_size = this.map.get_size(),\n        left = Math.max(20,\n                        Math.min(map_size.width - 270,\n                                 (window_scale * coords.x + window_translate.x - this.displacement.x))),\n        top = Math.max(20,\n                       Math.min(map_size.height - 40,\n                                (window_scale * coords.y + window_translate.y - this.displacement.y)));\n    this.div.style('position', 'absolute')\n        .style('display', 'block')\n        .style('left', left+'px')\n        .style('top', top+'px');\n}\n\nfunction hide() {\n    this.div.style('display', 'none');\n}\n","/** A QuickJump menu to move between maps.\n\n Arguments\n ---------\n\n sel: The d3 selection of an html node to place the menu inside.\n\n options: An array of map names to jump to.\n\n load_callback: A callback function that accepts two arguments: map_name,\n and another callback which returns true or false for success or failure\n (callback purgatory).\n\n */\n\nvar utils = require('./utils');\n\n\nvar QuickJump = utils.make_class();\n// instance methods\nQuickJump.prototype = {\n    init: init,\n    reset_selection: reset_selection,\n    replace_state_for_map_name: replace_state_for_map_name\n};\nmodule.exports = QuickJump;\n\n\n// instance methods\nfunction init(sel, load_callback) {\n    // set up the menu\n    var select_sel = sel.append('select')\n            .attr('id', 'quick-jump-menu')\n            .attr('class', 'form-control');\n    this.selector = select_sel;\n\n    // get the options to show\n    var url_comp = utils.parse_url_components(window),\n        current = ('map_name' in url_comp) ? url_comp.map_name : null,\n        quick_jump_path = ('quick_jump_path' in url_comp) ? url_comp.quick_jump_path : null,\n        options = ('quick_jump' in url_comp) ? url_comp.quick_jump : [],\n        default_value = '— Jump to map —',\n        view_options = [default_value].concat(options);\n    if (current !== null) {\n        view_options = view_options.filter(function(o) {\n            return o != current;\n        });\n    }\n\n    select_sel.selectAll('option')\n        .data(view_options)\n        .enter()\n        .append('option')\n        .text(function(d) {\n            // works whether or not a '.' is present\n            return d.split('.').slice(-1)[0];\n        });\n\n    // only show if there are options\n    select_sel.style('display', view_options.length > 1 ? 'block' : 'none');\n\n    // on selection\n    var change_map = function(map_name) {\n        load_callback(map_name, quick_jump_path, function(success) {\n            if (success)\n                this.replace_state_for_map_name(map_name);\n            else\n                this.reset_selection();\n        }.bind(this));\n    }.bind(this);\n\n    select_sel.on('change', function() {\n        // get the new map\n        var map_name = this.options[this.selectedIndex].__data__;\n        change_map(map_name);\n    });\n}\n\nfunction reset_selection() {\n    this.selector.node().selectedIndex = 0;\n}\n\nfunction replace_state_for_map_name(map_name) {\n    /** Just changes the url to match the new map name. Does not actually\n     manage the HTML5 history.\n\n     */\n\n    // update the url with the new map\n    var url = window.location.href\n            .replace(/(map_name=)([^&]+)(&|$)/, '$1' + map_name + '$3');\n    window.history.replaceState('Not implemented', '', url);\n}\n","/** Scale */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Scale = utils.make_class();\nScale.prototype = {\n    init: init,\n    connect_to_settings: connect_to_settings\n};\nmodule.exports = Scale;\n\n\nfunction init() {\n    this.x = d3.scale.linear();\n    this.y = d3.scale.linear();\n    this.x_size = d3.scale.linear();\n    this.y_size = d3.scale.linear();\n    this.size = d3.scale.linear();\n    this.reaction_color = d3.scale.linear().clamp(true);\n    this.reaction_size = d3.scale.linear().clamp(true);\n    this.metabolite_color = d3.scale.linear().clamp(true);\n    this.metabolite_size = d3.scale.linear().clamp(true);\n    this.scale_path = function(path) {\n        var x_fn = this.x, y_fn = this.y;\n        // TODO: scale arrow width\n        var str = d3.format(\".2f\"),\n            path = path.replace(/(M|L)([0-9-.]+),?\\s*([0-9-.]+)/g, function (match, p0, p1, p2) {\n                return p0 + [str(x_fn(parseFloat(p1))), str(y_fn(parseFloat(p2)))].join(', ');\n            }),\n            reg = /C([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)/g;\n        path = path.replace(reg, function (match, p1, p2, p3, p4, p5, p6) {\n            return 'C'+str(x_fn(parseFloat(p1)))+','+\n                str(y_fn(parseFloat(p2)))+' '+\n                str(x_fn(parseFloat(p3)))+','+\n                str(y_fn(parseFloat(p4)))+' '+\n                [str(x_fn(parseFloat(p5)))+','+str(y_fn(parseFloat(p6)))];\n        });\n        return path;\n    }.bind(this);\n    this.scale_decimals = function(path, scale_fn, precision) {\n        var str = d3.format(\".\"+String(precision)+\"f\");\n        path = path.replace(/([0-9.]+)/g, function (match, p1) {\n            return str(scale_fn(parseFloat(p1)));\n        });\n        return path;\n    };\n}\n\nfunction connect_to_settings(settings, map, get_data_statistics) {\n    // domains\n    var update_reaction = function(s) {\n        var out = sort_scale(s, get_data_statistics()['reaction']);\n        this.reaction_color.domain(out.domain);\n        this.reaction_size.domain(out.domain);\n        this.reaction_color.range(out.color_range);\n        this.reaction_size.range(out.size_range);\n    }.bind(this);\n    var update_metabolite = function(s) {\n        var out = sort_scale(s, get_data_statistics()['metabolite']);\n        this.metabolite_color.domain(out.domain);\n        this.metabolite_size.domain(out.domain);\n        this.metabolite_color.range(out.color_range);\n        this.metabolite_size.range(out.size_range);\n    }.bind(this);\n\n    // scale changes\n    settings.streams['reaction_scale'].onValue(update_reaction);\n    settings.streams['metabolite_scale'].onValue(update_metabolite);\n    // stats changes\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) update_reaction(settings.get_option('reaction_scale'));\n    });\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) update_metabolite(settings.get_option('metabolite_scale'));\n    });\n\n    // definitions\n    function sort_scale(scale, stats) {\n        var sorted = scale.map(function(x) {\n            var v;\n            if (x.type in stats)\n                v = stats[x.type];\n            else if (x.type == 'value')\n                v = x.value;\n            else\n                throw new Error('Bad domain type ' + x.type);\n            return { v: v,\n                     color: x.color,\n                     size: x.size };\n        }).sort(function(a, b) {\n            return a.v - b.v;\n        });\n        return { domain: sorted.map(function(x) { return x.v; }),\n                 color_range: sorted.map(function(x) { return x.color; }),\n                 size_range: sorted.map(function(x) { return x.size; }) };\n    }\n}\n","/** ScaleEditor. An interactive UI to edit color and size scales.\n\n Attributes\n ----------\n\n sel: A d3 selection.\n\n type: A type, that should be unique on the page.\n\n settings: The Settings object.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar bacon = require('baconjs');\n\n\nvar ScaleEditor = utils.make_class();\n// instance methods\nScaleEditor.prototype = {\n    init: init,\n    update: update,\n    update_no_data: update_no_data,\n    _data_not_loaded: _data_not_loaded\n};\nmodule.exports = ScaleEditor;\n\n\n// instance methods\nfunction init(sel, type, settings, get_data_statistics) {\n    // sels\n    var grad_id = 'grad' + type + this.unique_string;\n    this.w = 400;\n    this.h = 30;\n    this.x = 20;\n    this.input_width = 90;\n    this.input_height = 24;\n    var b = sel.append('div')\n            .attr('class', 'scale-editor');\n    // no data loaded\n    this.data_not_loaded = b.append('div')\n        .attr('class', 'data-not-loaded')\n        .text((type == 'reaction' ? 'Reaction and gene' : 'Metabolite') + ' data not loaded');\n    // label\n    this.input_label_group = b.append('div')\n        .attr('class', 'input-label-group');\n    // no data\n    var nd = b.append('div')\n            .style('top', this.input_height * 3 + 56 + 10 + 'px')\n            .attr('class', 'no-data');\n    nd.append('span').text('Styles for ' + type + 's with no data')\n        .attr('class', 'no-data-heading');\n    this.no_data_container = nd.append('div');\n    var c = b.append('div')\n            .attr('class', 'centered');\n    this.add_group = c.append('div');\n    this.trash_group = c.append('div')\n        .attr('class', 'trash-container');\n    var svg = c.append('svg')\n            .attr('class', 'scale-svg');\n    this.input_group = c.append('div')\n        .attr('class', 'input-container');\n    this.gradient = svg.append('defs')\n        .append('linearGradient')\n        .attr('id', grad_id);\n    svg.append('rect')\n        .attr('class', 'rect')\n        .attr('fill', 'url(#' + grad_id + ')')\n        .attr('width', this.w + 'px')\n        .attr('height', this.h + 'px')\n        .attr('x', this.x + 'px'),\n    this.pickers_group = svg.append('g');\n\n    // settings\n    this.type = type;\n    this.settings = settings;\n    this.get_data_statistics = get_data_statistics;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    // collect data\n    this.no_data = {};\n    ['color', 'size'].forEach(function(s) {\n        this.no_data[s] = null;\n        this.settings.streams[this.type + '_no_data_' + s].onValue(function(val) {\n            this.no_data[s] = val;\n            this.update_no_data();\n        }.bind(this));\n    }.bind(this));\n\n    this.settings.streams[type + '_scale'].onValue(function(scale) {\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n}\n\nfunction update() {\n    var scale = this.scale,\n        stats = this.get_data_statistics()[this.type],\n        bar_w = 14,\n        bar_h = 35,\n        x_disp = this.x,\n        data_not_loaded = this._data_not_loaded();\n\n    // Must have max and min. Otherwise, assume that no data is loaded.\n    if (data_not_loaded) {\n        scale = [{ type: 'min', 'color': null, 'size': null },\n                 { type: 'max', 'color': null, 'size': null }];\n        stats = { 'min': 0, 'max': 1 };\n    }\n\n    var sc = d3.scale.linear()\n            .domain([0, this.w])\n            .range([stats.min, stats.max]),\n        sc_size = d3.scale.linear()\n            .domain([0, this.w])\n            .range([0, stats.max - stats.min]);\n\n    // ---------------------------------------------------------------------\n    // convenience functions\n    var bring_to_front = function(d, i) {\n        // bring an input set to the front\n        this.input_group.selectAll('.input-set').each(function(d2) {\n            d3.select(this).classed('selected-set', d === d2);\n        });\n    }.bind(this);\n\n    var get_this_val = function(d) {\n        return (d.type == 'value') ? d.value : stats[d.type];\n    };\n\n    var set_scale = function(scale) {\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this);\n\n    // ---------------------------------------------------------------------\n    // make the gradient\n    var sorted_domain = scale.map(function(d) {\n        return { frac: (get_this_val(d) - stats.min) / (stats.max - stats.min),\n                 color: d.color };\n    }).filter(function(d) {\n        return (d.frac >= 0 && d.frac <= 1.0);\n    }).sort(function(a, b) {\n        return a.frac - b.frac;\n    });\n    var stops = this.gradient.selectAll('stop')\n            .data(sorted_domain);\n    stops.enter()\n        .append('stop');\n    stops.attr('offset', function(d) {\n        return d.frac * 100 + '%';\n    }).style('stop-color', function (d) {\n        return d.color === null ? '#F1ECFA' : d.color;\n    });\n    stops.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // no data sign\n\n    this.data_not_loaded.style('visibility', (data_not_loaded ? null : 'hidden'));\n\n    // ---------------------------------------------------------------------\n    // make the pickers\n    var pickers = this.pickers_group\n            .selectAll('.picker')\n            .data(scale);\n    // drag\n    var drag = d3.behavior.drag();\n    drag.on('drag', function(d, i) {\n        // on drag, make it a value type\n        if (['value', 'min', 'max'].indexOf(scale[i].type) === -1) {\n            // get the current value and set it\n            scale[i].value = get_this_val(d);\n            scale[i].type = 'value';\n        }\n        // change the model on drag\n        var new_d = scale[i].value + sc_size(d3.event.dx),\n            buf = sc_size(bar_w + 2);\n        if (new_d > stats.max - buf) new_d = stats.max - buf;\n        if (new_d < stats.min + buf) new_d = stats.min + buf;\n        // round to 2 decimals\n        new_d = Math.floor(new_d * 100.0) / 100.0;\n        scale[i].value = new_d;\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // enter\n    pickers.enter()\n        .append('g')\n        .attr('class', 'picker')\n        .style('cursor', 'pointer')\n        .append('rect');\n    // update\n    pickers.select('rect')\n        .attr('x', function(d, i) {\n            var val = get_this_val(d),\n                buf = bar_w + 2;\n            if (d.type == 'value' && val <= stats.min)\n                return sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            if (d.type == 'value' && val >= stats.max)\n                return sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            return sc.invert(val) - (bar_w / 2) + x_disp;\n        })\n        .attr('width', bar_w + 'px')\n        .attr('height', bar_h + 'px')\n        .call(drag)\n        .on('mousedown', bring_to_front);\n    // exit\n    pickers.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the delete buttons\n    var trashes = this.trash_group.selectAll('span')\n            .data(scale);\n    // enter\n    trashes.enter()\n        .append('span');\n    // update\n    trashes.attr('class', function(d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return null;\n        return 'trash glyphicon glyphicon-trash';\n    }).style('left', function(d) {\n        return sc.invert(get_this_val(d)) - (bar_w / 2) + x_disp + 'px';\n    }).on('click', function (d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return;\n        scale = scale.slice(0, i).concat(scale.slice(i + 1));\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // exit\n    trashes.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the add button\n    var add = this.add_group.selectAll('.add')\n            .data(['add']);\n    // enter\n    add.enter()\n        .append('span')\n        .attr('class', 'add glyphicon glyphicon-plus');\n    // update\n    add.on('click', function (d) {\n        if (data_not_loaded) return;\n\n        var new_d = (stats.max + stats.min) / 2,\n            buf = sc_size(bar_w + 2),\n            last_ind = 0;\n        // try to make the new point not overlap\n        for (var j = 0, l = scale.length; j < l; j++) {\n            var th = get_this_val(scale[j]);\n            if (Math.abs(th - new_d) < buf) {\n                new_d = new_d + buf;\n                if (new_d > stats.max - buf) new_d = stats.max - buf;\n                if (new_d < stats.min + buf) new_d = stats.min + buf;\n            }\n            if (new_d > th)\n                last_ind = j;\n        }\n        // add\n        scale.push({ type: 'value',\n                     value: new_d,\n                     color: scale[last_ind].color,\n                     size: scale[last_ind].size });\n        set_scale(scale);\n    }.bind(this));\n    // exit\n    add.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // input labels\n    var labels = this.input_label_group.selectAll('.row-label')\n            .data(['Value:', 'Color:', 'Size:']);\n    // enter\n    labels.enter().append('div')\n        .attr('class', 'row-label')\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px');\n    // update\n    labels\n        .style('top', function(d, i) {\n            return 56 + (i * this.input_height) + 'px';\n        }.bind(this))\n        .text(function(d) { return d; });\n    // exit\n    labels.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // inputs\n    var inputs = this.input_group.selectAll('.input-set')\n            .data(scale);\n\n    // enter\n    var i = inputs.enter()\n            .append('div')\n            .attr('class', 'input-set');\n    i.append('input')\n        .attr('class', 'domain-input')\n        .style('width', this.input_width + 'px');\n    // type picker\n    i.append('select')\n        .attr('class', 'domain-type-picker'),\n    // color input\n    i.append('input')\n        .attr('class', 'color-input')\n        .style('width', this.input_width + 'px');\n    i.append('input')\n        .attr('type', 'color')\n        .style('visibility', function() {\n            // hide the input if the HTML5 color picker is not supported\n            return (this.type == 'text') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    i.append('input')\n        .attr('class', 'size-input')\n        .style('width', this.input_width + 'px');\n\n    // update\n    inputs.style('height', this.input_height * 3 + 'px')\n        .style('width', this.input_width + 'px')\n        .style('left', function(d) {\n            var val = get_this_val(d),\n                buf = bar_w + 2,\n                l;\n            if (d.type == 'value' && val <= stats.min)\n                l = sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            else if (d.type == 'value' && val >= stats.max)\n                l = sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            else\n                l = sc.invert(val) - (bar_w / 2) + x_disp;\n            // don't go over the right edge of the bar\n            if (l + this.input_width > this.w + this.x)\n                l = l - this.input_width + (bar_w / 2);\n            return l + 'px';\n        }.bind(this))\n        .on('mousedown', bring_to_front);\n\n    var format = d3.format('.4g');\n    inputs.select('.domain-input')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            if (d.type == 'value') {\n                this.value = get_this_val(d);\n                this.disabled = false;\n            } else {\n                this.value = d.type + ' (' + format(get_this_val(d)) + ')';\n                this.disabled = true;\n            }\n        }).on('change', function(d, i) {\n            var buf = sc_size(bar_w + 2),\n                new_d = parseFloat(this.value);\n            scale[i].value = new_d;\n            set_scale(scale);\n        });\n    // update type picker\n    var select = inputs.select('.domain-type-picker'),\n        // get the function types, except min and max\n        stat_types = (['value'].concat(Object.keys(stats))\n                      .filter(function(x) {\n                          return x != 'min' && x != 'max';\n                      })),\n        opts = select.selectAll('option').data(stat_types);\n    opts.enter().append('option');\n    opts.attr('value', function(d) { return d; })\n        .text(function(d) { return d; });\n    opts.exit().remove();\n    select.style('visibility', function(d) {\n        return (d.type == 'min' || d.type == 'max') ? 'hidden' : null;\n    })\n        .style('left', (this.input_width - 20) + 'px')\n        .style('width', '20px')\n        .each(function (d, i) {\n            var sind = 0;\n            d3.select(this).selectAll('option').each(function(_, i) {\n                if (this.value == d.type)\n                    sind = i;\n            });\n            this.selectedIndex = sind;\n        }).on('change', function(d, i) {\n            // set the value to the current location\n            if (this.value == 'value')\n                scale[i].value = stats[d.type];\n            // switch to the new type\n            scale[i].type = this.value;\n            // reload\n            set_scale(scale);\n        });\n    // update color input\n    inputs.select('.color-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.color-picker')\n        .style('left', (this.input_width - this.input_height) + 'px')\n        .style('top', this.input_height + 'px')\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '#dddddd' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.size-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height * 2 + 'px')\n        .each(function (d, i) {\n            this.value = (d.size === null ? '' : d.size);\n            this.disabled = (d.size === null);\n        }).on('change', function(d, i) {\n            scale[i].size = parseFloat(this.value);\n            set_scale(scale);\n        });\n\n    // exit\n    inputs.exit().remove();\n}\n\nfunction update_no_data() {\n    var no_data = this.no_data,\n        data_not_loaded = this._data_not_loaded(),\n        label_w = 40;\n\n    var ins = this.no_data_container\n            .selectAll('.input-group')\n            .data([['color', 'Color:'], ['size', 'Size:']]);\n    // enter\n    var t = ins.enter().append('div')\n            .attr('class', 'input-group');\n    t.append('span');\n    t.append('input');\n    t.append('input')\n        .attr('type', 'color')\n        .style('visibility', function(d) {\n            // hide the input if the HTML5 color picker is not supported,\n            // or if this is a size box\n            return (this.type == 'text' || d[0] != 'color') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    // update\n    ins.select('span')\n        .text(function(d) { return d[1]; })\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this));\n    var get_o = function(kind) {\n        return this.settings.get_option(this.type + '_no_data_' + kind);\n    }.bind(this);\n    ins.select('input')\n        .style('left', function(d, i) {\n            return (label_w + (label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this))\n        .style('height', this.input_height + 'px')\n        .style('width', this.input_width + 'px')\n        .each(function(d) {\n            // initial value\n            this.value = data_not_loaded ? '' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d) {\n            var val = d3.event.target.value;\n            if (d[0] == 'size')\n                val = parseFloat(val);\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    ins.select('.color-picker')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width) * (i + 1) - this.input_height) + 'px';\n        }.bind(this))\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = data_not_loaded ? '#dddddd' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d, i) {\n            var val = d3.event.target.value;\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    // exit\n    ins.exit().remove();\n}\n\nfunction _data_not_loaded() {\n    var stats = this.get_data_statistics()[this.type];\n    return (stats.max === null || stats.min === null);\n}\n","/** SearchBar */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar SearchBar = utils.make_class();\n// instance methods\nSearchBar.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    update: update,\n    next: next,\n    previous: previous\n};\nmodule.exports = SearchBar;\n\n\n// instance methods\nfunction init(sel, search_index, map) {\n    var container = sel.attr('class', 'search-container')\n            .style('display', 'none');\n    this.input = container.append('input')\n        .attr('class', 'search-bar');\n    var group = container.append('div').attr('class', 'btn-group btn-group-sm');\n    group.append('button')\n        .attr(\"class\", \"btn btn-default\")\n        .on('click', this.previous.bind(this))\n        .append('span').attr('class', \"glyphicon glyphicon-chevron-left\");\n    group.append('button')\n        .attr(\"class\", \"btn btn-default\")\n        .on('click', this.next.bind(this))\n        .append('span').attr('class', \"glyphicon glyphicon-chevron-right\");\n    this.counter = container.append('div')\n        .attr('class', 'search-counter');\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default close-button\")\n        .on('click', function() {\n            this.toggle(false);\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    this.callback_manager = new CallbackManager();\n\n    this.selection = container;\n    this.map = map;\n    this.search_index = search_index;\n\n    this.current = 1;\n    this.results = null;\n\n    var on_input_fn = function(input) {\n        this.current = 1;\n        this.results = this.search_index.find(input.value);\n        this.update();\n    }.bind(this, this.input.node());\n    this.input.on('input', utils.debounce(on_input_fn, 200));\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n\n    if (this.is_active) {\n        this.selection.style('display', null);\n        this.counter.text(\"\");\n        this.input.node().value = \"\";\n        this.input.node().focus();\n        // escape key\n        this.escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.toggle(false);\n            }.bind(this), 'settings');\n        // enter key\n        this.enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.next();\n            }.bind(this), 'settings');\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        this.map.highlight(null);\n        this.selection.style(\"display\", \"none\");\n        this.results = null;\n        if (this.escape) this.escape.clear();\n        this.escape = null;\n        if (this.enter) this.enter.clear();\n        this.enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction update() {\n    if (this.results == null) {\n        this.counter.text(\"\");\n        this.map.highlight(null);\n    } else if (this.results.length == 0) {\n        this.counter.text(\"0 / 0\");\n        this.map.highlight(null);\n    } else {\n        this.counter.text(this.current + \" / \" + this.results.length);\n        var r = this.results[this.current - 1];\n        if (r.type=='reaction') {\n            this.map.zoom_to_reaction(r.reaction_id);\n            this.map.highlight_reaction(r.reaction_id);\n        } else if (r.type=='metabolite') {\n            this.map.zoom_to_node(r.node_id);\n            this.map.highlight_node(r.node_id);\n        } else if (r.type=='text_label') {\n            this.map.zoom_to_text_label(r.text_label_id);\n            this.map.highlight_text_label(r.text_label_id);\n        } else {\n            throw new Error('Bad search index data type: ' + r.type);\n        }\n    }\n}\nfunction next() {\n    if (this.results == null) return;\n    if (this.current==this.results.length)\n        this.current = 1;\n    else\n        this.current += 1;\n    this.update();\n}\nfunction previous() {\n    if (this.results == null) return;\n    if (this.current==1)\n        this.current = this.results.length;\n    else\n        this.current -= 1;\n    this.update();\n}\n","/** SearchIndex. Define an index for searching for reaction and metabolites in\n the map.\n\n The index is stored in SearchIndex.index, an object of id/record pairs.\n\n */\n\nvar utils = require('./utils');\n\n\nvar SearchIndex = utils.make_class();\nSearchIndex.prototype = {\n    init: init,\n    insert: insert,\n    remove: remove,\n    find: find\n};\nmodule.exports = SearchIndex;\n\n\n// definitions\nfunction init() {\n    this.index = {};\n}\n\n\nfunction insert(id, record, overwrite, check_record) {\n    /** Insert a record into the index.\n\n     id: A unique string id.\n\n     record: Records have the form:\n\n     { 'name': '',\n     'data': {} }\n\n     Search is performed on substrings of the name.\n\n     overwrite: (Default false) For faster performance, make overwrite true,\n     and records will be inserted without checking for an existing record.\n\n     check_record: (Default false) For faster performance, make check_record\n     false. If true, records will be checked to make sure they have name and\n     data attributes.\n\n     Returns undefined.\n\n     */\n    if (!overwrite && (id in this.index))\n        throw new Error(\"id is already in the index\");\n    if (check_record && !(('name' in record) && ('data' in record)))\n        throw new Error(\"malformed record\");\n    this.index[id] = record;\n}\n\n\nfunction remove(record_id) {\n    /** Remove the matching record.\n\n     Returns true is a record is found, or false if no match is found.\n\n     */\n    if (record_id in this.index) {\n        delete this.index[record_id];\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction find(substring) {\n    /** Find a record that matches the substring.\n\n     Returns an array of data from matching records.\n\n     */\n\n    var re = RegExp(substring, \"i\"), // ignore case\n        matches = [];\n    for (var id in this.index) {\n        var record = this.index[id];\n        if (re.exec(record.name))\n            matches.push(record.data);\n    }\n    return matches;\n\n}\n","/** Settings. A class to manage settings for a Map.\n\n Arguments\n ---------\n\n set_option: A function, fn(key), that returns the option value for the\n key.\n\n get_option: A function, fn(key, value), that sets the option for the key\n and value.\n\n conditional_options: The options to that are conditionally accepted when\n changed. Changes can be abandoned by calling abandon_changes(), or accepted\n by calling accept_changes().\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\nvar bacon = require('baconjs');\n\n\nvar Settings = utils.make_class();\n// instance methods\nSettings.prototype = {\n    init: init,\n    set_conditional: set_conditional,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes\n};\nmodule.exports = Settings;\n\n\n// instance methods\nfunction init(set_option, get_option, conditional_options) {\n    this.set_option = set_option;\n    this.get_option = get_option;\n\n    // manage accepting/abandoning changes\n    this.status_bus = new bacon.Bus();\n\n    // force an update of ui components\n    this.force_update_bus = new bacon.Bus();\n\n    // modify bacon.observable\n    bacon.Observable.prototype.convert_to_conditional_stream = _convert_to_conditional_stream;\n    bacon.Observable.prototype.force_update_with_bus = _force_update_with_bus;\n\n    // create the options\n    this.busses = {};\n    this.streams = {};\n    for (var i = 0, l = conditional_options.length; i < l; i++) {\n        var name = conditional_options[i],\n            out = _create_conditional_setting(name, get_option(name), set_option,\n                                              this.status_bus, this.force_update_bus);\n        this.busses[name] = out.bus;\n        this.streams[name] = out.stream;\n    }\n}\n\nfunction _convert_to_conditional_stream(status_stream) {\n    /** Hold on to event when hold_property is true, and only keep them\n     if accept_property is true (when hold_property becomes false).\n\n     */\n\n    // true if hold is pressed\n    var is_not_hold_event = status_stream\n            .map(function(x) { return x=='hold'; })\n            .not()\n            .toProperty(true),\n        is_not_first_clear = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && (x=='accepted' || x=='rejected'));\n            }).not(),\n        is_not_first_hold = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && x=='hold');\n            }).not(),\n        combined = bacon.combineAsArray(this, status_stream),\n        held = combined\n            .scan([], function(c, x) {\n                if (x[1]=='hold') {\n                    c.push(x[0]);\n                    return c;\n                } else if (x[1]=='accept') {\n                    return c;\n                } else if (x[1]=='reject') {\n                    return [];\n                } else if (x[1]=='rejected' || x[1]=='accepted') {\n                    return [x[0]];\n                } else {\n                    throw Error('bad status ' + x[1]);\n                }\n            })\n    // don't pass in events until the end of a hold\n            .filter(is_not_hold_event)\n    // ignore the event when clear is passed\n            .filter(is_not_first_clear)\n    // ignore the event when hold is passed\n            .filter(is_not_first_hold)\n            .flatMap(function(ar) {\n                return bacon.fromArray(ar);\n            }),\n        unheld = this.filter(is_not_hold_event);\n    return unheld.merge(held);\n}\n\nfunction _force_update_with_bus(bus) {\n    return bacon\n        .combineAsArray(this, bus.toProperty(false))\n        .map(function(t) {\n            return t[0];\n        });\n}\n\nfunction _create_conditional_setting(name, initial_value, set_option,\n                                     status_bus, force_update_bus) {\n    // set up the bus\n    var bus = new bacon.Bus();\n    // make the event stream\n    var stream = bus\n    // conditionally accept changes\n            .convert_to_conditional_stream(status_bus)\n    // force updates\n            .force_update_with_bus(force_update_bus);\n\n    // get the latest\n    stream.onValue(function(v) {\n        set_option(name, v);\n    });\n\n    // push the initial value\n    bus.push(initial_value);\n\n    return { bus: bus, stream: stream };\n}\n\nfunction set_conditional(name, value) {\n    /** Set the value of a conditional setting, one that will only be\n     accepted if this.accept_changes() is called.\n\n     Arguments\n     ---------\n\n     name: The option name\n\n     value: The new value\n\n     */\n\n    if (!(name in this.busses))\n        throw new Error('Invalid setting name');\n    this.busses[name].push(value);\n}\n\nfunction hold_changes() {\n    this.status_bus.push('hold');\n}\n\nfunction abandon_changes() {\n    this.status_bus.push('reject');\n    this.status_bus.push('rejected');\n    this.force_update_bus.push(true);\n}\n\nfunction accept_changes() {\n    this.status_bus.push('accept');\n    this.status_bus.push('accepted');\n}\n","/** SettingsMenu */\n\n'strict mode';\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar ScaleEditor = require('./ScaleEditor');\n\n\nvar SettingsMenu = utils.make_class();\n// instance methods\nSettingsMenu.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes,\n    style_gui: style_gui,\n    view_gui: view_gui\n};\nmodule.exports = SettingsMenu;\n\n\n// instance methods\nfunction init(sel, settings, map, toggle_abs_and_apply_data) {\n    this.sel = sel;\n    this.settings = settings;\n    this.draw = false;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    var background = sel.append('div')\n            .attr('class', 'settings-box-background')\n            .style('display', 'none'),\n        container = background.append('div')\n            .attr('class', 'settings-box-container')\n            .style('display', 'none');\n\n    // done button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button\")\n        .on('click', function() {\n            this.accept_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-ok\");\n    // quit button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button settings-button-close\")\n        .on('click', function() {\n            this.abandon_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    var box = container.append('div')\n            .attr('class', 'settings-box');\n\n    // Tip\n    box.append('div')\n        .text('Tip: Hover over an option to see more details about it.')\n        .classed('settings-tip', true);\n    box.append('hr');\n\n    // view and build\n    box.append('div').text('View and build options')\n        .attr('class', 'settings-section-heading-large');\n    this.view_gui(box.append('div'));\n\n    // reactions\n    box.append('hr');\n    box.append('div')\n        .text('Reactions').attr('class', 'settings-section-heading-large');\n    var rse = new ScaleEditor(box.append('div'), 'reaction', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) {\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n    box.append('div')\n        .text('Reaction or Gene data').attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'reaction', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('reaction', on_off);\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n\n    // metabolite data\n    box.append('hr');\n    box.append('div').text('Metabolites')\n        .attr('class', 'settings-section-heading-large');\n    var mse = new ScaleEditor(box.append('div'), 'metabolite', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) {\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n    box.append('div').text('Metabolite data')\n        .attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'metabolite', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('metabolite', on_off);\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n\n    this.callback_manager = new CallbackManager();\n\n    this.map = map;\n    this.selection = container;\n    this.background = background;\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) on_off = !this.is_visible();\n\n    if (on_off) {\n        // hold changes until accepting/abandoning\n        this.hold_changes();\n        // show the menu\n        this.selection.style(\"display\", \"inline-block\");\n        this.background.style(\"display\", \"block\");\n        this.selection.select('input').node().focus();\n        // escape key\n        this.escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.abandon_changes();\n            }.bind(this), 'settings');\n        // enter key\n        this.enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.accept_changes();\n            }.bind(this), 'settings');\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        // draw on finish\n        if (this.draw) this.map.draw_everything();\n        // hide the menu\n        this.selection.style(\"display\", \"none\");\n        this.background.style(\"display\", \"none\");\n        if (this.escape) this.escape.clear();\n        if (this.enter) this.enter.clear();\n        this.escape = null;\n        this.enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction hold_changes() {\n    this.settings.hold_changes();\n}\nfunction abandon_changes() {\n    this.draw = false;\n    this.settings.abandon_changes();\n    this.toggle(false);\n}\nfunction accept_changes() {\n    this.sel.selectAll('input').each(function (s) {\n        this.blur();\n    });\n    this.draw = true;\n    this.settings.accept_changes();\n    this.toggle(false);\n}\n\nfunction style_gui(sel, type, abs_callback) {\n    /** A UI to edit style.\n\n     */\n\n    var t = sel.append('table').attr('class', 'settings-table'),\n        settings = this.settings;\n\n    // styles\n    t.append('tr').call(function(r) {\n        r.append('td').text('Options:')\n            .attr('class', 'options-label')\n            .attr('title', ('Options for ' + type + ' data.'));\n        var cell = r.append('td');\n\n        var styles = [['Absolute value', 'abs',\n                       ('If checked, use the absolute value when ' +\n                        'calculating colors and sizes of ' + type + 's on the map')],\n                      ['Size', 'size',\n                       ('If checked, then size the ' +\n                        (type == 'metabolite' ? 'radius of metabolite circles ' : 'thickness of reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Color', 'color',\n                       ('If checked, then color the ' +\n                        (type == 'metabolite' ? 'metabolite circles ' : 'reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Text (Show data in label)', 'text',\n                       ('If checked, then show data values in the ' + type + ' ' +\n                        'labels')]],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var streams = [],\n            get_styles = function() {\n                var styles = [];\n                cell.selectAll('input')\n                    .each(function(d) { if (this.checked) styles.push(d[1]); });\n                return styles;\n            };\n        s.append('input').attr('type', 'checkbox')\n            .on('change', function(d) {\n                settings.set_conditional(type + '_styles', get_styles());\n                if (d[1] == 'abs')\n                    abs_callback(this.checked);\n            }).each(function(d) {\n                // subscribe to changes in the model\n                settings.streams[type + '_styles'].onValue(function(ar) {\n                    // check the box if the style is present\n                    this.checked = (ar.indexOf(d[1]) != -1);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; })\n            .attr('title', function(d) { return d[2]; });\n    });\n\n    // compare_style\n    t.append('tr').call(function(r) {\n        r.append('td')\n            .text('Comparison:')\n            .attr('class', 'options-label')\n            .attr('title', ('The function that will be used to compare ' +\n                            'datasets, when paired data is loaded'));\n        var cell = r.append('td')\n                .attr('title', ('The function that will be used to compare ' +\n                                'datasets, when paired data is loaded'));;\n\n        var styles = [['Fold Change', 'fold'],\n                      ['Log2(Fold Change)', 'log2_fold'],\n                      ['Difference', 'diff']],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the radio\n        s.append('input').attr('type', 'radio')\n            .attr('name', type + '_compare_style' + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(type + '_compare_style', this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[type + '_compare_style'].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    // gene-specific settings\n    if (type=='reaction') {\n        var t = sel.append('table').attr('class', 'settings-table')\n                .attr('title', ('The function that will be used to evaluate ' +\n                                'AND connections in gene reaction rules (AND ' +\n                                'connections generally connect components of ' +\n                                'an enzyme complex)'));\n\n        // and_method_in_gene_reaction_rule\n        t.append('tr').call(function(r) {\n            r.append('td')\n                .text('Method for evaluating AND:')\n                .attr('class', 'options-label-wide');\n            var cell = r.append('td');\n\n            var styles = [['Mean', 'mean'], ['Min', 'min']],\n                style_cells = cell.selectAll('.option-group')\n                    .data(styles),\n                s = style_cells.enter()\n                    .append('label')\n                    .attr('class', 'option-group');\n\n            // make the radio\n            var name = 'and_method_in_gene_reaction_rule';\n            s.append('input').attr('type', 'radio')\n                .attr('name', name + this.unique_string)\n                .attr('value', function(d) { return d[1]; })\n                .on('change', function() {\n                    if (this.checked)\n                        settings.set_conditional(name, this.value);\n                })\n                .each(function() {\n                    // subscribe to changes in the model\n                    settings.streams[name].onValue(function(value) {\n                        // check the box for the new value\n                        this.checked = (this.value == value);\n                    }.bind(this));\n                });\n            s.append('span')\n                .text(function(d) { return d[0]; });\n        }.bind(this));\n\n    }\n}\n\nfunction view_gui(s, option_name, string, options) {\n\n    // columns\n    var settings = this.settings;\n\n    var t = s.append('table').attr('class', 'settings-table');\n    t.append('tr').call(function(r) {\n        // identifiers\n        r.attr('title', ('The identifiers that are show in the reaction, ' +\n                         'gene, and metabolite labels on the map.'));\n        r.append('td').text('Identifiers:')\n            .attr('class', 'options-label');\n        var cell = r.append('td');\n\n        var options = [['ID\\'s', 'bigg_id'], ['Descriptive names', 'name']],\n            style_cells = cell.selectAll('.option-group')\n                .data(options),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var name = 'identifiers_on_map';\n        s.append('input').attr('type', 'radio')\n            .attr('name', name + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(name, this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[name].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span').text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    var boolean_options = [\n        ['scroll_behavior', 'Scroll to zoom (instead of scroll to pan)',\n         ('If checked, then the scroll wheel and trackpad will control zoom ' +\n          'rather than pan.'), {'zoom': true, 'pan': false}],\n        ['use_3d_transform', 'Responsive pan and zoom (best for latest Chrome, Firefox, and IE)',\n         ('Depending on your browser, this option may help or hurt ' +\n          'performance when panning and zooming.')],\n        ['hide_secondary_metabolites', 'Hide secondary metabolites',\n         ('If checked, then only the primary metabolites ' +\n          'will be displayed.')],\n        ['show_gene_reaction_rules', 'Show gene reaction rules',\n         ('If checked, then gene reaction rules will be displayed ' +\n          'below each reaction label. (Gene reaction rules are always ' +\n          'shown when gene data is loaded.)')],\n        ['hide_all_labels', 'Hide reaction, gene, and metabolite labels',\n         ('If checked, hide all reaction, gene, and metabolite labels')],\n        ['allow_building_duplicate_reactions', 'Allow duplicate reactions',\n         ('If checked, then allow duplicate reactions during model building.')],\n        ['highlight_missing', 'Highlight reactions not in model',\n         ('If checked, then highlight in red all the ' +\n          'reactions on the map that are not present in ' +\n          'the loaded model.')],\n    ];\n\n    var opts = s.append('div').attr('class', 'settings-container')\n            .selectAll('.option-group')\n            .data(boolean_options);\n    // enter\n    var e = opts.enter()\n            .append('label')\n            .attr('class', 'option-group full-line');\n    e.append('input').attr('type', 'checkbox');\n    e.append('span');\n    // update\n    opts.attr('title', function(d) { return d[2]; });\n    opts.select('input')\n        .on('change', function(d) {\n            if (d.length >= 4) { // not a boolean setting\n                for (var key in d[3]) {\n                    if (d[3][key] == this.checked) {\n                        settings.set_conditional(d[0], key);\n                        break;\n                    }\n                }\n            } else { // boolean setting\n                settings.set_conditional(d[0], this.checked);\n            }\n        })\n        .each(function(d) {\n            settings.streams[d[0]].onValue(function(value) {\n                if (d.length >= 4) { // not a boolean setting\n                    this.checked = d[3][value];\n                } else { // boolean setting\n                    this.checked = value;\n                }\n            }.bind(this));\n        });\n    opts.select('span')\n        .text(function(d) { return d[1]; });\n    // exit\n    opts.exit().remove();\n\n    // message about text performance\n    s.append('div')\n        .style('margin-top', '16px')\n        .classed('settings-tip', true)\n        .text('Tip: To increase map performance, turn off text boxes (i.e. labels and gene reaction rules).');\n}\n","/** TextEditInput */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar build = require('./build');\n\n\nvar TextEditInput = utils.make_class();\n// instance methods\nTextEditInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    show: show,\n    hide: hide,\n    _accept_changes: _accept_changes,\n    _add_and_edit: _add_and_edit\n};\nmodule.exports = TextEditInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container) {\n    var div = selection.append('div')\n            .attr('id', 'text-edit-input');\n    this.placed_div = PlacedDiv(div, map);\n    this.placed_div.hide();\n    this.input = div.append('input');\n\n    this.map = map;\n    this.setup_map_callbacks(map);\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('edit_text_label.text_edit_input', function(target, coords) {\n        this.show(target, coords);\n    }.bind(this));\n\n    // new text_label\n    map.callback_manager.set('new_text_label.text_edit_input', function(coords) {\n        if (this.active_target !== null)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n        this._add_and_edit(coords);\n    }.bind(this));\n\n    map.callback_manager.set('hide_text_label_editor.text_edit_input', function() {\n        this.hide();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n    zoom_container.callback_manager.set('go_to.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction show(target, coords) {\n    // save any existing edit\n    if (this.active_target) {\n        this._accept_changes(this.active_target.target);\n    }\n\n    // set the current target\n    this.active_target = { target: target,\n                           coords: coords };\n\n    // set the new value\n    target.each(function(d) {\n        this.input.node().value = d.text;\n    }.bind(this));\n\n    // place the input\n    this.placed_div.place(coords);\n    this.input.node().focus();\n\n    // escape key\n    this.escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this));\n    // enter key\n    this.enter = this.map.key_manager\n        .add_enter_listener(function(target) {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this, target));\n}\n\nfunction hide() {\n    // hide the input\n    this.placed_div.hide();\n\n    // clear the value\n    this.input.attr('value', '');\n    this.active_target = null;\n\n    // clear escape\n    if (this.escape)\n        this.escape.clear();\n    this.escape = null;\n    // clear enter\n    if (this.enter)\n        this.enter.clear();\n    this.enter = null;\n    // turn off click listener\n    // this.map.sel.on('click.', null);\n}\n\nfunction _accept_changes(target) {\n    if (this.input.node().value == '') {\n        // delete the label\n        target.each(function(d) {\n            var selected = {};\n            selected[d.text_label_id] = this.map.text_labels[d.text_label_id];\n            this.map.delete_selectable({}, selected, true);\n        }.bind(this));\n    } else {\n        // set the text\n        var text_label_ids = [];\n        target.each(function(d) {\n            this.map.edit_text_label(d.text_label_id, this.input.node().value, true);\n            text_label_ids.push(d.text_label_id);\n        }.bind(this));\n    }\n}\n\nfunction _add_and_edit(coords) {\n    // make an empty label\n    var text_label_id = this.map.new_text_label(coords, '');\n    // apply the cursor to the new label\n    var sel = this.map.sel.select('#text-labels').selectAll('.text-label')\n            .filter(function(d) { return d.text_label_id == text_label_id; });\n    sel.select('text').classed('edit-text-cursor', true);\n    this.show(sel, coords);\n}\n","/** UndoStack. A constructor that can be used to store undo info. */\n\nvar utils = require('./utils');\n\n\nvar UndoStack = utils.make_class();\nUndoStack.prototype = {\n    init: init,\n    push: push,\n    undo: undo,\n    redo: redo\n};\nmodule.exports = UndoStack;\n\n\n// definitions\nfunction init() {\n    var stack_size = 40;\n    this.stack = Array(stack_size);\n    this.current = -1;\n    this.oldest = -1;\n    this.newest = -1;\n    this.end_of_stack = true;\n    this.top_of_stack = true;\n}\n\n\nfunction _incr(a, l) {\n    return a + 1 > l - 1 ? 0 : a + 1;\n}\n\n\nfunction _decr(a, l) {\n    return a - 1 < 0 ? l - 1 : a -  1;\n}\n\n\nfunction push(undo_fn, redo_fn) {\n    this.current = _incr(this.current, this.stack.length);\n    // change the oldest\n    if (this.end_of_stack)\n        this.oldest = this.current;\n    else if (this.oldest == this.current)\n        this.oldest = _incr(this.oldest, this.stack.length);\n    this.stack[this.current] = { undo: undo_fn, redo: redo_fn };\n    this.newest = this.current;\n\n    // top of the stack\n    this.top_of_stack = true;\n    this.end_of_stack = false;\n}\n\n\nfunction undo() {\n    // check that we haven't reached the end\n    if (this.end_of_stack) return console.warn('End of stack.');\n    // run the lastest stack function\n    this.stack[this.current].undo();\n    if (this.current == this.oldest) {\n        // if the next index is less than the oldest, then the stack is dead\n        this.end_of_stack = true;\n    } else {\n        // reference the next fn\n        this.current = _decr(this.current, this.stack.length);\n    }\n\n    // not at the top of the stack\n    this.top_of_stack = false;\n}\n\n\nfunction redo() {\n    // check that we haven't reached the end\n    if (this.top_of_stack) return console.warn('Top of stack.');\n\n    if (!this.end_of_stack)\n        this.current = _incr(this.current, this.stack.length);\n    this.stack[this.current].redo();\n\n    // if at top of stack\n    if (this.current == this.newest)\n        this.top_of_stack = true;\n\n    // not at the end of the stack\n    this.end_of_stack = false;\n}\n","/** ZoomContainer\n *\n *\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\nvar _ = require('underscore');\n\n\nvar ZoomContainer = utils.make_class();\nZoomContainer.prototype = {\n    init: init,\n    set_scroll_behavior: set_scroll_behavior,\n    set_use_3d_transform: set_use_3d_transform,\n    _update_scroll: _update_scroll,\n    toggle_pan_drag: toggle_pan_drag,\n    go_to: go_to,\n    _go_to_3d: _go_to_3d,\n    _clear_3d: _clear_3d,\n    _go_to_svg: _go_to_svg,\n    zoom_by: zoom_by,\n    zoom_in: zoom_in,\n    zoom_out: zoom_out,\n    get_size: get_size,\n    translate_off_screen: translate_off_screen\n};\nmodule.exports = ZoomContainer;\n\n\n// definitions\nfunction init(selection, scroll_behavior, use_3d_transform, fill_screen) {\n    /** Make a container that will manage panning and zooming. Creates a new\n     SVG element, with a parent div for CSS3 3D transforms.\n\n     Arguments\n     ---------\n\n     selection: A d3 selection of a HTML node to put the zoom container\n     in. Should have a defined width and height.\n\n     scroll_behavior: Either 'zoom' or 'pan'.\n\n     use_3d_transform: If true, then use CSS3 3D transform to speed up pan\n     and zoom.\n\n     fill_screen: If true, then apply styles to body and selection that fill\n     the screen. The styled classes are \"fill-screen-body\" and\n     \"fill-screen-div\".\n\n     */\n\n    // set the selection class\n    selection.classed('escher-container', true);\n\n    // fill screen classes\n    if (fill_screen) {\n        d3.select(\"body\").classed('fill-screen-body', true);\n        selection.classed('fill-screen-div', true);\n    }\n\n    // make the svg\n    var zoom_container = selection.append('div')\n            .attr('class', 'escher-zoom-container');\n\n    var css3_transform_container = zoom_container.append('div')\n            .attr('class', 'escher-3d-transform-container');\n\n    var svg = css3_transform_container.append('svg')\n            .attr(\"class\", \"escher-svg\")\n            .attr('xmlns', \"http://www.w3.org/2000/svg\");\n\n    // set up the zoom container\n    svg.select(\".zoom-g\").remove();\n    var zoomed_sel = svg.append(\"g\")\n            .attr(\"class\", \"zoom-g\");\n\n    // attributes\n    this.selection = selection;\n    this.zoom_container = zoom_container;\n    this.css3_transform_container = css3_transform_container;\n    this.svg = svg;\n    this.zoomed_sel = zoomed_sel;\n    this.window_translate = {x: 0, y: 0};\n    this.window_scale = 1.0;\n\n    this._scroll_behavior = scroll_behavior;\n    this._use_3d_transform = use_3d_transform;\n    this._pan_drag_on = true;\n    this._zoom_behavior = null;\n    this._zoom_timeout = null;\n    this._svg_scale = this.window_scale;\n    this._svg_translate = this.window_translate;\n    // this._last_svg_ms = null;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // update the scroll behavior\n    this._update_scroll();\n}\n\nfunction set_scroll_behavior(scroll_behavior) {\n    /** Set up pan or zoom on scroll.\n     *\n     * Arguments\n     * ---------\n     *\n     * scroll_behavior: 'none', 'pan' or 'zoom'.\n     *\n     */\n\n    this._scroll_behavior = scroll_behavior;\n    this._update_scroll();\n}\n\nfunction set_use_3d_transform(use_3d_transform) {\n    /** Set the option use_3d_transform */\n    this._use_3d_transform = use_3d_transform;\n}\n\nfunction toggle_pan_drag(on_off) {\n    /** Toggle the zoom drag and the cursor UI for it. */\n\n    if (_.isUndefined(on_off)) {\n        this._pan_drag_on = !this._pan_drag_on;\n    } else {\n        this._pan_drag_on = on_off;\n    }\n\n    if (this._pan_drag_on) {\n        // turn on the hand\n        this.zoomed_sel\n            .classed('cursor-grab', true).classed('cursor-grabbing', false);\n        this.zoomed_sel\n            .on('mousedown.cursor', function(sel) {\n                sel.classed('cursor-grab', false).classed('cursor-grabbing', true);\n            }.bind(null, this.zoomed_sel))\n            .on('mouseup.cursor', function(sel) {\n                sel.classed('cursor-grab', true).classed('cursor-grabbing', false);\n            }.bind(null, this.zoomed_sel));\n    } else {\n        // turn off the hand\n        this.zoomed_sel.style('cursor', null)\n            .classed('cursor-grab', false)\n            .classed('cursor-grabbing', false);\n        this.zoomed_sel.on('mousedown.cursor', null);\n        this.zoomed_sel.on('mouseup.cursor', null);\n    }\n\n    // update the behaviors\n    this._update_scroll();\n}\n\nfunction _update_scroll() {\n    /** Update the pan and zoom behaviors. The behaviors are applied to the\n     * css3_transform_container node.\n     *\n     */\n\n    if (!_.contains(['zoom', 'pan', 'none'], this._scroll_behavior)) {\n        throw Error('Bad value for scroll_behavior: ' + this._scroll_behavior);\n    }\n\n    // clear all behaviors\n    this.zoom_container.on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n        .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n        .on(\"wheel.zoom\", null) // disables newer versions of Firefox\n        .on('dblclick.zoom', null)\n        .on('mousewheel.escher', null) // pan scroll behaviors\n        .on('DOMMouseScroll.escher', null)\n        .on('wheel.escher', null)\n        .on(\"mousedown.zoom\", null) // drag behaviors\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    // This handles dragging to pan, and touch events (in any scroll mode). It\n    // also handles scrolling to zoom (only 'zoom' mode). It also raises an\n    // exception in node, so catch that during testing. This may be a bug with\n    // d3 related to d3 using the global this.document. TODO look into this.\n    try {\n        this._zoom_behavior = d3.behavior.zoom()\n            .on(\"zoom\", function() {\n                this.go_to(d3.event.scale, {x: d3.event.translate[0], y: d3.event.translate[1]});\n            }.bind(this));\n    } catch (err) {\n        console.log('Not in a browser, so d3.behavior.zoom does not work.');\n        this._zoom_behavior = null;\n        return;\n    }\n\n    // set current location\n    this._zoom_behavior.scale(this.window_scale);\n    this._zoom_behavior.translate([this.window_translate.x,\n                                   this.window_translate.y]);\n\n    // set it up\n    this.zoom_container.call(this._zoom_behavior);\n\n    // always turn off double-clicking to zoom\n    this.zoom_container.on('dblclick.zoom', null);\n\n    // if panning is off, then turn off these listeners\n    if (!this._pan_drag_on) {\n        this.zoom_container.on(\"mousedown.zoom\", null)\n            .on(\"touchstart.zoom\", null)\n            .on(\"touchmove.zoom\", null)\n            .on(\"touchend.zoom\", null);\n    }\n\n    // if scroll to zoom is off, then turn off these listeners\n    if (this._scroll_behavior !== 'zoom') {\n        this.zoom_container\n            .on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n            .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n            .on(\"wheel.zoom\", null); // disables newer versions of Firefox\n    }\n\n    // add listeners for scrolling to pan\n    if (this._scroll_behavior === 'pan') {\n        // Add the wheel listener\n        var wheel_fn = function() {\n            var ev = d3.event,\n                sensitivity = 0.5;\n            // stop scroll in parent elements\n            ev.stopPropagation();\n            ev.preventDefault();\n            ev.returnValue = false;\n            // change the location\n            var get_directional_disp = function(wheel_delta, delta) {\n                var the_delt = _.isUndefined(wheel_delta) ? delta : -wheel_delta / 1.5;\n                return the_delt * sensitivity;\n            };\n            var new_translate = {\n                x: this.window_translate.x - get_directional_disp(ev.wheelDeltaX, ev.deltaX),\n                y: this.window_translate.y - get_directional_disp(ev.wheelDeltaY, ev.deltaY)\n            };\n            this.go_to(this.window_scale, new_translate, false);\n        }.bind(this);\n\n        // apply it\n        this.zoom_container.on('mousewheel.escher', wheel_fn);\n        this.zoom_container.on('DOMMouseScroll.escher', wheel_fn);\n        this.zoom_container.on('wheel.escher', wheel_fn);\n    }\n}\n\n// functions to scale and translate\nfunction go_to(scale, translate) {\n    /** Zoom the container to a specified location.\n     *\n     * Arguments\n     * ---------\n     *\n     * scale: The scale, between 0 and 1.\n     *\n     * translate: The location, of the form {x: 2.0, y: 3.0}.\n     *\n     */\n\n    utils.check_undefined(arguments, ['scale', 'translate']);\n\n    var use_3d_transform = this._use_3d_transform;\n\n    // check inputs\n    if (!scale) throw new Error('Bad scale value');\n    if (!translate || !('x' in translate) || !('y' in translate) ||\n        isNaN(translate.x) || isNaN(translate.y))\n        return console.error('Bad translate value');\n\n    // save inputs\n    this.window_scale = scale;\n    this.window_translate = translate;\n\n    // save to zoom behavior\n    if (!_.isNull(this._zoom_behavior)) {\n        this._zoom_behavior.scale(scale);\n        var translate_array = [translate.x, translate.y];\n        this._zoom_behavior.translate(translate_array);\n    }\n\n    if (use_3d_transform) { // 3d tranform\n        // cancel all timeouts\n        if (!_.isNull(this._zoom_timeout))\n            clearTimeout(this._zoom_timeout);\n\n        // set the 3d transform\n        this._go_to_3d(scale, translate,\n                       this._svg_scale, this._svg_translate);\n\n        // if another go_to does not happen within the delay time, then\n        // redraw the svg\n        this._zoom_timeout = _.delay(function() {\n            // redraw the svg\n            this._go_to_svg(scale, translate);\n        }.bind(this), 100); // between 100 and 600 seems to be usable\n\n    } else { // no 3d transform\n        this._go_to_svg(scale, translate);\n    }\n\n    this.callback_manager.run('go_to');\n}\n\nfunction _go_to_3d(scale, translate, svg_scale, svg_translate) {\n    /** Zoom & pan the CSS 3D transform container */\n    var n_scale = scale / svg_scale,\n        n_translate = utils.c_minus_c(\n            translate,\n            utils.c_times_scalar(svg_translate, n_scale)\n        ),\n        tranform = ('translate(' + n_translate.x + 'px,' + n_translate.y + 'px) ' +\n                    'scale(' + n_scale + ')');\n    this.css3_transform_container.style('transform', tranform);\n    this.css3_transform_container.style('-webkit-transform', tranform);\n    this.css3_transform_container.style('transform-origin', '0 0');\n    this.css3_transform_container.style('-webkit-transform-origin', '0 0');\n}\n\nfunction _clear_3d() {\n    this.css3_transform_container.style('transform', null);\n    this.css3_transform_container.style('-webkit-transform', null);\n    this.css3_transform_container.style('transform-origin', null);\n    this.css3_transform_container.style('-webkit-transform-origin', null);\n}\n\nfunction _go_to_svg(scale, translate) {\n    /** Zoom & pan the svg element.\n     *\n     * Also runs the svg_start and svg_finish callbacks.\n     *\n     */\n\n    this.callback_manager.run('svg_start');\n\n    // defer to update callbacks\n    _.defer(function() {\n\n        // start time\n        // var start = new Date().getTime();\n\n        // reset the 3d transform\n        this._clear_3d();\n\n        // redraw the svg\n        this.zoomed_sel\n            .attr('transform',\n                  'translate(' + translate.x + ',' + translate.y + ') ' +\n                  'scale(' + scale + ')');\n        // save svg location\n        this._svg_scale = this.window_scale;\n        this._svg_translate = this.window_translate;\n\n        _.defer(function() {\n            // defer for callback after draw\n            this.callback_manager.run('svg_finish');\n\n            // wait a few ms to get a reliable end time\n            // _.delay(function() {\n            //     // end time\n            //     var t = new Date().getTime() - start;\n            //     this._last_svg_ms = t;\n            // }.bind(this), 20);\n        }.bind(this));\n    }.bind(this));\n}\n\nfunction zoom_by(amount) {\n    /** Zoom by a specified multiplier.\n     *\n     * Arguments\n     * ---------\n     *\n     * amount: A multiplier for the zoom. Greater than 1 zooms in and less\n     * than 1 zooms out.\n     *\n     */\n    var size = this.get_size(),\n        shift = { x: size.width/2 - ((size.width/2 - this.window_translate.x) * amount +\n                                     this.window_translate.x),\n                  y: size.height/2 - ((size.height/2 - this.window_translate.y) * amount +\n                                      this.window_translate.y) };\n    this.go_to(this.window_scale * amount,\n               utils.c_plus_c(this.window_translate, shift));\n}\n\nfunction zoom_in() {\n    /** Zoom in by the default amount with the default options. */\n    this.zoom_by(1.5);\n}\n\nfunction zoom_out() {\n    /** Zoom out by the default amount with the default options. */\n    this.zoom_by(0.667);\n}\n\nfunction get_size() {\n    /** Return the size of the zoom container as coordinates.\n     *\n     * e.g. {x: 2, y: 3}\n     *\n     */\n    return { width: parseInt(this.selection.style('width'), 10),\n             height: parseInt(this.selection.style('height'), 10) };\n}\n\nfunction translate_off_screen(coords) {\n    /** Shift window if new reaction will draw off the screen */\n\n    // TODO BUG not accounting for scale correctly\n\n    var margin = 120, // pixels\n        size = this.get_size(),\n        current = {'x': {'min': - this.window_translate.x / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.x / this.window_scale +\n                         (size.width-margin) / this.window_scale },\n                   'y': {'min': - this.window_translate.y / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.y / this.window_scale +\n                         (size.height-margin) / this.window_scale } };\n    if (coords.x < current.x.min) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.x > current.x.max) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n    if (coords.y < current.y.min) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.y > current.y.max) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n}\n","/** build */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    new_reaction: new_reaction,\n    rotate_nodes: rotate_nodes,\n    move_node_and_dependents: move_node_and_dependents,\n    new_text_label: new_text_label,\n    bezier_id_for_segment_id: bezier_id_for_segment_id,\n    bezier_ids_for_reaction_ids: bezier_ids_for_reaction_ids,\n    new_beziers_for_segments: new_beziers_for_segments,\n    new_beziers_for_reactions: new_beziers_for_reactions\n};\n\n\n// definitions\nfunction new_reaction(bigg_id, cobra_reaction, cobra_metabolites,\n                      selected_node_id, selected_node,\n                      largest_ids, cofactors, angle) {\n    /** New reaction.\n\n     angle: clockwise from 'right', in degrees\n\n     */\n\n    // rotate the new reaction around the selected metabolite\n    // convert to radians\n    angle = Math.PI / 180 * angle;\n\n    // generate a new integer id\n    var new_reaction_id = String(++largest_ids.reactions);\n\n    // calculate coordinates of reaction\n    var selected_node_coords = { x: selected_node.x,\n                                 y: selected_node.y };\n\n    // rotate main axis around angle with distance\n    var reaction_length = 300,\n        main_axis = [ selected_node_coords,\n                      utils.c_plus_c(selected_node_coords,\n                                     {'x': reaction_length, 'y': 0}) ],\n        center = { 'x': (main_axis[0].x + main_axis[1].x)/2,\n                   'y': (main_axis[0].y + main_axis[1].y)/2 };\n\n    // relative label location\n    var label_d;\n    if (Math.abs(angle) < Math.PI/4 ||\n        Math.abs(angle - Math.PI) < Math.PI/4 ) {\n            label_d = { x: -50, y: -40 };\n        } else {\n            label_d = { x: 30, y: 10 };\n        }\n\n    // relative anchor node distance\n    var anchor_distance = 20;\n\n    // new reaction structure\n    var new_reaction = utils.clone(cobra_reaction);\n    utils.extend(new_reaction,\n                 { label_x: center.x + label_d.x,\n                   label_y: center.y + label_d.y,\n                   segments: {} });\n\n    // set primary metabolites and count reactants/products\n\n    // look for the selected metabolite, and record the indices\n    var reactant_ranks = [], product_ranks = [],\n        reactant_count = 0, product_count = 0,\n        reaction_is_reversed = false;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        // make the metabolites into objects\n        var metabolite = cobra_metabolites[met_bigg_id],\n            coefficient = new_reaction.metabolites[met_bigg_id],\n            formula = metabolite.formula,\n            new_metabolite = { coefficient: coefficient,\n                               bigg_id: met_bigg_id,\n                               name: metabolite.name };\n        if (coefficient < 0) {\n            new_metabolite.index = reactant_count;\n            // score the metabolites. Infinity == selected, >= 1 == carbon containing\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                reactant_ranks.push([new_metabolite.index, Infinity]);\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                reactant_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            reactant_count++;\n        } else {\n            new_metabolite.index = product_count;\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                product_ranks.push([new_metabolite.index, Infinity]);\n                reaction_is_reversed = true;\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                product_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            product_count++;\n        }\n        new_reaction.metabolites[met_bigg_id] = new_metabolite;\n    }\n\n    // get the rank with the highest score\n    var max_rank = function(old, current) { return current[1] > old[1] ? current : old; },\n        primary_reactant_index = reactant_ranks.reduce(max_rank, [0,0])[0],\n        primary_product_index = product_ranks.reduce(max_rank, [0,0])[0];\n\n    // set primary metabolites, and keep track of the total counts\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id];\n        if (metabolite.coefficient < 0) {\n            if (metabolite.index==primary_reactant_index) metabolite.is_primary = true;\n            metabolite.count = reactant_count + 1;\n        } else {\n            if (metabolite.index==primary_product_index) metabolite.is_primary = true;\n            metabolite.count = product_count + 1;\n        }\n    }\n\n    // generate anchor nodes\n    var new_anchors = {},\n        anchors = [ { node_type: 'anchor_reactants',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? 1 : -1), y: 0 } },\n                    { node_type: 'center',\n                      dis: { x: 0, y: 0 } },\n                    { node_type: 'anchor_products',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? -1 : 1), y: 0 } } ],\n        anchor_ids = {};\n    anchors.map(function(n) {\n        var new_id = String(++largest_ids.nodes),\n            general_node_type = (n.node_type=='center' ? 'midmarker' : 'multimarker');\n        new_anchors[new_id] = { node_type: general_node_type,\n                                x: center.x + n.dis.x,\n                                y: center.y + n.dis.y,\n                                connected_segments: [],\n                                name: null,\n                                bigg_id: null,\n                                label_x: null,\n                                label_y: null,\n                                node_is_primary: null };\n        anchor_ids[n.node_type] = new_id;\n    });\n\n    // add the segments, outside to inside\n    var new_anchor_groups = [ [ anchor_ids['anchor_reactants'], anchor_ids['center'] ],\n                              [ anchor_ids['anchor_products'],  anchor_ids['center'] ] ];\n    new_anchor_groups.map(function(l) {\n        var from_id = l[0], to_id = l[1],\n            new_segment_id = String(++largest_ids.segments);\n        new_reaction.segments[new_segment_id] =  { b1: null,\n                                                   b2: null,\n                                                   from_node_id: from_id,\n                                                   to_node_id: to_id,\n                                                   from_node_coefficient: null,\n                                                   to_node_coefficient: null,\n                                                   reversibility: new_reaction.reversibility,\n                                                   data: new_reaction.data,\n                                                   reverse_flux: new_reaction.reverse_flux };\n        new_anchors[from_id].connected_segments.push({ segment_id: new_segment_id,\n                                                       reaction_id: new_reaction_id });\n        new_anchors[to_id].connected_segments.push({ segment_id: new_segment_id,\n                                                     reaction_id: new_reaction_id });\n    });\n\n    // Add the metabolites, keeping track of total reactants and products.\n    var new_nodes = new_anchors;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id],\n            primary_index, from_node_id;\n        if (metabolite.coefficient < 0) {\n            // metabolite.count = reactant_count + 1;\n            primary_index = primary_reactant_index;\n            from_node_id = anchor_ids['anchor_reactants'];\n        } else {\n            // metabolite.count = product_count + 1;\n            primary_index = primary_product_index;\n            from_node_id = anchor_ids['anchor_products'];\n        }\n\n        // calculate coordinates of metabolite components\n        var met_loc = calculate_new_metabolite_coordinates(metabolite,\n                                                           primary_index,\n                                                           main_axis,\n                                                           center,\n                                                           reaction_length,\n                                                           reaction_is_reversed);\n\n        // if this is the existing metabolite\n        if (selected_node.bigg_id==metabolite.bigg_id) {\n            var new_segment_id = String(++largest_ids.segments);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: selected_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // update the existing node\n            selected_node.connected_segments.push({ segment_id: new_segment_id,\n                                                    reaction_id: new_reaction_id });\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        } else {\n            // save new metabolite\n            var new_segment_id = String(++largest_ids.segments),\n                new_node_id = String(++largest_ids.nodes);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: new_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // save new node\n            new_nodes[new_node_id] = { connected_segments: [{ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id }],\n                                       x: met_loc.circle.x,\n                                       y: met_loc.circle.y,\n                                       node_is_primary: Boolean(metabolite.is_primary),\n                                       label_x: met_loc.circle.x + label_d.x,\n                                       label_y: met_loc.circle.y + label_d.y,\n                                       name: metabolite.name,\n                                       bigg_id: metabolite.bigg_id,\n                                       node_type: 'metabolite' };\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        }\n    }\n\n    // now take out the extra reaction details\n    var metabolites_array = []\n    for (var bigg_id in new_reaction.metabolites) {\n        metabolites_array.push({'bigg_id': bigg_id,\n                                'coefficient': new_reaction.metabolites[bigg_id].coefficient});\n    }\n    new_reaction.metabolites = metabolites_array;\n\n    // new_reactions object\n    var new_reactions = {};\n    new_reactions[new_reaction_id] = new_reaction;\n\n    // new_beziers object\n    var new_beziers = new_beziers_for_reactions(new_reactions);\n\n    // add the selected node for rotation, and return it as a new (updated) node\n    new_nodes[selected_node_id] = selected_node;\n    rotate_nodes(new_nodes, new_reactions, new_beziers,\n                 angle, selected_node_coords);\n\n    return { new_reactions: new_reactions,\n             new_beziers: new_beziers,\n             new_nodes: new_nodes };\n}\n\nfunction rotate_nodes(selected_nodes, reactions, beziers, angle, center) {\n    /** Rotate the nodes around center.\n\n     selected_nodes: Nodes to rotate.\n     reactions: Only updates beziers for these reactions.\n     beziers: Also update the bezier points.\n     angle: Angle to rotate in radians.\n     center: Point to rotate around.\n\n     */\n\n    // functions\n    var rotate_around = function(coord) {\n        if (coord === null)\n            return null;\n        return utils.rotate_coords(coord, angle, center);\n    };\n\n    // recalculate: node\n    var updated_node_ids = [], updated_reaction_ids = [];\n    for (var node_id in selected_nodes) {\n        var node = selected_nodes[node_id],\n            // rotation distance\n            displacement = rotate_around({ x: node.x, y: node.y }),\n            // move the node\n            updated = move_node_and_labels(node, reactions,\n                                           displacement);\n        // move the bezier points\n        node.connected_segments.map(function(segment_obj) {\n            var reaction = reactions[segment_obj.reaction_id];\n            // If the reaction was not passed in the reactions argument, then ignore\n            if (reaction === undefined) return;\n\n            // rotate the beziers\n            var segment_id = segment_obj.segment_id,\n                segment = reaction.segments[segment_id];\n            if (segment.to_node_id==node_id && segment.b2) {\n                var displacement = rotate_around(segment.b2),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b2');\n                segment.b2 = utils.c_plus_c(segment.b2, displacement);\n                beziers[bez_id].x = segment.b2.x;\n                beziers[bez_id].y = segment.b2.y;\n            } else if (segment.from_node_id==node_id && segment.b1) {\n                var displacement = rotate_around(segment.b1),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b1');\n                segment.b1 = utils.c_plus_c(segment.b1, displacement);\n                beziers[bez_id].x = segment.b1.x;\n                beziers[bez_id].y = segment.b1.y;\n            }\n        });\n\n        updated_reaction_ids = utils.unique_concat([updated_reaction_ids,\n                                                    updated.reaction_ids]);\n        updated_node_ids.push(node_id);\n    }\n\n    return { node_ids: updated_node_ids,\n             reaction_ids: updated_reaction_ids };\n}\n\nfunction move_node_and_dependents(node, node_id, reactions, beziers, displacement) {\n    /** Move the node and its labels and beziers.\n\n     */\n    var updated = move_node_and_labels(node, reactions, displacement);\n\n    // move beziers\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // If the reaction was not passed in the reactions argument, then ignore\n        if (reaction === undefined) return;\n\n        // update beziers\n        var segment_id = segment_obj.segment_id,\n            segment = reaction.segments[segment_id];\n        [['b1', 'from_node_id'], ['b2', 'to_node_id']].forEach(function(c) {\n            var bez = c[0],\n                node = c[1];\n            if (segment[node]==node_id && segment[bez]) {\n                segment[bez] = utils.c_plus_c(segment[bez], displacement);\n                var tbez = beziers[bezier_id_for_segment_id(segment_id, bez)];\n                tbez.x = segment[bez].x;\n                tbez.y = segment[bez].y;\n            }\n        });\n\n        // add to list of updated reaction ids if it isn't already there\n        if (updated.reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated.reaction_ids.push(segment_obj.reaction_id);\n        }\n    });\n    return updated;\n}\n\nfunction move_node_and_labels(node, reactions, displacement) {\n    node.x = node.x + displacement.x;\n    node.y = node.y + displacement.y;\n\n    // recalculate: node label\n    node.label_x = node.label_x + displacement.x;\n    node.label_y = node.label_y + displacement.y;\n\n    // recalculate: reaction label\n    var updated_reaction_ids = [];\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // add to list of updated reaction ids if it isn't already there\n        if (updated_reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated_reaction_ids.push(segment_obj.reaction_id);\n\n            // update reaction label (but only once per reaction\n            if (node.node_type == 'midmarker') {\n                reaction.label_x = reaction.label_x + displacement.x;\n                reaction.label_y = reaction.label_y + displacement.y;\n            }\n        }\n    });\n    return { reaction_ids: updated_reaction_ids };\n}\n\nfunction calculate_new_metabolite_coordinates(met, primary_index, main_axis, center, dis, is_reversed) {\n    /** Calculate metabolite coordinates for a new reaction metabolite.\n\n     */\n    // new local coordinate system\n    var displacement = main_axis[0],\n        main_axis = [utils.c_minus_c(main_axis[0], displacement),\n                     utils.c_minus_c(main_axis[1], displacement)],\n        center = utils.c_minus_c(center, displacement);\n\n    // Curve parameters\n    var w = 80,  // distance between reactants and between products\n        b1_strength = 0.4,\n        b2_strength = 0.25,\n        w2 = w*0.7,\n        secondary_dis = 40,\n        num_slots = Math.min(2, met.count - 1);\n\n    // size and spacing for primary and secondary metabolites\n    var ds, draw_at_index, r;\n    if (met.is_primary) { // primary\n        ds = 20;\n    } else { // secondary\n        ds = 10;\n        // don't use center slot\n        if (met.index > primary_index) draw_at_index = met.index - 1;\n        else draw_at_index = met.index;\n    }\n\n    var de = dis - ds, // distance between ends of line axis\n        reaction_axis = [{'x': ds, 'y': 0},\n                         {'x': de, 'y': 0}];\n\n    // Define line parameters and axis.\n    // Begin with unrotated coordinate system. +y = Down, +x = Right.\n    var end, circle, b1, b2;\n    // reactants\n    if (((met.coefficient < 0) != is_reversed) && met.is_primary) { // Ali == BADASS\n        end = {'x': reaction_axis[0].x,\n               'y': reaction_axis[0].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + (end.x)*(1-b2_strength),\n              'y': center.y*b2_strength + (end.y)*(1-b2_strength)},\n        circle = {'x': main_axis[0].x,\n                  'y': main_axis[0].y};\n    } else if ((met.coefficient < 0) != is_reversed) {\n        end = {'x': reaction_axis[0].x + secondary_dis,\n               'y': reaction_axis[0].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength},\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[0].x + secondary_dis,\n                  'y': main_axis[0].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    } else if (((met.coefficient > 0) != is_reversed) && met.is_primary) {        // products\n        end = {'x': reaction_axis[1].x,\n               'y': reaction_axis[1].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x,\n                  'y': main_axis[1].y};\n    } else if ((met.coefficient > 0) != is_reversed) {\n        end = {'x': reaction_axis[1].x - secondary_dis,\n               'y': reaction_axis[1].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x - secondary_dis,\n                  'y': main_axis[1].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    }\n    var loc = {};\n    loc.b1 = utils.c_plus_c(displacement, b1);\n    loc.b2 = utils.c_plus_c(displacement, b2);\n    loc.circle = utils.c_plus_c(displacement, circle);\n    return loc;\n}\n\nfunction new_text_label(largest_ids, text, coords) {\n    var new_id = String(++largest_ids.text_labels),\n        new_label = { text: text,\n                      x: coords.x,\n                      y: coords.y };\n    return {id: new_id, label: new_label};\n}\n\nfunction bezier_id_for_segment_id(segment_id, bez) {\n    return segment_id+'_'+bez;\n}\n\nfunction bezier_ids_for_reaction_ids(reactions) {\n    /** Return an array of beziers ids for the array of reaction ids.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. a subset of *escher.Map.reactions*.\n\n     */\n    var bezier_ids = [];\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n\n            ['b1', 'b2'].forEach(function(bez) {\n                var seg_bez = segment[bez];\n                if (seg_bez !== null) {\n                    bezier_ids.push(bezier_id_for_segment_id(segment_id, bez));\n                }\n            });\n        }\n    }\n    return bezier_ids;\n}\n\nfunction new_beziers_for_segments(segments, reaction_id) {\n    /** Return an object containing beziers for the segments object.\n\n     Arguments\n     ---------\n\n     segments: A segments object, e.g. *escher.Map.segments*.\n\n     reaction_id: The reaction id for the segments.\n\n     */\n    var beziers = {};\n    for (var segment_id in segments) {\n        var segment = segments[segment_id];\n\n        ['b1', 'b2'].forEach(function(bez) {\n            var seg_bez = segment[bez];\n            if (seg_bez !== null) {\n                var bezier_id = bezier_id_for_segment_id(segment_id, bez);\n                beziers[bezier_id] = {\n                    bezier: bez,\n                    x: seg_bez.x,\n                    y: seg_bez.y,\n                    reaction_id: reaction_id,\n                    segment_id: segment_id\n                };\n            }\n        });\n    }\n    return beziers;\n}\n\nfunction new_beziers_for_reactions(reactions) {\n    /** Return an object containing beziers for the reactions object.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. *escher.Map.reactions*.\n\n     */\n    var beziers = {};\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        var these = new_beziers_for_segments(reaction.segments, reaction_id);\n        utils.extend(beziers, these);\n    }\n    return beziers;\n}\n","/**\n * @license\n *\n * complete.ly 1.0.0\n * MIT Licensing\n * Copyright (c) 2013 Lorenzo Puccetti\n *\n * This Software shall be used for doing good things, not bad things.\n *\n * Modified by Zachary King (c) 2014.\n *\n **/\n\nvar utils = require('./utils');\n\nmodule.exports = function(container, config) {\n    document = utils.get_document(container);\n    window = utils.get_window(container);\n\n    config = config || {};\n    config.fontSize =                       config.fontSize   || '13px';\n    config.fontFamily =                     config.fontFamily || 'sans-serif';\n    config.promptInnerHTML =                config.promptInnerHTML || '';\n    config.color =                          config.color || '#333';\n    config.hintColor =                      config.hintColor || '#aaa';\n    config.backgroundColor =                config.backgroundColor || '#fff';\n    config.dropDownBorderColor =            config.dropDownBorderColor || '#aaa';\n    config.dropDownZIndex =                 config.dropDownZIndex || '100'; // to ensure we are in front of everybody\n    config.dropDownOnHoverBackgroundColor = config.dropDownOnHoverBackgroundColor || '#ddd';\n\n    var txtInput = document.createElement('input');\n    txtInput.type ='text';\n    txtInput.spellcheck = false;\n    txtInput.style.fontSize =        config.fontSize;\n    txtInput.style.fontFamily =      config.fontFamily;\n    txtInput.style.color =           config.color;\n    txtInput.style.backgroundColor = config.backgroundColor;\n    txtInput.style.width = '100%';\n    txtInput.style.outline = '0';\n    txtInput.style.border =  '0';\n    txtInput.style.margin =  '0';\n    txtInput.style.padding = '0';\n\n    var txtHint = txtInput.cloneNode();\n    txtHint.disabled='';\n    txtHint.style.position = 'absolute';\n    txtHint.style.top =  '0';\n    txtHint.style.left = '0';\n    txtHint.style.borderColor = 'transparent';\n    txtHint.style.boxShadow =   'none';\n    txtHint.style.color = config.hintColor;\n\n    txtInput.style.backgroundColor ='transparent';\n    txtInput.style.verticalAlign = 'top';\n    txtInput.style.position = 'relative';\n\n    var wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.outline = '0';\n    wrapper.style.border =  '0';\n    wrapper.style.margin =  '0';\n    wrapper.style.padding = '0';\n\n    var prompt = document.createElement('div');\n    prompt.style.position = 'absolute';\n    prompt.style.outline = '0';\n    prompt.style.margin =  '0';\n    prompt.style.padding = '0';\n    prompt.style.border =  '0';\n    prompt.style.fontSize =   config.fontSize;\n    prompt.style.fontFamily = config.fontFamily;\n    prompt.style.color =           config.color;\n    prompt.style.backgroundColor = config.backgroundColor;\n    prompt.style.top = '0';\n    prompt.style.left = '0';\n    prompt.style.overflow = 'hidden';\n    prompt.innerHTML = config.promptInnerHTML;\n    prompt.style.background = 'transparent';\n    if (document.body === undefined) {\n        throw 'document.body is undefined. The library was wired up incorrectly.';\n    }\n    document.body.appendChild(prompt);\n    var w = prompt.getBoundingClientRect().right; // works out the width of the prompt.\n    wrapper.appendChild(prompt);\n    prompt.style.visibility = 'visible';\n    prompt.style.left = '-'+w+'px';\n    wrapper.style.marginLeft= w+'px';\n\n    wrapper.appendChild(txtHint);\n    wrapper.appendChild(txtInput);\n\n    var dropDown = document.createElement('div');\n    dropDown.style.position = 'absolute';\n    dropDown.style.visibility = 'hidden';\n    dropDown.style.outline = '0';\n    dropDown.style.margin =  '0';\n    dropDown.style.padding = '0';\n    dropDown.style.textAlign = 'left';\n    dropDown.style.fontSize =   config.fontSize;\n    dropDown.style.fontFamily = config.fontFamily;\n    dropDown.style.backgroundColor = config.backgroundColor;\n    dropDown.style.zIndex = config.dropDownZIndex;\n    dropDown.style.cursor = 'default';\n    dropDown.style.borderStyle = 'solid';\n    dropDown.style.borderWidth = '1px';\n    dropDown.style.borderColor = config.dropDownBorderColor;\n    dropDown.style.overflowX= 'hidden';\n    dropDown.style.whiteSpace = 'pre';\n    dropDown.style.overflowY = 'scroll';\n\n    var createDropDownController = function(elem) {\n        var rows = [];\n        var ix = 0;\n        var oldIndex = -1;\n        var current_row = null;\n\n        var onMouseOver =  function() { this.style.outline = '1px solid #ddd'; }\n        var onMouseOut =   function() { this.style.outline = '0'; }\n        var onDblClick =  function(e) {\n            e.preventDefault();\n            p.onmouseselection(this.id);\n        }\n\n        var p = {\n            hide :  function() { elem.style.visibility = 'hidden'; },\n            refresh : function(token, options) {\n                elem.style.visibility = 'hidden';\n                ix = 0;\n                elem.innerHTML ='';\n                var vph = (window.innerHeight || document.documentElement.clientHeight);\n                var rect = elem.parentNode.getBoundingClientRect();\n                var distanceToTop = rect.top - 6;                        // heuristic give 6px\n                var distanceToBottom = vph - rect.bottom -6;  // distance from the browser border.\n\n                rows = [];\n                for (var i = 0; i < options.length; i++) {\n                    // ignore case\n                    var found = options[i].matches.filter(function(match) {\n                        return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                    });\n                    if (found.length == 0)\n                        continue;\n                    var divRow = document.createElement('div');\n                    divRow.style.color = config.color;\n                    divRow.onmouseover = onMouseOver;\n                    divRow.onmouseout =  onMouseOut;\n                    // prevent selection for double click\n                    divRow.onmousedown = function(e) { e.preventDefault(); };\n                    divRow.ondblclick = onDblClick;\n                    divRow.__hint = found[0];\n                    divRow.id = options[i].id;\n                    divRow.innerHTML = options[i].html;\n                    rows.push(divRow);\n                    elem.appendChild(divRow);\n                    if (rows.length >= rs.display_limit)\n                        break;\n                }\n                if (rows.length===0) {\n                    return; // nothing to show.\n                }\n                p.highlight(0);\n\n                // Heuristic (only when the distance to the to top is 4\n                // times more than distance to the bottom\n                if (distanceToTop > distanceToBottom*3) {\n                    // we display the dropDown on the top of the input text\n                    elem.style.maxHeight =  distanceToTop+'px';\n                    elem.style.top ='';\n                    elem.style.bottom ='100%';\n                } else {\n                    elem.style.top = '100%';\n                    elem.style.bottom = '';\n                    elem.style.maxHeight =  distanceToBottom+'px';\n                }\n                elem.style.visibility = 'visible';\n            },\n            highlight : function(index) {\n                if (oldIndex !=-1 && rows[oldIndex]) {\n                    rows[oldIndex].style.backgroundColor = config.backgroundColor;\n                }\n                rows[index].style.backgroundColor = config.dropDownOnHoverBackgroundColor; // <-- should be config\n                oldIndex = index;\n                current_row = rows[index];\n            },\n            // moves the selection either up or down (unless it's not\n            // possible) step is either +1 or -1.\n            move : function(step) {\n                // nothing to move if there is no dropDown. (this happens if\n                // the user hits escape and then down or up)\n                if (elem.style.visibility === 'hidden')\n                    return '';\n                // No circular scrolling\n                if (ix+step === -1 || ix+step === rows.length)\n                    return rows[ix].__hint;\n                ix+=step;\n                p.highlight(ix);\n                return rows[ix].__hint;\n            },\n            onmouseselection : function() {},\n            get_current_row: function () {\n                return current_row;\n            }\n        };\n        return p;\n    }\n\n    var dropDownController = createDropDownController(dropDown);\n\n    dropDownController.onmouseselection = function(id) {\n        rs.onEnter(id)\n        rs.input.focus();\n    }\n\n    wrapper.appendChild(dropDown);\n    container.appendChild(wrapper);\n\n    var spacer,\n        // This will contain the leftSide part of the textfield (the bit that\n        // was already autocompleted)\n        leftSide;\n\n    function calculateWidthForText(text) {\n        if (spacer === undefined) { // on first call only.\n            spacer = document.createElement('span');\n            spacer.style.visibility = 'hidden';\n            spacer.style.position = 'fixed';\n            spacer.style.outline = '0';\n            spacer.style.margin =  '0';\n            spacer.style.padding = '0';\n            spacer.style.border =  '0';\n            spacer.style.left = '0';\n            spacer.style.whiteSpace = 'pre';\n            spacer.style.fontSize =   config.fontSize;\n            spacer.style.fontFamily = config.fontFamily;\n            spacer.style.fontWeight = 'normal';\n            document.body.appendChild(spacer);\n        }\n\n        // Used to encode an HTML string into a plain text.\n        // taken from http://stackoverflow.com/questions/1219860/javascript-jquery-html-encoding\n        spacer.innerHTML = String(text).replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        return spacer.getBoundingClientRect().right;\n    }\n\n\n    var rs = {\n        get_hint :    function(x) { return x; },\n        display_limit: 100,\n        onArrowDown : function() {},               // defaults to no action.\n        onArrowUp :   function() {},               // defaults to no action.\n        onEnter :     function() {},               // defaults to no action.\n        onTab :       function() {},               // defaults to no action.\n        onChange:     function() { rs.repaint() }, // defaults to repainting.\n        startFrom:    0,\n        options:      [],\n\n        // Only to allow easy access to the HTML elements to the final user\n        // (possibly for minor customizations)\n        wrapper : wrapper,\n        input :  txtInput,\n        hint  :  txtHint,\n        dropDown :  dropDown,\n\n        prompt : prompt,\n        setText : function(text) {\n            txtHint.value = text;\n            txtInput.value = text;\n        },\n        getText : function() {\n            return txtInput.value;\n        },\n        hideDropDown : function() {\n            dropDownController.hide();\n        },\n        repaint : function() {\n            var text = txtInput.value;\n            var startFrom =  rs.startFrom;\n            var options =    rs.options;\n            var optionsLength = options.length;\n\n            // breaking text in leftSide and token.\n            var token = text.substring(startFrom);\n            leftSide =  text.substring(0,startFrom);\n\n            // updating the hint.\n            txtHint.value ='';\n            for (var i = 0; i < optionsLength; i++) {\n                var found = options[i].matches.filter(function(match) {\n                    return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                });\n                if (found.length == 0)\n                    continue;\n                txtHint.value = rs.get_hint(found[0]);\n                break;\n            }\n\n            // moving the dropDown and refreshing it.\n            dropDown.style.left = calculateWidthForText(leftSide)+'px';\n            dropDownController.refresh(token, rs.options);\n        }\n    };\n\n    var registerOnTextChangeOldValue;\n\n    // Register a callback function to detect changes to the content of the\n    // input-type-text.  Those changes are typically followed by user's\n    // action: a key-stroke event but sometimes it might be a mouse click.\n    var registerOnTextChange = function(txt, callback) {\n        registerOnTextChangeOldValue = txt.value;\n        var handler = function() {\n            var value = txt.value;\n            if (registerOnTextChangeOldValue !== value) {\n                registerOnTextChangeOldValue = value;\n                callback(value);\n            }\n        };\n\n        // For user's actions, we listen to both input events and key up events\n        // It appears that input events are not enough so we defensively listen to key up events too.\n        // source: http://help.dottoro.com/ljhxklln.php\n        //\n        // The cost of listening to three sources should be negligible as the handler will invoke callback function\n        // only if the text.value was effectively changed.\n        txt.addEventListener(\"input\",  handler, false);\n        txt.addEventListener('keyup',  handler, false);\n        txt.addEventListener('change', handler, false);\n    };\n\n\n    registerOnTextChange(txtInput,function(text) { // note the function needs to be wrapped as API-users will define their onChange\n        rs.onChange(text);\n        rs.repaint();\n    });\n\n\n    var keyDownHandler = function(e) {\n        e = e || window.event;\n        var keyCode = e.keyCode;\n\n        if (keyCode == 33) { return; } // page up (do nothing)\n        if (keyCode == 34) { return; } // page down (do nothing);\n\n        // right,  end, tab  (autocomplete triggered)\n        if (keyCode == 39 || keyCode == 35 || keyCode == 9) {\n            // for tabs we need to ensure that we override the default\n            // behaviour: move to the next focusable HTML-element\n            if (keyCode == 9) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (txtHint.value.length == 0) {\n                    // tab was called with no action.\n                    rs.onTab();\n                }\n            }\n            // if there is a hint\n            if (txtHint.value.length > 0) {\n                txtInput.value = txtHint.value;\n                var hasTextChanged = registerOnTextChangeOldValue != txtInput.value\n                // avoid dropDown to appear again\n                registerOnTextChangeOldValue = txtInput.value;\n                // for example imagine the array contains the following\n                // words: bee, beef, beetroot. User has hit enter to get\n                // 'bee' it would be prompted with the dropDown again (as\n                // beef and beetroot also match)\n                if (hasTextChanged) {\n                    // force it.\n                    rs.onChange(txtInput.value);\n                }\n            }\n            return;\n        }\n\n        if (keyCode == 13) { // enter\n            // get current\n            var id = dropDownController.get_current_row().id;\n            rs.onEnter(id);\n            return;\n        }\n\n        if (keyCode == 40) { // down\n            var m = dropDownController.move(+1);\n            if (m == '') { rs.onArrowDown(); }\n            txtHint.value = rs.get_hint(m);\n            return;\n        }\n\n        if (keyCode == 38 ) { // up\n            var m = dropDownController.move(-1);\n            if (m == '') { rs.onArrowUp(); }\n            txtHint.value = rs.get_hint(m);\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        // it's important to reset the txtHint on key down. Think: user\n        // presses a letter (e.g. 'x') and never releases. You get\n        // (xxxxxxxxxxxxxxxxx) and you would see still the hint. Reset the\n        // txtHint. (it might be updated onKeyUp).\n        txtHint.value ='';\n    };\n\n    txtInput.addEventListener(\"keydown\",  keyDownHandler, false);\n    return rs;\n};\n","/** data_styles */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    import_and_check: import_and_check,\n    text_for_data: text_for_data,\n    float_for_data: float_for_data,\n    reverse_flux_for_data: reverse_flux_for_data,\n    gene_string_for_data: gene_string_for_data,\n    csv_converter: csv_converter,\n    genes_for_gene_reaction_rule: genes_for_gene_reaction_rule,\n    evaluate_gene_reaction_rule: evaluate_gene_reaction_rule,\n    replace_gene_in_rule: replace_gene_in_rule,\n    apply_reaction_data_to_reactions: apply_reaction_data_to_reactions,\n    apply_metabolite_data_to_nodes: apply_metabolite_data_to_nodes,\n    apply_gene_data_to_reactions: apply_gene_data_to_reactions\n};\n\n\n// globals\nvar RETURN_ARG = function(x) { return x; },\n    ESCAPE_REG = /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\n    EMPTY_LINES = /\\n\\s*\\n/g,\n    TRAILING_NEWLINE = /\\n\\s*(\\)*)\\s*$/,\n    AND_OR = /([\\(\\) ])(?:and|or)([\\)\\( ])/ig,\n    ALL_PARENS = /[\\(\\)]/g,\n    // capture an expression surrounded by whitespace and a set of parentheses\n    EXCESS_PARENS = /\\(\\s*(\\S+)\\s*\\)/g,\n    OR = /\\s+or\\s+/i,\n    AND = /\\s+and\\s+/i,\n    // find ORs\n    OR_EXPRESSION = /(^|\\()(\\s*-?[0-9.]+\\s+(?:or\\s+-?[0-9.]+\\s*)+)(\\)|$)/ig,\n    // find ANDS, respecting order of operations (and before or)\n    AND_EXPRESSION = /(^|\\(|or\\s)(\\s*-?[0-9.]+\\s+(?:and\\s+-?[0-9.]+\\s*)+)(\\sor|\\)|$)/ig;\n\n\nfunction import_and_check(data, name, all_reactions) {\n    /** Convert imported data to a style that can be applied to reactions\n     and nodes.\n\n     Arguments\n     ---------\n\n     data: The data object.\n\n     name: Either 'reaction_data', 'metabolite_data', or 'gene_data'\n\n     all_reactions: Required for name == 'gene_data'. Must include all\n     GPRs for the map and model.\n\n     */\n\n    // check arguments\n    if (data===null)\n        return null;\n    if (['reaction_data', 'metabolite_data', 'gene_data'].indexOf(name) == -1)\n        throw new Error('Invalid name argument: ' + name);\n\n    // make array\n    if (!(data instanceof Array)) {\n        data = [data];\n    }\n    // check data\n    var check = function() {\n        if (data===null)\n            return null;\n        if (data.length==1)\n            return null;\n        if (data.length==2)\n            return null;\n        return console.warn('Bad data style: ' + name);\n    };\n    check();\n    data = utils.array_to_object(data);\n\n    if (name == 'gene_data') {\n        if (all_reactions === undefined)\n            throw new Error('Must pass all_reactions argument for gene_data');\n        data = align_gene_data_to_reactions(data, all_reactions);\n    }\n\n    return data;\n\n    // definitions\n    function align_gene_data_to_reactions(data, reactions) {\n        var aligned = {},\n            null_val = [null];\n        // make an array of nulls as the default\n        for (var first_gene_id in data) {\n            null_val = data[first_gene_id].map(function() { return null; });\n            break;\n        }\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id],\n                bigg_id = reaction.bigg_id,\n                this_gene_data = {};\n\n            reaction.genes.forEach(function(gene) {\n                // check both gene id and gene name\n                ['bigg_id', 'name'].forEach(function(kind) {\n                    var d = data[gene[kind]] || utils.clone(null_val);\n                    // merger with existing data if present\n                    var existing_d = this_gene_data[gene.bigg_id];\n                    if (typeof existing_d === 'undefined') {\n                        this_gene_data[gene.bigg_id] = d;\n                    } else {\n                        for (var i = 0; i < d.length; i++) {\n                            var pnt = d[i];\n                            if (pnt !== null)\n                                existing_d[i] = pnt;\n                        }\n                    }\n                });\n            });\n            aligned[bigg_id] = this_gene_data;\n        }\n        return aligned;\n    }\n}\n\nfunction float_for_data(d, styles, compare_style) {\n    // all null\n    if (d === null)\n        return null;\n\n    // absolute value\n    var take_abs = (styles.indexOf('abs') != -1);\n\n    if (d.length==1) { // 1 set\n        // 1 null\n        var f = _parse_float_or_null(d[0]);\n        if (f === null)\n            return null;\n        return abs(f, take_abs);\n    } else if (d.length==2) { // 2 sets\n        // 2 null\n        var fs = d.map(_parse_float_or_null);\n        if (fs[0] === null || fs[1] === null)\n            return null;\n\n        if (compare_style == 'diff') {\n            return diff(fs[0], fs[1], take_abs);\n        } else if (compare_style == 'fold') {\n            return check_finite(fold(fs[0], fs[1], take_abs));\n        }\n        else if (compare_style == 'log2_fold') {\n            return check_finite(log2_fold(fs[0], fs[1], take_abs));\n        }\n    } else {\n        throw new Error('Data array must be of length 1 or 2');\n    }\n    throw new Error('Bad data compare_style: ' + compare_style);\n\n    // definitions\n    function check_finite(x) {\n        return isFinite(x) ? x : null;\n    }\n    function abs(x, take_abs) {\n        return take_abs ? Math.abs(x) : x;\n    }\n    function diff(x, y, take_abs) {\n        if (take_abs) return Math.abs(y - x);\n        else return y - x;\n    }\n    function fold(x, y, take_abs) {\n        if (x == 0 || y == 0) return null;\n        var fold = (y >= x ? y / x : - x / y);\n        return take_abs ? Math.abs(fold) : fold;\n    }\n    function log2_fold(x, y, take_abs) {\n        if (x == 0) return null;\n        if (y / x < 0) return null;\n        var log = Math.log(y / x) / Math.log(2);\n        return take_abs ? Math.abs(log) : log;\n    }\n}\n\nfunction reverse_flux_for_data(d) {\n    if (d === null || d[0] === null)\n        return false;\n    return (d[0] < 0);\n}\n\nfunction gene_string_for_data(rule, gene_values, genes, styles,\n                              identifiers_on_map, compare_style) {\n    /** Add gene values to the gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: (string) The gene reaction rule.\n\n     gene_values: The values.\n\n     genes: An array of objects specifying the gene bigg_id and name.\n\n     styles: The reaction styles.\n\n     identifiers_on_map: The type of identifiers ('bigg_id' or 'name').\n\n     compare_style: The comparison style.\n\n     Returns\n     -------\n\n     A list of objects with {\n     bigg_id: The bigg ID.\n     name: The name.\n     text: The new string with formatted data values.\n     }\n\n     The text elements should each appear on a new line.\n\n     */\n\n    var out_text = rule,\n        no_data = (gene_values === null),\n        // keep track of bigg_id's or names to remove repeats\n        genes_found = {};\n\n\n    genes.forEach(function(g_obj) {\n        // get id or name\n        var name = g_obj[identifiers_on_map];\n        if (typeof name === 'undefined')\n            throw new Error('Bad value for identifiers_on_map: ' + identifiers_on_map);\n        // remove repeats that may have found their way into genes object\n        if (typeof genes_found[name] !== 'undefined')\n            return;\n        genes_found[name] = true;\n        // generate the string\n        if (no_data) {\n            out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + '\\n'));\n        } else {\n            var d = gene_values[g_obj.bigg_id];\n            if (typeof d === 'undefined') d = null;\n            var f = float_for_data(d, styles, compare_style),\n                format = (f === null ? RETURN_ARG : d3.format('.3g'));\n            if (d.length==1) {\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + ' (' + null_or_d(d[0], format) + ')\\n'));\n            }\n            else if (d.length==2) {\n                // check if they are all text\n                var new_str,\n                    any_num = d.reduce(function(c, x) {\n                        return c || _parse_float_or_null(x) !== null;\n                    }, false);\n                if (any_num) {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ': ' +\n                               null_or_d(f, format) +\n                               ')\\n');\n                } else {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ')\\n');\n                }\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, new_str);\n            }\n        }\n    });\n    // remove emtpy lines\n    out_text = out_text.replace(EMPTY_LINES, '\\n')\n    // remove trailing newline (with or without parens)\n        .replace(TRAILING_NEWLINE, '$1');\n\n    // split by newlines\n    var result = out_text.split('\\n').map(function(text) {\n        for (var i = 0, l = genes.length; i < l; i++) {\n            var gene = genes[i];\n            if (text.indexOf(gene[identifiers_on_map]) != -1) {\n                return { bigg_id: gene.bigg_id, name: gene.name, text: text };\n                continue;\n            }\n        }\n        // not found, then none\n        return { bigg_id: null, name: null, text: text };\n    });\n    return result;\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? 'nd' : format(d);\n    }\n}\n\nfunction text_for_data(d, f) {\n    if (d === null)\n        return null_or_d(null);\n    if (d.length == 1) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g'));\n        return null_or_d(d[0], format);\n    }\n    if (d.length == 2) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g')),\n            t = null_or_d(d[0], format);\n        t += ', ' + null_or_d(d[1], format);\n        t += ': ' + null_or_d(f, format);\n        return t;\n    }\n    return '';\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? '(nd)' : format(d);\n    }\n}\n\nfunction csv_converter(csv_rows) {\n    /** Convert data from a csv file to json-style data.\n\n     File must include a header row.\n\n     */\n    // count rows\n    var c = csv_rows[0].length,\n        converted = [];\n    if (c < 2 || c > 3)\n        throw new Error('CSV file must have 2 or 3 columns');\n    // set up rows\n    for (var i = 1; i < c; i++) {\n        converted[i - 1] = {};\n    }\n    // fill\n    csv_rows.slice(1).forEach(function(row) {\n        for (var i = 1, l = row.length; i < l; i++) {\n            converted[i - 1][row[0]] = row[i];\n        }\n    });\n    return converted;\n}\n\nfunction genes_for_gene_reaction_rule(rule) {\n    /** Find unique genes in gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     Returns\n     -------\n\n     An array of gene strings.\n\n     */\n    var genes = rule\n    // remove ANDs and ORs, surrounded by space or parentheses\n            .replace(AND_OR, '$1$2')\n    // remove parentheses\n            .replace(ALL_PARENS, '')\n    // split on whitespace\n            .split(' ')\n            .filter(function(x) { return x != ''; });\n    // unique strings\n    return utils.unique_strings_array(genes);\n}\n\nfunction evaluate_gene_reaction_rule(rule, gene_values, and_method_in_gene_reaction_rule) {\n    /** Return a value given the rule and gene_values object.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     gene_values: Object with gene_ids for keys and numbers for values.\n\n     and_method_in_gene_reaction_rule: Either 'mean' or 'min'.\n\n     */\n\n    var null_val = [null],\n        l = 1;\n    // make an array of nulls as the default\n    for (var gene_id in gene_values) {\n        null_val = gene_values[gene_id].map(function() { return null; });\n        l = null_val.length;\n        break;\n    }\n\n    if (rule == '') return utils.clone(null_val);\n\n    // for each element in the arrays\n    var out = [];\n    for (var i = 0; i < l; i++) {\n        // get the rule\n        var curr_val = rule;\n\n        // put all the numbers into the expression\n        var all_null = true;\n        for (var gene_id in gene_values) {\n            var f = _parse_float_or_null(gene_values[gene_id][i]);\n            if (f === null) {\n                f = 0;\n            } else {\n                all_null = false;\n            }\n            curr_val = replace_gene_in_rule(curr_val, gene_id, f);\n        }\n        if (all_null) {\n            out.push(null);\n            continue;\n        }\n\n        // recursively evaluate\n        while (true) {\n            // arithemtic expressions\n            var new_curr_val = curr_val;\n\n            // take out excessive parentheses\n            new_curr_val = new_curr_val.replace(EXCESS_PARENS, ' $1 ');\n\n            // or's\n            new_curr_val = new_curr_val.replace(OR_EXPRESSION, function(match, p1, p2, p3) {\n                // sum\n                var nums = p2.split(OR).map(parseFloat),\n                    sum = nums.reduce(function(a, b) { return a + b;});\n                return p1 + sum + p3;\n            });\n            // and's\n            new_curr_val = new_curr_val.replace(AND_EXPRESSION, function(match, p1, p2, p3) {\n                // find min\n                var nums = p2.split(AND).map(parseFloat),\n                    val = (and_method_in_gene_reaction_rule == 'min' ?\n                           Math.min.apply(null, nums) :\n                           nums.reduce(function(a, b) { return a + b; }) / nums.length);\n                return p1 + val + p3;\n            });\n            // break if there is no change\n            if (new_curr_val == curr_val)\n                break;\n            curr_val = new_curr_val;\n        }\n        // strict test for number\n        var num = Number(curr_val);\n        if (isNaN(num)) {\n            console.warn('Could not evaluate ' + rule);\n            out.push(null);\n        } else {\n            out.push(num);\n        }\n    }\n    return out;\n}\n\nfunction replace_gene_in_rule(rule, gene_id, val) {\n    // get the escaped string, with surrounding space or parentheses\n    var space_or_par_start = '(^|[\\\\\\s\\\\\\(\\\\\\)])',\n        space_or_par_finish = '([\\\\\\s\\\\\\(\\\\\\)]|$)',\n        escaped = space_or_par_start + escape_reg_exp(gene_id) + space_or_par_finish;\n    return rule.replace(new RegExp(escaped, 'g'),  '$1' + val + '$2');\n\n    // definitions\n    function escape_reg_exp(string) {\n        return string.replace(ESCAPE_REG, \"\\\\$1\");\n    }\n}\n\nfunction apply_reaction_data_to_reactions(reactions, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var reaction_id, reaction, segment_id, segment;\n\n    if (data === null) {\n        for (reaction_id in reactions) {\n            reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            for (segment_id in reaction.segments) {\n                segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // apply the datasets to the reactions\n    for (reaction_id in reactions) {\n        reaction = reactions[reaction_id];\n        // check bigg_id and name\n        var d = data[reaction.bigg_id] || data[reaction.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        reaction.gene_string = null;\n        // apply to the segments\n        for (segment_id in reaction.segments) {\n            segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n    }\n    return true;\n}\n\nfunction apply_metabolite_data_to_nodes(nodes, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var node_id;\n\n    if (data === null) {\n        for (node_id in nodes) {\n            nodes[node_id].data = null;\n            nodes[node_id].data_string = '';\n        }\n        return false;\n    }\n\n    // grab the data\n    for (node_id in nodes) {\n        var node = nodes[node_id];\n            // check bigg_id and name\n        var d = data[node.bigg_id] || data[node.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            s = text_for_data(d, f);\n        node.data = f;\n        node.data_string = s;\n    }\n    return true;\n}\n\nfunction apply_gene_data_to_reactions(reactions, gene_data_obj, styles, identifiers_on_map,\n                                      compare_style, and_method_in_gene_reaction_rule) {\n    /** Returns true if data is present\n\n     Arguments\n     ---------\n\n     reactions: The reactions to update.\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { gene_id: value } }\n\n     styles:  Gene styles array.\n\n     identifiers_on_map:\n\n     compare_style:\n\n     and_method_in_gene_reaction_rule:\n\n     */\n\n    if (gene_data_obj === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            reaction.reverse_flux = false;\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // get the null val\n    var null_val = [null];\n    // make an array of nulls as the default\n    for (var reaction_id in gene_data_obj) {\n        for (var gene_id in gene_data_obj[reaction_id]) {\n            null_val = gene_data_obj[reaction_id][gene_id]\n                .map(function() { return null; });\n            break;\n        }\n        break;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            rule = reaction.gene_reaction_rule;\n        // find the data\n        var d, gene_values,\n            r_data = gene_data_obj[reaction.bigg_id];\n        if (typeof r_data !== 'undefined') {\n            gene_values = r_data;\n            d = evaluate_gene_reaction_rule(rule, gene_values,\n                                            and_method_in_gene_reaction_rule);\n        } else {\n            gene_values = {};\n            d = utils.clone(null_val);\n        }\n        var f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n        // always update the gene string\n        reaction.gene_string = gene_string_for_data(rule,\n                                                    gene_values,\n                                                    reaction.genes,\n                                                    styles,\n                                                    identifiers_on_map,\n                                                    compare_style);\n    }\n    return true;\n}\n\nfunction _parse_float_or_null(x) {\n    // strict number casting\n    var f = Number(x);\n    // check for null and '', which haven't been caught yet\n    return (isNaN(f) || parseFloat(x) != f) ? null : f;\n}\n","module.exports = {'version': '1.3.1-dev', builder_embed: 'svg.escher-svg .gene-label,svg.escher-svg .label{text-rendering:optimizelegibility;cursor:default}svg.escher-svg #mouse-node{fill:none}svg.escher-svg #canvas{stroke:#ccc;stroke-width:7px;fill:#fff}svg.escher-svg .resize-rect{fill:#000;opacity:0;stroke:none}svg.escher-svg .label{font-family:sans-serif;font-style:italic;font-weight:700;font-size:8px;fill:#000;stroke:none}svg.escher-svg .reaction-label{font-size:30px;fill:#202078;text-rendering:optimizelegibility}svg.escher-svg .node-label{font-size:20px}svg.escher-svg .gene-label{font-size:18px;fill:#202078}svg.escher-svg .text-label .label,svg.escher-svg .text-label-input{font-size:50px}svg.escher-svg .node-circle{stroke-width:2px}svg.escher-svg .midmarker-circle,svg.escher-svg .multimarker-circle{fill:#fff;fill-opacity:.2;stroke:#323232}svg.escher-svg g.selected .node-circle{stroke-width:6px;stroke:#1471c7}svg.escher-svg g.selected .label{fill:#1471c7}svg.escher-svg .metabolite-circle{stroke:#a24510;fill:#e0865b}svg.escher-svg g.selected .metabolite-circle{stroke:#050200}svg.escher-svg .segment{stroke:#334E75;stroke-width:10px;fill:none}svg.escher-svg .arrowhead{fill:#334E75}svg.escher-svg .stoichiometry-label-rect{fill:#fff;opacity:.5}svg.escher-svg .stoichiometry-label{fill:#334E75;font-size:17px}svg.escher-svg .membrane{fill:none;stroke:#fb0}svg.escher-svg .brush .extent{fill-opacity:.1;fill:#000;stroke:#fff;shape-rendering:crispEdges}svg.escher-svg #brush-container .background{fill:none}svg.escher-svg .bezier-circle{fill:#fff}svg.escher-svg .bezier-circle.b1{stroke:red}svg.escher-svg .bezier-circle.b2{stroke:#00f}svg.escher-svg .connect-line{stroke:#c8c8c8}svg.escher-svg .direction-arrow{stroke:#000;stroke-width:1px;fill:#fff;opacity:.3}svg.escher-svg .start-reaction-cursor{cursor:pointer}svg.escher-svg .start-reaction-target{stroke:#646464;fill:none;opacity:.5}svg.escher-svg .rotation-center-line{stroke:red;stroke-width:5px}svg.escher-svg .highlight{fill:#D97000;text-decoration:underline}svg.escher-svg .cursor-grab{cursor:grab;cursor:-webkit-grab}svg.escher-svg .cursor-grabbing{cursor:grabbing;cursor:-webkit-grabbing}svg.escher-svg .edit-text-cursor{cursor:text}'};","/**\n* @license\n*\n* Escher\n* Author: Zachary King\n*\n* The MIT License (MIT)\n*\n* This software is Copyright © 2015 The Regents of the University of\n* California. All Rights Reserved.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n* THE SOFTWARE.\n*/\n\nmodule.exports = {\n    version: require('./inline').version,\n    Builder: require('./Builder'),\n    Map: require('./Map'),\n    Behavior: require('./Behavior'),\n    KeyManager: require('./KeyManager'),\n    DataMenu: require('./DataMenu'),\n    UndoStack: require('./UndoStack'),\n    CobraModel: require('./CobraModel'),\n    utils: require('./utils'),\n    SearchIndex: require('./SearchIndex'),\n    Settings: require('./Settings'),\n    data_styles: require('./data_styles'),\n    ui: require('./ui'),\n    static: require('./static'),\n    ZoomContainer: require('./ZoomContainer')\n};\n","/** static */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    load_map_model_from_url: load_map_model_from_url\n};\n\n\nfunction load_map_model_from_url(map_download_url, model_download_url,\n                                 local_index, options, callback) {\n    var opt = utils.parse_url_components(window, options),\n        to_load = [],\n        load_map = function (fn) { fn(null); },\n        load_model = function (fn) { fn(null); };\n    if (opt.map_name) {\n        var map_path = _get_path('map', opt.map_name,\n                                 local_index, map_download_url);\n        if (map_path) {\n            load_map = function (fn) {\n                d3.json(map_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    if (opt.model_name) {\n        var model_path = _get_path('model', opt.model_name,\n                                   local_index, model_download_url);\n        if (model_path) {\n            load_model = function (fn) {\n                d3.json(model_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    load_map(function(map_data) {\n        load_model(function(model_data) {\n            callback(map_data, model_data, options);\n        });\n    });\n}\n\nfunction _get_path(kind, name, index, url) {\n    var match = index[kind+'s'].filter(function(x) {\n        return x[kind+'_name'] == name;\n    });\n    if (match.length == 0)\n        throw new Error('Bad ' + kind + ' ' + name);\n    return (url + encodeURIComponent(match[0].organism) +\n            '/' + encodeURIComponent(match[0][kind+'_name'])) + '.json';\n}\n","/** ui */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nmodule.exports = {\n    individual_button: individual_button,\n    radio_button_group: radio_button_group,\n    button_group: button_group,\n    dropdown_menu: dropdown_menu,\n    set_json_input_button: set_json_input_button,\n    set_json_or_csv_input_button: set_json_or_csv_input_button\n};\n\n\nfunction individual_button(s, button) {\n    var b = s.append('button'),\n        c = b.append('span');\n    if ('id' in button) b.attr('id', button.id);\n    if ('classes' in button) b.attr('class', button.classes);\n\n    // text\n    if ('key_text' in button && 'text' in button && button.key_text !== null)\n        c.text(button.text + button.key_text);\n    else if ('text' in button)\n        c.text(button.text);\n\n    if ('icon' in button) c.classed(button.icon, true);\n    if ('key' in button) set_button(b, button.key);\n    // if ('tooltip' in button)\n    b.attr('title', button.tooltip);\n}\n\nfunction radio_button_group(s) {\n    var s2 = s.append('li')\n            .attr('class', 'btn-group-vertical')\n            .attr('data-toggle', 'buttons');\n    return { button: function(button) {\n        var b = s2.append(\"label\")\n                .attr(\"class\", \"btn btn-default\");\n        b.append('input').attr('type', 'radio');\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction button_group(s) {\n    var s2 = s.attr('class', 'btn-group-vertical');\n    return { button: function(button) {\n        var b = s2.append(\"button\")\n                .attr(\"class\", \"btn btn-default\");\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction dropdown_menu(s, name, pull_right) {\n    if (pull_right === undefined) pull_right = false;\n    var s2 = s.append('li')\n            .attr('class', 'dropdown');\n    s2.append('button').text(name+\" \")\n        .attr('class', 'btn btn-link btn-sm dropdown-button')\n        .attr('data-toggle', 'dropdown')\n        .append('b').attr('class', 'caret');\n    var ul = s2.append('ul')\n            .attr('class', 'dropdown-menu')\n            .classed('pull-right', pull_right)\n            .attr('role', 'menu')\n            .attr('aria-labelledby', 'dLabel');\n    return {\n        dropdown: s2,\n        button: function(button) {\n            var li = ul.append(\"li\")\n                    .attr('role', 'presentation')\n                    .datum(button),\n                link = li.append(\"a\")\n                    .attr('href', '#'),\n                icon = link.append('span')\n                    .attr('class', 'dropdown-button-icon'),\n                text = link.append('span')\n                    .attr('class', 'dropdown-button-text');\n            if ('id' in button) li.attr('id', button.id);\n\n            // text\n            if ('key_text' in button && 'text' in button && button.key_text !== null)\n                text.text(\" \"+button.text + button.key_text);\n            else if ('text' in button)\n                text.text(\" \"+button.text);\n\n            if ('icon' in button) icon.classed(button.icon, true);\n\n            if ('key' in button) {\n                set_button(link, button.key);\n            } else if ('input' in button) {\n                var input = button.input,\n                    out = (input.accept_csv ?\n                           set_json_or_csv_input_button(link, li, input.pre_fn,\n                                                        input.fn, input.failure_fn) :\n                           set_json_input_button(link, li, input.pre_fn,\n                                                 input.fn, input.failure_fn));\n                if ('assign' in input && 'key' in input)\n                    input.assign[input.key] = out;\n            }\n            return this;\n        },\n        divider: function() {\n            ul.append(\"li\")\n                .attr('role', 'presentation')\n                .attr('class', 'divider');\n            return this;\n        }\n    };\n}\n\nfunction set_button(b, key) {\n    b.on(\"click\", function() {\n        key.fn.call(key.target);\n    });\n}\n\nfunction set_json_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json(this.files[0],\n                                function(e, d) {\n                                    post_fn(e, d);\n                                    this.value = \"\";\n                                }.bind(this),\n                                pre_fn,\n                                failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n\nfunction set_json_or_csv_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json_or_csv(this.files[0],\n                                       data_styles.csv_converter,\n                                       function(e, d) {\n                                           post_fn(e, d);\n                                           this.value = \"\";\n                                       }.bind(this),\n                                       pre_fn,\n                                       failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n","/* global d3, Blob, XMLSerializer */\n\nvar vkbeautify = require('vkbeautify');\nvar saveAs = require('filesaver');\n\n\nmodule.exports = {\n    set_options: set_options,\n    remove_child_nodes: remove_child_nodes,\n    load_css: load_css,\n    load_files: load_files,\n    load_the_file: load_the_file,\n    make_class: make_class,\n    setup_defs: setup_defs,\n    draw_an_object: draw_an_object,\n    draw_a_nested_object: draw_a_nested_object,\n    make_array: make_array,\n    make_array_ref: make_array_ref,\n    compare_arrays: compare_arrays,\n    array_to_object: array_to_object,\n    clone: clone,\n    extend: extend,\n    unique_concat: unique_concat,\n    unique_strings_array: unique_strings_array,\n    debounce: debounce,\n    object_slice_for_ids: object_slice_for_ids,\n    object_slice_for_ids_ref: object_slice_for_ids_ref,\n    c_plus_c: c_plus_c,\n    c_minus_c: c_minus_c,\n    c_times_scalar: c_times_scalar,\n    download_json: download_json,\n    load_json: load_json,\n    load_json_or_csv: load_json_or_csv,\n    download_svg: download_svg,\n    rotate_coords_recursive: rotate_coords_recursive,\n    rotate_coords: rotate_coords,\n    get_angle: get_angle,\n    to_degrees: to_degrees,\n    angle_for_event: angle_for_event,\n    distance: distance,\n    check_undefined: check_undefined,\n    compartmentalize: compartmentalize,\n    decompartmentalize: decompartmentalize,\n    mean: mean,\n    median: median,\n    quartiles: quartiles,\n    random_characters: random_characters,\n    generate_map_id: generate_map_id,\n    check_for_parent_tag: check_for_parent_tag,\n    name_to_url: name_to_url,\n    parse_url_components: parse_url_components,\n    get_document: get_document,\n    get_window: get_window,\n    d3_transform_catch: d3_transform_catch\n};\n\n\n// definitions\nfunction _check_filesaver() {\n    /** Check if Blob is available, and alert if it is not. */\n    try {\n        var isFileSaverSupported = !!new Blob();\n    } catch (e) {\n        alert(\"Blob not supported\");\n    }\n}\n\nfunction set_options(options, defaults, must_be_float) {\n    if (options === undefined || options === null)\n        return defaults;\n    var i = -1,\n        out = {};\n    for (var key in defaults) {\n        var has_key = ((key in options) &&\n                       (options[key] !== null) &&\n                       (options[key] !== undefined));\n        var val = (has_key ? options[key] : defaults[key]);\n        if (must_be_float && key in must_be_float) {\n            val = parseFloat(val);\n            if (isNaN(val)) {\n                if (has_key) {\n                    console.warn('Bad float for option ' + key);\n                    val = parseFloat(defaults[key]);\n                    if (isNaN(val)) {\n                        console.warn('Bad float for default ' + key);\n                        val = null;\n                    }\n                } else {\n                    console.warn('Bad float for default ' + key);\n                    val = null;\n                }\n            }\n        }\n        out[key] = val;\n    }\n    return out;\n}\n\n\nfunction remove_child_nodes(selection) {\n    /** Removes all child nodes from a d3 selection\n\n     */\n    var node = selection.node();\n    while (node.hasChildNodes()) {\n        node.removeChild(node.lastChild);\n    }\n}\n\n\nfunction load_css(css_path, callback) {\n    var css = \"\";\n    if (css_path) {\n        d3.text(css_path, function(error, text) {\n            if (error) {\n                console.warn(error);\n            }\n            css = text;\n            callback(css);\n        });\n    }\n    return false;\n};\nfunction update() {\n    return 'omg yes';\n};\nfunction load_the_file(t, file, callback, value) {\n    // if the value is specified, don't even need to do the ajax query\n    if (value) {\n        if (file) console.warn('File ' + file + ' overridden by value.');\n        callback.call(t, null, value, file);\n        return;\n    }\n    if (!file) {\n        callback.call(t, \"No filename\", null, file);\n        return;\n    }\n    if (ends_with(file, 'json'))\n        d3.json(file, function(e, d) { callback(e, d, file); });\n    else if (ends_with(file, 'css'))\n        d3.text(file, function(e, d) { callback(e, d, file); });\n    else\n        callback.call(t, \"Unrecognized file type\", null, file);\n    return;\n\n    // definitions\n    function ends_with(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n}\nfunction load_files(t, files_to_load, final_callback) {\n    // load multiple files asynchronously\n    // Takes a list of objects: { file: a_filename.json, callback: a_callback_fn }\n    var i = -1, remaining = files_to_load.length, callbacks = {};\n    while (++i < files_to_load.length) {\n        var this_file = files_to_load[i].file;\n        callbacks[this_file] = files_to_load[i].callback;\n        load_the_file(t,\n                      this_file,\n                      function(e, d, file) {\n                          callbacks[file].call(t, e, d);\n                          if (!--remaining) final_callback.call(t);\n                      },\n                      files_to_load[i].value);\n    }\n}\n// makeClass - By Hubert Kauker (MIT Licensed)\n// original by John Resig (MIT Licensed).\n// http://stackoverflow.com/questions/7892884/simple-class-instantiation\nfunction make_class(){\n    var isInternal;\n    var constructor = function(args){\n        if ( this instanceof constructor ) {\n            if ( typeof this.init == \"function\" ) {\n                this.init.apply( this, isInternal ? args : arguments );\n            }\n        } else {\n            isInternal = true;\n            var instance = new constructor( arguments );\n            isInternal = false;\n            return instance;\n        }\n    };\n    return constructor;\n}\n\nfunction setup_defs(svg, style) {\n    // add stylesheet\n    svg.select(\"defs\").remove();\n    var defs = svg.append(\"defs\");\n    // make sure the defs is the first node\n    var node = defs.node();\n    node.parentNode.insertBefore(node, node.parentNode.firstChild);\n    defs.append(\"style\")\n        .attr(\"type\", \"text/css\")\n        .text(style);\n    return defs;\n}\n\nfunction draw_an_object(container_sel, parent_node_selector, children_selector,\n                        object, id_key, create_function, update_function,\n                        exit_function) {\n    /** Run through the d3 data binding steps for an object. Also checks to\n     make sure none of the values in the *object* are undefined, and\n     ignores those.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     parent_node_selector: A selector string for a subselection of\n     container_sel.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object: An object to bind to the selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var draw_object = {};\n    for (var id in object) {\n        if (object[id] === undefined) {\n            console.warn('Undefined value for id ' + id + ' in object. Ignoring.');\n        } else {\n            draw_object[id] = object[id];\n        }\n    }\n\n    var sel = container_sel.select(parent_node_selector)\n            .selectAll(children_selector)\n            .data(make_array_ref(draw_object, id_key),\n                  function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction draw_a_nested_object(container_sel, children_selector, object_data_key,\n                              id_key, create_function, update_function,\n                              exit_function) {\n    /** Run through the d3 data binding steps for an object that is nested\n     within another element with d3 data.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object_data_key: A key for the parent object containing data for the\n     new selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var sel = container_sel.selectAll(children_selector)\n            .data(function(d) {\n                return make_array_ref(d[object_data_key], id_key);\n            }, function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction make_array(obj, id_key) { // is this super slow?\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = clone(obj[key]);\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction make_array_ref(obj, id_key) {\n    /** Turn the object into an array, but only by reference. Faster than\n     make_array.\n\n     */\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = obj[key];\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction compare_arrays(a1, a2) {\n    /** Compares two simple (not-nested) arrays.\n\n     */\n    if (!a1 || !a2) return false;\n    if (a1.length != a2.length) return false;\n    for (var i = 0, l=a1.length; i < l; i++) {\n        if (a1[i] != a2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction array_to_object(arr) {\n    /** Convert an array of objects to an object with all keys and values\n     that are arrays of the same length as arr. Fills in spaces with null.\n\n     For example, [ { a: 1 }, { b: 2 }] becomes { a: [1, null], b: [null, 2] }.\n\n     */\n    // new object\n    var obj = {};\n    // for each element of the array\n    for (var i = 0, l = arr.length; i < l; i++) {\n        var column = arr[i],\n            keys = Object.keys(column);\n        for (var k = 0, nk = keys.length; k < nk; k++) {\n            var id = keys[k];\n            if (!(id in obj)) {\n                var n = [];\n                // fill spaces with null\n                for (var j = 0; j < l; j++) {\n                    n[j] = null;\n                }\n                n[i] = column[id];\n                obj[id] = n;\n            } else {\n                obj[id][i] = column[id];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction clone(obj) {\n    // Handles the array and object types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n    // Handle Array\n    if (obj instanceof Array) {\n        var copy = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        var copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nfunction extend(obj1, obj2, overwrite) {\n    /** Extends obj1 with keys/values from obj2. Performs the extension\n     cautiously, and does not override attributes, unless the overwrite\n     argument is true.\n\n     Arguments\n     ---------\n\n     obj1: Object to extend\n\n     obj2: Object with which to extend.\n\n     overwrite: (Optional, Default false) Overwrite attributes in obj1.\n\n     */\n\n    if (overwrite === undefined)\n        overwrite = false;\n\n    for (var attrname in obj2) {\n        if (!(attrname in obj1) || overwrite) // UNIT TEST This\n            obj1[attrname] = obj2[attrname];\n        else\n            throw new Error('Attribute ' + attrname + ' already in object.');\n    }\n}\n\nfunction unique_concat(arrays) {\n    var new_array = [];\n    arrays.forEach(function (a) {\n        a.forEach(function(x) {\n            if (new_array.indexOf(x) < 0)\n                new_array.push(x);\n        });\n    });\n    return new_array;\n}\n\nfunction unique_strings_array(arr) {\n    /** Return unique values in array of strings.\n\n     http://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n     */\n    var a = [];\n    for (var i = 0, l = arr.length; i < l; i++)\n        if (a.indexOf(arr[i]) === -1)\n            a.push(arr[i]);\n    return a;\n}\n\nfunction debounce(func, wait, immediate) {\n    /** Returns a function, that, as long as it continues to be invoked, will\n     not be triggered.\n\n     The function will be called after it stops being called for N\n     milliseconds. If `immediate` is passed, trigger the function on the leading\n     edge, instead of the trailing.\n\n     */\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nfunction object_slice_for_ids(obj, ids) {\n    /** Return a copy of the object with just the given ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = clone(obj[ids[i]]);\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction object_slice_for_ids_ref(obj, ids) {\n    /** Return a reference of the object with just the given ids. Faster\n     than object_slice_for_ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = obj[ids[i]];\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction c_plus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x + coords2.x,\n             \"y\": coords1.y + coords2.y };\n}\nfunction c_minus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x - coords2.x,\n             \"y\": coords1.y - coords2.y };\n}\n\nfunction c_times_scalar(coords, scalar) {\n    return { \"x\": coords.x * scalar,\n             \"y\": coords.y * scalar };\n}\n\nfunction download_json(json, name) {\n    /** Download json file in a blob.\n\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    var j = JSON.stringify(json),\n        blob = new Blob([j], {type: \"application/json\"});\n    saveAs(blob, name + '.json');\n}\n\nfunction load_json(f, callback, pre_fn, failure_fn) {\n    /** Try to load the file as JSON.\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     */\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n\n    var reader = new window.FileReader();\n    // Closure to capture the file information.\n    reader.onload = function(event) {\n        var result = event.target.result,\n            data;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            // if it failed, return the error\n            callback(e, null);\n            return;\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n}\n\nfunction load_json_or_csv(f, csv_converter, callback, pre_fn, failure_fn,\n                          debug_event) {\n    /** Try to load the file as JSON or CSV (JSON first).\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     csv_converter: A function to convert the CSV output to equivalent JSON.\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     debug_event: (optional) An event, with a string at event.target.result, to\n     load as though it was the contents of a loaded file.\n\n     */\n\n    // Capture the file information.\n    var onload_function = function(event) {\n        var result = event.target.result,\n            data, errors;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            errors = 'JSON error: ' + e;\n\n            // try csv\n            try {\n                data = csv_converter(d3.csv.parseRows(result));\n            } catch (e) {\n                // if both failed, return the errors\n                callback(errors + '\\nCSV error: ' + e, null);\n                return;\n            }\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (debug_event !== undefined && debug_event !== null) {\n        console.warn('Debugging load_json_or_csv');\n        return onload_function(debug_event);\n    }\n\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n    var reader = new window.FileReader();\n\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.onload = onload_function;\n    reader.readAsText(f);\n}\n\nfunction download_svg(name, svg_sel, do_beautify) {\n    /** Download an svg file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    // make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n \\\n            <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n \\\n        \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' + xml;\n\n    // save\n    var blob = new Blob([xml], {type: \"image/svg+xml\"});\n    saveAs(blob, name + '.svg');\n};\n\nfunction rotate_coords_recursive(coords_array, angle, center) {\n    var rot = function(c) { return rotate_coords(c, angle, center); };\n    return coords_array.map(rot);\n}\n\nfunction rotate_coords(c, angle, center) {\n    /** Calculates displacement { x: dx, y: dy } based on rotating point c around\n     center with angle.\n\n     */\n    var dx = Math.cos(-angle) * (c.x - center.x) +\n            Math.sin(-angle) * (c.y - center.y)\n            + center.x - c.x,\n        dy = - Math.sin(-angle) * (c.x - center.x) +\n            Math.cos(-angle) * (c.y - center.y)\n            + center.y - c.y;\n    return { x: dx, y: dy };\n}\n\nfunction get_angle(coords) {\n    /* Takes an array of 2 coordinate objects {\"x\": 1, \"y\": 1}\n     *\n     * Returns angle between 0 and 2PI.\n     */\n    var denominator = coords[1].x - coords[0].x,\n        numerator = coords[1].y - coords[0].y;\n    if (denominator==0 && numerator >= 0) return Math.PI/2;\n    else if (denominator==0 && numerator < 0) return 3*Math.PI/2;\n    else if (denominator >= 0 && numerator >= 0) return Math.atan(numerator/denominator);\n    else if (denominator >= 0) return (Math.atan(numerator/denominator) + 2*Math.PI);\n    else return (Math.atan(numerator/denominator) + Math.PI);\n}\n\nfunction to_degrees(radians) { return radians*180/Math.PI; }\n\nfunction angle_for_event(displacement, point, center) {\n    var gamma =  Math.atan2((point.x - center.x), (center.y - point.y)),\n        beta = Math.atan2((point.x - center.x + displacement.x),\n                          (center.y - point.y - displacement.y)),\n        angle = beta - gamma;\n    return angle;\n}\n\nfunction distance(start, end) { return Math.sqrt(Math.pow(end.y-start.y, 2) + Math.pow(end.x-start.x, 2)); }\n\nfunction check_undefined(args, names) {\n    /** Report an error if any of the arguments are undefined.\n\n     Call by passing in *arguments* from any function and an array of\n     argument names.\n\n     */\n    names.map(function(name, i) {\n        if (args[i]===undefined) {\n            console.error('Argument is undefined: '+String(names[i]));\n        }\n    });\n}\n\nfunction compartmentalize(bigg_id, compartment_id) {\n    return bigg_id + '_' + compartment_id;\n}\n\n\n// definitions\nfunction decompartmentalize(id) {\n    /** Convert ids to bigg_id and compartment_id.\n\n     */\n    var out = no_compartment(id);\n    if (out===null) out = [id, null];\n    return out;\n\n    // definitions\n    function no_compartment(id) {\n        /** Returns an array of [bigg_id, compartment id].\n\n         Matches compartment ids with length 1 or 2.\n\n         Return null if no match is found.\n\n         */\n        var reg = /(.*)_([a-z0-9]{1,2})$/,\n            result = reg.exec(id);\n        if (result===null) return null;\n        return result.slice(1,3);\n    }\n}\n\nfunction mean(array) {\n    var sum = array.reduce(function(a, b) { return a + b; });\n    var avg = sum / array.length;\n    return avg;\n}\n\nfunction median(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if(array.length % 2 == 1)\n        return array[half];\n    else\n        return (array[half-1] + array[half]) / 2.0;\n}\n\nfunction quartiles(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if (array.length == 1)\n        return [ array[0], array[0], array[0] ];\n    else if (array.length % 2 == 1)\n        return [ median(array.slice(0, half)),\n                 array[half],\n                 median(array.slice(half + 1)) ];\n    else\n        return [ median(array.slice(0, half)),\n                 (array[half-1] + array[half]) / 2.0,\n                 median(array.slice(half)) ];\n}\n\nfunction random_characters(num) {\n    // Thanks to @csharptest.net\n    // http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript\n    var text = '',\n        possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < num; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    return text;\n}\n\nfunction generate_map_id() {\n    return random_characters(12);\n}\n\nfunction check_for_parent_tag(el, tag) {\n    /** Check that the selection has the given parent tag.\n\n     el: A d3 selection or node.\n\n     tag: A tag name (case insensitive)\n\n     */\n    // make sure it is a node\n    if (el instanceof Array)\n        el = el.node();\n    while (el.parentNode !== null) {\n        el = el.parentNode;\n        if (el.tagName === undefined) continue;\n        if (el.tagName.toLowerCase() === tag.toLowerCase())\n            return true;\n    }\n    return false;\n}\n\nfunction name_to_url(name, download_url) {\n    /** Convert model or map name to url.\n\n     Arguments\n     ---------\n\n     name: The short name, e.g. e_coli.iJO1366.central_metabolism.\n\n     download_url: The url to prepend (optional).\n\n     */\n\n    if (download_url !== undefined && download_url !== null) {\n        // strip download_url\n        download_url = download_url.replace(/^\\/|\\/$/g, '');\n        name = [download_url, name].join('/');\n    }\n    // strip final path\n    return name.replace(/^\\/|\\/$/g, '') + '.json';\n}\n\nfunction parse_url_components(the_window, options) {\n    /** Parse the URL and return options based on the URL arguments.\n\n     Arguments\n     ---------\n\n     the_window: A reference to the global window.\n\n     options: (optional) an existing options object to which new options\n     will be added. Overwrites existing arguments in options.\n\n     Adapted from http://stackoverflow.com/questions/979975/how-to-get-the-value-from-url-parameter\n\n     */\n    if (options===undefined) options = {};\n\n    var query = the_window.location.search.substring(1),\n        vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\"),\n            val = decodeURIComponent(pair[1]);\n        // deal with array options\n        if (pair[0].indexOf('[]') == pair[0].length - 2) {\n            var o = pair[0].replace('[]', '');\n            if (!(o in options))\n                options[o] = [];\n            options[o].push(val);\n        } else {\n            options[pair[0]] = val;\n        }\n    }\n    return options;\n}\n\n\nfunction get_document(node) {\n    /** Get the document for the node */\n    return node.ownerDocument;\n}\n\n\nfunction get_window(node) {\n    /** Get the window for the node */\n    return get_document(node).defaultView;\n}\n\n\nfunction d3_transform_catch(transform_attr) {\n    /** Return the result of d3.transform, but catch errors if we are in\n     node/jsdom. See also https://github.com/mbostock/d3/issues/1545\n\n     */\n    try {\n        return d3.transform(transform_attr);\n    } catch (err) {\n        console.error('Cannot run d3.transform, probably becuase this is a node/jsdom test. ' +\n                      'Returning a tranform object for testing.');\n        return { translate: [0, 0], rotate: 0 };\n    }\n}\n","(function() {\nvar _slice = Array.prototype.slice;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.82';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var afters = [];\n  var aftersIndex = 0;\n  var flushed = {};\n\n  var afterTransaction = function (f) {\n    if (rootEvent) {\n      return afters.push(f);\n    } else {\n      return f();\n    }\n  };\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        while (aftersIndex < afters.length) {\n          var after = afters[aftersIndex];\n          aftersIndex++;\n          after();\n        }\n        aftersIndex = 0;\n        afters = [];\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(_toConsumableArray(args)));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, _toConsumableArray(args));\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, _toConsumableArray(applied.concat(args)));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(_toConsumableArray(args)));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, _toConsumableArray(args));\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, _toConsumableArray(values));\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  for (var index = 0, stream; index < streams.length; index++) {\n    stream = streams[index];\n    if (!isObservable(stream)) {\n      streams[index] = Bacon.constant(stream);\n    }\n  }\n  if (streams.length) {\n    var sources = (function () {\n      var result = [];\n      for (var i = 0, s; i < streams.length; i++) {\n        s = streams[i];\n        result.push(new Source(s, true));\n      }\n      return result;\n    })();\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  for (var _len10 = arguments.length, streams = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    streams[_key10] = arguments[_key10];\n  }\n\n  return Bacon.combineAsArray(streams.slice(0, streams.length - 1)).onValues(streams[streams.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(_toConsumableArray(streams)));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, _toConsumableArray(values));\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return (unsubLeft(), unsubRight());\n    };\n  });\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n    args[_key12 - 1] = arguments[_key12];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      return this.sink(nextEvent(value));\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, _toConsumableArray(values).concat([callback]));\n    }]);\n\n    for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len15 = arguments.length, args = Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n    args[_key15 - 1] = arguments[_key15];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      return setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      return setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      return ctxStack.push(newContext);\n    };\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      return funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      var popContext = function (ctxStack) {\n        return ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      return funcs.push(popContext);\n    } else {\n      return funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    return _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  compileTemplate(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), Bacon.combineAsArray(streams).map(combinator));\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delay = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"delay\", [delay]), this.flatMap(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.delay(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounce = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounce\", [delay]), this.flatMapLatest(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.debounce(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounceImmediate = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounceImmediate\", [delay]), this.flatMapFirst(function (value) {\n    return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n  }));\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    args[_key16] = arguments[_key16];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n    args[_key17 - 1] = arguments[_key17];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len18 = arguments.length, args = Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n      args[_key18 - 1] = arguments[_key18];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    return new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      var push = function () {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var maxRetries = options.maxRetries || retries;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function () {\n    function valueStream() {\n      return source().endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && retries > 0)) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: maxRetries - retries\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retries = retries - 1;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len21 = arguments.length, args = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    args[_key21 - 1] = arguments[_key21];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"throttle\", [delay]), this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n\n      return function (i) {\n        return f.apply(undefined, _toConsumableArray([i].concat(args)));\n      };\n    };\n  }\n\n  for (var _len22 = arguments.length, patterns = Array(_len22 > 1 ? _len22 - 1 : 0), _key22 = 1; _key22 < _len22; _key22++) {\n    patterns[_key22 - 1] = arguments[_key22];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len24 = arguments.length, args = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n    args[_key24] = arguments[_key24];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len25 = arguments.length, xs = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n      xs[_key25] = arguments[_key25];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len26 = arguments.length, args = Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n    args[_key26] = arguments[_key26];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","'use strict';\n\n(function() {\n\tvar diacritics = [\n\t\t{'base':'A', 'letters':'\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'},\n\t\t{'base':'AA','letters':'\\uA732'},\n\t\t{'base':'AE','letters':'\\u00C6\\u01FC\\u01E2'},\n\t\t{'base':'AO','letters':'\\uA734'},\n\t\t{'base':'AU','letters':'\\uA736'},\n\t\t{'base':'AV','letters':'\\uA738\\uA73A'},\n\t\t{'base':'AY','letters':'\\uA73C'},\n\t\t{'base':'B', 'letters':'\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'},\n\t\t{'base':'C', 'letters':'\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'},\n\t\t{'base':'D', 'letters':'\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'},\n\t\t{'base':'DZ','letters':'\\u01F1\\u01C4'},\n\t\t{'base':'Dz','letters':'\\u01F2\\u01C5'},\n\t\t{'base':'E', 'letters':'\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'},\n\t\t{'base':'F', 'letters':'\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'},\n\t\t{'base':'G', 'letters':'\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'},\n\t\t{'base':'H', 'letters':'\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'},\n\t\t{'base':'I', 'letters':'\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'},\n\t\t{'base':'J', 'letters':'\\u004A\\u24BF\\uFF2A\\u0134\\u0248'},\n\t\t{'base':'K', 'letters':'\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'},\n\t\t{'base':'L', 'letters':'\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'},\n\t\t{'base':'LJ','letters':'\\u01C7'},\n\t\t{'base':'Lj','letters':'\\u01C8'},\n\t\t{'base':'M', 'letters':'\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'},\n\t\t{'base':'N', 'letters':'\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'},\n\t\t{'base':'NJ','letters':'\\u01CA'},\n\t\t{'base':'Nj','letters':'\\u01CB'},\n\t\t{'base':'O', 'letters':'\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'},\n\t\t{'base':'OI','letters':'\\u01A2'},\n\t\t{'base':'OO','letters':'\\uA74E'},\n\t\t{'base':'OU','letters':'\\u0222'},\n\t\t{'base':'P', 'letters':'\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'},\n\t\t{'base':'Q', 'letters':'\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'},\n\t\t{'base':'R', 'letters':'\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'},\n\t\t{'base':'S', 'letters':'\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'},\n\t\t{'base':'T', 'letters':'\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'},\n\t\t{'base':'TZ','letters':'\\uA728'},\n\t\t{'base':'U', 'letters':'\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'},\n\t\t{'base':'V', 'letters':'\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'},\n\t\t{'base':'VY','letters':'\\uA760'},\n\t\t{'base':'W', 'letters':'\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'},\n\t\t{'base':'X', 'letters':'\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'},\n\t\t{'base':'Y', 'letters':'\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'},\n\t\t{'base':'Z', 'letters':'\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'},\n\t\t{'base':'a', 'letters':'\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'},\n\t\t{'base':'aa','letters':'\\uA733'},\n\t\t{'base':'ae','letters':'\\u00E6\\u01FD\\u01E3'},\n\t\t{'base':'ao','letters':'\\uA735'},\n\t\t{'base':'au','letters':'\\uA737'},\n\t\t{'base':'av','letters':'\\uA739\\uA73B'},\n\t\t{'base':'ay','letters':'\\uA73D'},\n\t\t{'base':'b', 'letters':'\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'},\n\t\t{'base':'c', 'letters':'\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'},\n\t\t{'base':'d', 'letters':'\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'},\n\t\t{'base':'dz','letters':'\\u01F3\\u01C6'},\n\t\t{'base':'e', 'letters':'\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'},\n\t\t{'base':'f', 'letters':'\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'},\n\t\t{'base':'g', 'letters':'\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'},\n\t\t{'base':'h', 'letters':'\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'},\n\t\t{'base':'hv','letters':'\\u0195'},\n\t\t{'base':'i', 'letters':'\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'},\n\t\t{'base':'j', 'letters':'\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'},\n\t\t{'base':'k', 'letters':'\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'},\n\t\t{'base':'l', 'letters':'\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'},\n\t\t{'base':'lj','letters':'\\u01C9'},\n\t\t{'base':'m', 'letters':'\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'},\n\t\t{'base':'n', 'letters':'\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'},\n\t\t{'base':'nj','letters':'\\u01CC'},\n\t\t{'base':'o', 'letters':'\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'},\n\t\t{'base':'oi','letters':'\\u01A3'},\n\t\t{'base':'ou','letters':'\\u0223'},\n\t\t{'base':'oo','letters':'\\uA74F'},\n\t\t{'base':'p','letters':'\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'},\n\t\t{'base':'q','letters':'\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'},\n\t\t{'base':'r','letters':'\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'},\n\t\t{'base':'s','letters':'\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'},\n\t\t{'base':'t','letters':'\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'},\n\t\t{'base':'tz','letters':'\\uA729'},\n\t\t{'base':'u','letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'},\n\t\t{'base':'v','letters':'\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'},\n\t\t{'base':'vy','letters':'\\uA761'},\n\t\t{'base':'w','letters':'\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'},\n\t\t{'base':'x','letters':'\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'},\n\t\t{'base':'y','letters':'\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'},\n\t\t{'base':'z','letters':'\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'}\n\t];\n\n\n\tvar diaMap = {};\n\tfor (var i=0; i < diacritics.length; i++){\n\t\tvar letters = diacritics[i].letters.split('');\n\t\tfor (var j=0; j < letters.length ; j++){\n\t\t\tdiaMap[letters[j]] = diacritics[i].base;\n\t\t}\n\t}\n\n\tvar removeDiacritics = function (str) {\n\t\tvar letters = str.split('');\n\t\tvar newStr = '';\n\t\tfor(var i=0; i< letters.length; i++) {\n\t\t\tnewStr += letters[i] in diaMap ? diaMap[letters[i]] : letters[i];\n\t\t}\n\t\treturn newStr;\n\t};\n\n\tvar transformName = function (name, space) {\n\t\tvar n = removeDiacritics( name );\n\t\tn = n.replace(/ /g, space);\n\t\tn = n.replace(/[^A-Za-z0-9-_\\.]/g, '');\n\t\tn = n.replace(/\\.+/g, '.');\n\t\tn = n.replace(/-+/g, '-');\n\t\tn = n.replace(/_+/g, '_');\n\t\treturn n;\n\t};\n\n\t/**\n\t * Get safe name for files\n\t * @param  {String} name string to transform\n\t * @param  {String} space    replace for spaces. Optional, low dash ('_') by default\n\t * @return {String}          safe name\n\t */\n\tvar safename = function (name, space) {\n\t\tspace = space || '_';\n\t\treturn transformName( name, space);\n\t};\n\n\t/**\n\t * Safe name with low dash '_'.\n\t *\n\t * Same as `safename('your file name.txt', '_');`\n\t */\n\tsafename.low = function (name) {\n\t\treturn transformName( name, '_');\n\t};\n\n\t/**\n\t * Safe name with middle dash '-'.\n\t *\n\t * Same as `safename('your file name.txt', '-');`\n\t */\n\tsafename.middle = function (name) {\n\t\treturn transformName( name, '-');\n\t};\n\n\t/**\n\t * Safe name with dots '.'.\n\t *\n\t * Same as `safename('your file name.txt', '.');`\n\t */\n\tsafename.dot = function (name) {\n\t\treturn transformName( name, '.');\n\t};\n\n\t// node.js\n\tif((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n\t\tmodule.exports = safename;\n\t// browser\n\t} else if(typeof window !== 'undefined') {\n\t\twindow.safename = safename;\n\t}\n})();","'use strict';\n\nvar mkdirp = require('mkdirp'),\n\tfs = require('fs'),\n\tchangeName = require('./changename'),\n\tpath = require('path'),\n\tsafename = require('safename');\n\n\n\n/*!\n * Rename file and launch callback\n * @param  {String}   oldPath  path to file to move\n * @param  {String}   newPath  path of destination\n * @param  {Function} callback signature: null, {filename, filepath}\n */\nvar move = function (oldPath, newPath, callback) {\n\tfs.rename( oldPath, newPath, function (err) {\n\t\tif (err) {\n\t\t\tcallback( err );\n\t\t} else {\n\t\t\tcallback( null, {\n\t\t\t\tfilename: newPath.split( '/' ).pop(),\n\t\t\t\tfilepath: newPath\n\t\t\t});\n\t\t}\n\t});\n};\n\n/*!\n * return safename file path\n * @param  {String} route target to analyze\n * @return {String}       route analyze\n */\nvar checkSafeName = function (route) {\n\tif ( this.safenames ) {\n\t\troute = route.split( '/' );\n\t\tvar name = route.pop();\n\t\tname = safename( name );\n\t\troute.push( name );\n\t\treturn route.join( '/' );\n\t} else {\n\t\treturn route;\n\t}\n};\n\n\n/*!\n * check if params are right\n */\nvar checker = function (folder, oldPath, newPath, callback) {\n\tvar cb = callback || function () {};\n\tif (typeof newPath === 'function') {\n\t\tcb = newPath;\n\t\tnewPath = oldPath.split( '/' ).pop();\n\t} else if (!newPath) {\n\t\tnewPath = oldPath.split( '/' ).pop();\n\t}\n\t// check for valid arguments\n\tif (folder && oldPath && (typeof folder === 'string') && (typeof oldPath === 'string') && fs.existsSync( oldPath )) {\n\t\t// check for existing folder\n\t\tif (this.folders[folder]) {\n\t\t\t// set target\n\t\t\tnewPath = path.resolve( this.folders[folder], newPath );\n\t\t\tnewPath = checkSafeName.call( this, newPath );\n\t\t\treturn {newPath: newPath, callback: cb};\n\t\t} else {\n\t\t\tcb( 'invalid folder' );\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tcb( 'folder or origin not valid' );\n\t\treturn false;\n\t}\n};\n\n\n/**\n * Filesaver constructor.\n *\n * Options:\n *\n * - folders: *Object*\t\twith folder routes\n * - safename: *Boolean*\tuse safe name for files\n *\n * Example:\n *\n * ```js\n * var folders = {\n *     images: './images',\n *     books: './books'\n * }\n * var filesaver = new Filesaver({\n *     folders: folders,\n *     safenames: true\n * });\n * ```\n *\n * @param {Object} options folders and safenames\n */\n\nvar Filesaver = function (options) {\n\tvar x;\n\toptions = options || {};\n\t// Store folders\n\tthis.folders = options.folders || {};\n\tthis.safenames = options.safenames || false;\n\n\t// check for existing folders\n\tfor (x in this.folders) {\n\t\tif (!fs.existsSync( this.folders[x] )){\n\t\t\t// create folder if not exists\n\t\t\tmkdirp( this.folders[x] );\n\t\t}\n\t}\n};\n\n\n/**\n * Add a new folder\n *\n * Example:\n *\n * ```js\n * filesaver.folder( 'documents', './path/to/folder', function () {\n *     // do something\n * });\n * ```\n * @param  {String}   name       name of new folder collection\n * @param  {Object}   path       path to its folder\n * @param  {Function} callback   no signature callback\n */\n\nFilesaver.prototype.folder = function (name, folderPath, callback) {\n\tvar _this = this;\n\n\tfs.exists( folderPath, function (exists) {\n\t\tif (!exists) {\n\t\t\t// create folder if not exists\n\t\t\tmkdirp( folderPath );\n\t\t}\n\t\t// add folder\n\t\t_this.folders[name] = folderPath;\n\t\t// optional callback\n\t\tif (callback){\n\t\t\tcallback();\n\t\t}\n\t});\n};\n\n\n/**\n * Write or overwrite file\n *\n * Example:\n *\n * ```js\n * filesaver.put( 'images', '/path/temp/file.jpg', 'photo.jpg', function (err, data) {\n *     console.log( data );\n *     // ->\n *     // filename: 'photo.jpg',\n *     // filepath: './images/photo.jpg'\n *     });\n * ```\n *\n * @param  {String}   folder     name of parent folder folder\n * @param  {String}   oldPath     path to origin file\n * @param  {String}   newPath     name of newPath file\n * @param  {Function} callback   Signature: error, data. Data signature:{filename, filepath}\n */\n\nFilesaver.prototype.put = function (folder, oldPath, newPath, callback) {\n\tvar data = checker.call( this, folder, oldPath, newPath, callback );\n\n\tif (data) {\n\t\tmove( oldPath, data.newPath, data.callback );\n\t}\n};\n\n\n\n/**\n * Write a file without overwriting anyone.\n *\n * Example:\n *\n * ```js\n * filesaver.add( 'images', '/path/temp/file.jpg', 'photo_1.jpg', function (err, data) {\n *     console.log( data );\n *     // ->\n *     // filename: 'photo_2.jpg',\n *     // filepath: './images/photo_2.jpg'\n *     });\n * ```\n *\n * @param  {String}   folder     name of parent folder folder\n * @param  {String}   oldPath     path to origin file\n * @param  {String}   newPath     Optional: name of newPath file\n * @param  {Function} callback   Optional: Signature: error, data. Data signature:{filename, filepath}\n */\n\nFilesaver.prototype.add = function (folder, oldPath, newPath, callback) {\n\n\tvar data = checker.call( this, folder, oldPath, newPath, callback );\n\n\tif (data) {\n\t\tnewPath = changeName( data.newPath );\n\t\tmove( oldPath, newPath, data.callback );\n\t}\n};\n\n\nmodule.exports = Filesaver;\n","var fs = require('fs');\n\n/*!\n * add 1 to suffix number\n * @param {String} name file basename\n * @return {String} name with addition\n */\nvar addOne = function (name) {\n\tname = name.split( '_' );\n\tvar n = Number( name.pop()) + 1;\n\tname.push( n );\n\treturn name.join( '_' );\n};\n\n\n/*!\n * detect if name has a number suffix after '_'\n * (example: picture_5.jpg)\n * @param  {string}  name basename to examinate\n * @return {Boolean|Number}      if has not suffix: false, else: name with addition\n */\nvar hasSuffix = function (name) {\n\tvar suffix, splitted;\n\tif (!isNaN( name )) {\n\t\treturn false;\n\t} else {\n\t\tsplitted = name.split( '_' );\n\t\tif (splitted.length > 1) {\n\t\t\tsuffix = splitted.pop();\n\t\t\tif (isNaN( suffix )) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn addOne( name );\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\n/*!\n * separate basename from file path and send it to rename\n * @param  {String} route route of the file\n * @return {String}       new name\n */\nvar newName = function ( route ) {\n\t// get filename\n\troute = route.split( '/' );\n\tvar filename = route.pop();\n\tvar splitted = filename.split( '.' );\n\tvar basename = splitted.shift();\n\tvar ext = splitted.join( '.' );\n\tvar suffix = hasSuffix( basename );\n\t// check if filefileName has suffix\n\tif (suffix) {\n\t\tbasename = suffix;\n\t} else {\n\t\tbasename = basename + '_1';\n\t}\n\tfilename = [basename, ext].join( '.' );\n\troute.push( filename );\n\treturn route.join('/');\n};\n\n/*!\n * detects if file route exist and send it to rename\n * @param  {String} route file path\n * @return {String}       unique path\n */\nvar finalName = function (route) {\n\tif (fs.existsSync( route )) {\n\t\treturn finalName( newName( route ));\n\t} else {\n\t\treturn route;\n\t}\n};\n\n\n\n\nmodule.exports = finalName;\n",null,"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*  \r\n* Version - 0.99.00.beta \r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n* \r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\t\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(ix=0;ix<100;ix++){\r\n\t\tshift.push(shift[ix]+space); \r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true; \r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) { \r\n\t\t\t\t\tinComment = false; \r\n\t\t\t\t}\r\n\t\t\t} else \r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false; \r\n\t\t\t} else \r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) { \r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) { \r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\t\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\t\t\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\t\t\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\}/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\t\t\t\t\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\t\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\t\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\'/.exec(ar[ix]) )  { \r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\"); \r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\treturn JSON.stringify(JSON.parse(text), null, 0); \r\n\t\t\t\t\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\t\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n\r\n"]}
{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/Behavior.js","js/src/Brush.js","js/src/BuildInput.js","js/src/Builder.js","js/src/CallbackManager.js","js/src/Canvas.js","js/src/CobraModel.js","js/src/DataMenu.js","js/src/DirectionArrow.js","js/src/Draw.js","js/src/KeyManager.js","js/src/Map.js","js/src/PlacedDiv.js","js/src/QuickJump.js","js/src/Scale.js","js/src/ScaleEditor.js","js/src/SearchBar.js","js/src/SearchIndex.js","js/src/Settings.js","js/src/SettingsMenu.js","js/src/TextEditInput.js","js/src/UndoStack.js","js/src/ZoomContainer.js","js/src/build.js","js/src/complete.ly.js","js/src/data_styles.js","js/src/inline.js","js/src/main.js","js/src/static.js","js/src/ui.js","js/src/utils.js","node_modules/baconjs/dist/Bacon.js","node_modules/filesaverjs/FileSaver.js","node_modules/mousetrap/mousetrap.js","node_modules/underscore/underscore.js","node_modules/vkbeautify/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","escher","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","map","undo_stack","empty_behavior","rotation_mode_enabled","rotation_drag","d3","behavior","drag","selectable_mousedown","text_label_mousedown","text_label_click","selectable_drag","node_mouseover","node_mouseout","label_mousedown","label_mouseover","label_mouseout","bezier_drag","bezier_mouseover","bezier_mouseout","reaction_label_drag","node_label_drag","turn_everything_on","toggle_selectable_click","toggle_selectable_drag","toggle_label_drag","toggle_label_mousedown","turn_everything_off","toggle_rotation_mode","on_off","show_center","sel","selectAll","data","enter","append","attr","center","x","y","on","cur","utils","d3_transform_catch","new_loc","event","dx","translate","dy","bind","current","parseFloat","style","hide_center","select","average_location","nodes","xs","ys","node_id","node","undefined","push","mean","selection_node","selection_background","callback_manager","run","selected_nodes","get_selected_nodes","Object","keys","console","warn","selected_node_ids","reactions","beziers","start_fn","d","sourceEvent","stopPropagation","drag_fn","angle","total_angle","updated","build","rotate_nodes","draw_these_nodes","node_ids","draw_these_reactions","reaction_ids","end_fn","undo_fn","these_nodes","forEach","id","redo_fn","center_fn","_get_generic_angular_drag","selectable_click","defaultPrevented","select_selectable","shiftKey","parentNode","classed","toggle_text_label_edit","text_edit_mousedown","selection","coords_a","coords","preventDefault","mouse","_get_selectable_drag","_get_bezier_drag","label_drag","_get_reaction_label_drag","_get_node_label_drag","toggle_bezier_drag","String","turn_off_drag","combine_nodes_and_draw","fixed_node_id","dragged_node_id","dragged_node","fixed_node","updated_segment_objs","connected_segments","segment_obj","segment","reaction_id","segments","segment_id","from_node_id","to_node_id","error","clone","delete_node_data","draw_everything","the_timeout","total_displacement","node_ids_to_drag","text_label_ids_to_drag","move_label","text_label_id","displacement","text_label","text_labels","indexOf","__data__","bigg_id","node_group","setTimeout","insertBefore","firstChild","grabbed","get_selected_node_ids","selected_text_label_ids","get_selected_text_label_ids","c_plus_c","move_node_and_dependents","unique_concat","draw_these_text_labels","node_to_combine_array","each","saved_dragged_node","segment_objs_moved_to_combine","updated_reactions","filter","saved_displacement","saved_node_ids","saved_text_label_ids","saved_reaction_ids","c_times_scalar","clearTimeout","move_bezier","bez","bezier_id","dragging","bezier","draw_these_beziers","_get_generic_drag","reaction","label_x","label_y","relative_to_selection","rel","location","saved_d","saved_location","get_center","angle_for_event","saved_angle","saved_center","Behavior","make_class","prototype","is_enabled","insert_after","brush_sel","insert_before_node","nextSibling","enabled","toggle","selection_brush","setup_selection_brush","remove","selectable_selection","size_and_location","canvas","width","height","brush_fn","svg","brush","scale","identity","domain","shift_key_on","extent","target","sx","sy","clear","Brush","zoom_container","settings","new_sel","placed_div","PlacedDiv","hide","c","completely","backgroundColor","input","text","hide_dropdown","default_angle","direction_arrow","DirectionArrow","set_rotation","setup_map_callbacks","setup_zoom_callbacks","target_coords","set","selected_node","is_active","reload","show_dropdown","hide_target","count","place_at_selected","is_visible","toggle_start_reaction_listener","_","isNull","reload_at_selected","place","set_status","show","clear_escape","key_manager","add_escape_listener","blur","repaint","setText","focus","hideDropDown","deselect_text_labels","select_single_node","set_location","starting_from_scratch","already_drawn","drawn_id","cobra_model","show_names","get_option","allow_duplicates","options","cobra_reactions","cobra_metabolites","metabolites","has_data_on_reactions","selected_m_name","reaction_data","reaction_data_styles","name","bold_mets_in_str","str","mets","replace","RegExp","join","reaction_suggestions","reaction_name","show_r_name","met_bigg_id","html","data_string","matches","show_met_names","met_id","key","show_gene_names","genes","g_obj","reaction_string","CobraModel","build_reaction_string","reversibility","lower_bound","upper_bound","concat","sort_fn","Math","abs","toLowerCase","sort","complete","check_and_build","new_reaction_from_scratch","get_rotation","new_reaction_for_metabolite","onEnter","onChange","start_reaction_listener","deselect_nodes","show_target","BuildInput","map_data","model_data","embedded_css","builder_embed","datum","set_options","menu","scroll_behavior","use_3d_transform","enable_editing","enable_keys","enable_search","fill_screen","zoom_to_element","starting_reaction","never_ask_before_quit","unique_map_id","primary_metabolite_radius","secondary_metabolite_radius","marker_radius","gene_font_size","hide_secondary_metabolites","show_gene_reaction_rules","hide_all_labels","reaction_styles","reaction_compare_style","reaction_scale","type","color","size","reaction_no_data_color","reaction_no_data_size","gene_data","and_method_in_gene_reaction_rule","metabolite_data","metabolite_styles","metabolite_compare_style","metabolite_scale","metabolite_no_data_color","metabolite_no_data_size","identifiers_on_map","highlight_missing","allow_building_duplicate_reactions","first_load_callback","check_for_parent_tag","set_option","option","new_value","conditional_options","Settings","streams","onValue","val","has","reduce","has_found","scale_el","set_conditional","CallbackManager","load_model","load_map","_update_data","status_bus","new_behavior","set_scroll_behavior","set_use_3d_transform","draw_all_nodes","draw_all_reactions","should_update_data","from_cobra_json","remove_child_nodes","ZoomContainer","zoomed_sel","Map","from_data","build_input","text_edit_input","TextEditInput","_setup_modes","menu_div","search_bar_div","button_div","search_bar","SearchBar","search_index","settings_bar","settings_div","SettingsMenu","slice","_get_keys","assigned_keys","input_list","update","_setup_menu","_setup_simple_zoom_buttons","element_id","zoom_to_reaction","zoom_to_node","zoom_extent_canvas","get_size","start_coords","zoom_extent_nodes","_setup_status","_setup_quick_jump","zoom_mode","view_mode","_setup_confirm_before_exit","_set_mode","mode","_toggle_direction_buttons","toggle_pan_drag","toggle_resize","select_none","build_mode","brush_mode","rotate_mode","text_mode","set_reaction_data","set_gene_data","clear_gene_reaction_rules","set_metabolite_data","update_model","update_map","kind","should_draw","make_gene_data_object","all_reactions","extend","data_styles","import_and_check","met_data_object","reaction_data_object","gene_data_object","update_metabolite_data","update_reaction_data","apply_metabolite_data_to_map","apply_reaction_data_to_map","apply_gene_data_to_map","update_model_timer","delay","apply_metabolite_data","apply_reaction_data","apply_gene_data","menu_selection","button_selection","load_map_for_file","check_map","map_name","load_model_for_file","load_reaction_data_for_file","load_metabolite_data_for_file","load_gene_data_for_file","ui","dropdown_menu","button","save","key_text","assign","load","fn","pre_fn","failure_fn","save_svg","clear_map","model_menu","convert_map","clear_model","disable_model_clear_convert","dropdown","data_menu","load_reaction_data","accept_csv","clear_reaction_data","divider","clear_gene_data","clear_metabolite_data","disable_clears","edit_menu","undo","redo","toggle_primary","cycle_primary","select_all","invert_selection","view_menu","zoom_in","zoom_out","extent_nodes","extent_canvas","search","toggle_beziers","show_settings","button_panel","individual_button","icon","classes","tooltip","radio_button_group","direction_buttons","button_group","direction_arrow_left","direction_arrow_right","direction_arrow_up","direction_arrow_down","select_button","$","find","ids","this_id","b_id","status_bar","status","load_fn","new_map_name","quick_jump_path","callback","confirm","url","name_to_url","json","quick_jump","QuickJump","was_enabled","zoom","zoom_on","load_metabolite_data","load_gene_data","ignore_with_input","delete","delete_selected","delete_del","toggle_selected_node_primary","cycle_primary_node","right","down","left","up","onbeforeunload","Builder","callbacks","this_arg","isUndefined","pass_args","Array","arguments","a_name","split_name","split","apply","resize_enabled","setup","stop_propagation","transform_string","current_transform","tr","ldragresize","oldx","min","dragbar_width","mouse_node","mouse_node_mult","rect","top","bottom","rdragresize","dragx","max","tdragresize","oldy","bdragresize","dragy","drag_right","origin","drag_left","drag_top","drag_bottom","Canvas","stoichiometries","is_reversible","format","number","reactant_bits","product_bits","the_metabolite","coefficient","from_exported_data","model","the_id","gene_ids","genes_for_gene_reaction_rule","gene_reaction_rule","gene_id","gene","met","cofactors","styles","compare_style","apply_reaction_data_to_reactions","apply_metabolite_data_to_nodes","gene_data_obj","apply_gene_data_to_reactions","model_for_export","load_with_files","files","select_sel","update_callback","addEventListener","load_datafile","value","file","this_file","load_the_file","list","getdatafiles","datafiles","empty","path_for_arrow","arrow_container","arrow","_setup_drag","transform","rotate","rotation","displace_rotation","d_rotation","b","d_angle","to_degrees","create_membrane","enter_selection","update_membrane","update_selection","create_reaction","create_reaction_label","update_reaction","drawn_nodes","defs","update_reaction_label","draw_a_nested_object","create_segment","update_segment","group","identifiers_in_tooltip","label_mousedown_fn","label_mouseover_fn","label_mouseout_fn","label","all_genes_g","show_gene_string","gene_string","show_gene_reaction_rule","gene_string_for_data","gene_g","exit","should_size","should_color","no_data_size","no_data_color","primary_r","secondary_r","get_arrow_size","reaction_size","isNaN","get_disp","arrow_size","node_is_primary","arrow_height","start","end","b1","b2","disp","from_node_coefficient","direction","displaced_coords","to_node_coefficient","curve","show_missing","reaction_color","arrowheads","node_type","get_angle","loc","show_arrowhead_flux","stoichiometry_labels","labels","disp_factor","rotate_coords","create_bezier","update_bezier","show_beziers","drag_behavior","mouseover","mouseout","drawn_reactions","seg_data","segment_d","create_node","metabolite_groups","update_node","has_data_on_nodes","mousedown_fn","click_fn","mouseover_fn","mouseout_fn","label_drag_behavior","marker_r","metabolite_data_styles","no_data_style","node_label","should_scale","metabolite_size","should_color_data","metabolite_color","create_text_label","update_text_label","reaction_arrow_displacement","displace","check_undefined","new_x","new_y","hyp","distance","Draw","ctrl_equals_cmd","mousetrap","Mousetrap","isBoolean","stopCallback","_add_cmd","replaced","reset","key_id","assigned_key","key_to_bind","input_blocking","add_enter_listener","one_time","add_key_listener","key_name","unbind","log","KeyManager","css","canvas_size_and_loc","map_id","map_description","generate_map_id","setup_defs","setup_containers","largest_ids","Scale","calc_data_stats","connect_to_settings","get_data_statistics","UndoStack","draw","SearchIndex","beziers_enabled","rotation_on","get_largest_id","obj","current_largest","parseInt","Date","now","toString","n_id","insert","r_id","g_id","segments_to_delete","s_id","from_node","to_node","midpoint","c_minus_c","label_id","new_beziers_for_reactions","largest_segment_id","reset_containers","time","_status_timer","has_cobra_model","draw_all_text_labels","draw_beziers","clear_deleted","draw_all_beziers","clear_deleted_reactions","reaction_subset","object_slice_for_ids_ref","update_fn","draw_an_object","bezier_ids","bezier_ids_for_reaction_ids","clear_deleted_segments","clear_deleted_beziers","clear_deleted_nodes","node_subset","create_fn","text_label_ids","clear_deleted_text_labels","text_label_subset","bezier_subset","hide_beziers","has_data","data_statistics","on_array","array","same","vals","quartiles","funcs","ar","new_val","get_selected_text_labels","selected_text_labels","select_metabolite_with_id","node_selection","selected","classable_node","classable_selection","node_count","out","select_text_label","text_label_selection","p","delete_selectable","segments_and_reactions_for_nodes","segment_objs_w_segments","saved_nodes","saved_segment_objs_w_segments","saved_reactions","saved_text_labels","delete_and_draw","segment_objs","delete_segment_data","delete_reaction_data","delete_text_label_data","changed_r_scale","changed_m_scale","extend_nodes","extend_reactions","reaction_ids_to_draw","seg_id","seg_o","new_beziers_for_segments","scale_changed","found","so","bez_id","bezier_id_for_segment_id","extend_and_draw_metabolite","new_nodes","selected_node_id","cobra_reaction","metabolite_id","metabolite","label_d","reaction_redo","reaction_undo","new_reactions","reaction_bigg_id","apply_undo_redo","extend_and_draw_reaction","new_beziers","new_coords","translate_off_screen","new_reaction","saved_beziers","reactions_to_draw","connected_anchor_ids","segment_info","connected_anchor_id","related_node_ids","conn_met_id","conn_node","a_selected_node_id","nodes_to_draw","last_i","last_node","last_is_primary","last_coords","last_segment","last_segment_info","primary_node_id","last_bezier","related_node_id","this_is_primary","these_coords","this_segment_info","this_segment","this_bezier","old_connected_segments","new_connected_segments","go","reaction_ids_to_draw_o","these_reactions","segment_ids_for_reactions","segment_obj_w_segment","these_ids","new_text_label","edit_text_label","saved_value","edit_and_draw","record_id","margin","_zoom_extent","new_zoom","new_pos","go_to","zoom_to_text_label","highlight_reaction","highlight","highlight_node","highlight_text_label","download_json","map_for_export","homepage","schema","new_segment","attrs","new_node","t_id","canvas_el","new_canvas_el","window_scale","window_translate","mouse_node_size_and_trans","w","h","_go_to_svg","hidden_sel","download_svg","reactions_not_found","reaction_attrs","met_nodes_not_found","metabolite_attrs","model_reaction_id","model_reaction","model_metabolite_id","model_metabolite","n_reactions_not_found","n_met_nodes_not_found","status_delay","div","map_size","load_callback","selector","url_comp","parse_url_components","default_value","view_options","change_map","success","replace_state_for_map_name","reset_selection","selectedIndex","href","history","replaceState","linear","x_size","y_size","clamp","scale_path","path","x_fn","y_fn","match","p0","p1","p2","reg","p3","p4","p5","p6","scale_decimals","scale_fn","precision","sort_scale","stats","sorted","v","color_range","size_range","range","update_metabolite","changed","grad_id","unique_string","input_width","input_height","data_not_loaded","input_label_group","nd","no_data_container","add_group","trash_group","input_group","gradient","pickers_group","no_data","update_no_data","bar_w","bar_h","x_disp","_data_not_loaded","sc","sc_size","bring_to_front","d2","get_this_val","set_scale","sorted_domain","frac","stops","pickers","new_d","buf","floor","invert","trashes","add","last_ind","j","th","inputs","disabled","stat_types","opts","sind","label_w","ins","ScaleEditor","container","previous","next","counter","results","on_input_fn","debounce","clear_enter","index","record","overwrite","check_record","substring","re","exec","bacon","Bus","force_update_bus","Observable","convert_to_conditional_stream","_convert_to_conditional_stream","force_update_with_bus","_force_update_with_bus","busses","_create_conditional_setting","bus","stream","status_stream","is_not_hold_event","not","toProperty","is_not_first_clear","scan","is_not_first_hold","combined","combineAsArray","held","flatMap","fromArray","unheld","merge","initial_value","hold_changes","abandon_changes","accept_changes","toggle_abs_and_apply_data","background","box","view_gui","rse","style_gui","mse","abs_callback","cell","style_cells","get_styles","checked","option_name","string","boolean_options","pan","active_target","_accept_changes","_add_and_edit","stack_size","stack","oldest","newest","end_of_stack","top_of_stack","_incr","_decr","css3_transform_container","_scroll_behavior","_use_3d_transform","_pan_drag_on","_zoom_behavior","_zoom_timeout","_svg_scale","_svg_translate","_update_scroll","contains","err","wheel_fn","ev","sensitivity","returnValue","get_directional_disp","wheel_delta","delta","the_delt","new_translate","wheelDeltaX","deltaX","wheelDeltaY","deltaY","translate_array","_go_to_3d","svg_scale","svg_translate","n_scale","n_translate","tranform","_clear_3d","defer","zoom_by","amount","shift","PI","new_reaction_id","selected_node_coords","reaction_length","main_axis","anchor_distance","reactant_ranks","product_ranks","reactant_count","product_count","reaction_is_reversed","formula","new_metabolite","carbons","Infinity","decompartmentalize","max_rank","old","primary_reactant_index","primary_product_index","is_primary","new_anchors","anchors","dis","anchor_ids","new_id","general_node_type","new_anchor_groups","from_id","to_id","new_segment_id","reverse_flux","primary_index","met_loc","calculate_new_metabolite_coordinates","new_node_id","circle","Boolean","metabolites_array","rotate_around","coord","updated_node_ids","updated_reaction_ids","move_node_and_labels","tbez","is_reversed","ds","draw_at_index","b1_strength","b2_strength","w2","secondary_dis","num_slots","de","reaction_axis","new_label","seg_bez","these","config","calculateWidthForText","spacer","document","createElement","visibility","position","outline","padding","border","whiteSpace","fontSize","fontFamily","fontWeight","body","appendChild","innerHTML","getBoundingClientRect","get_document","get_window","promptInnerHTML","hintColor","dropDownBorderColor","dropDownZIndex","dropDownOnHoverBackgroundColor","txtInput","spellcheck","txtHint","cloneNode","borderColor","boxShadow","verticalAlign","wrapper","prompt","overflow","marginLeft","dropDown","textAlign","zIndex","cursor","borderStyle","borderWidth","overflowX","overflowY","createDropDownController","elem","rows","ix","oldIndex","current_row","onMouseOver","onMouseOut","onDblClick","onmouseselection","refresh","token","vph","innerHeight","documentElement","clientHeight","distanceToTop","distanceToBottom","divRow","onmouseover","onmouseout","onmousedown","ondblclick","__hint","rs","display_limit","maxHeight","move","step","get_current_row","dropDownController","leftSide","registerOnTextChangeOldValue","get_hint","onArrowDown","onArrowUp","onTab","startFrom","hint","getText","optionsLength","registerOnTextChange","txt","handler","keyDownHandler","keyCode","m","hasTextChanged","align_gene_data_to_reactions","aligned","null_val","first_gene_id","this_gene_data","existing_d","pnt","check","array_to_object","float_for_data","check_finite","isFinite","take_abs","diff","fold","log2_fold","_parse_float_or_null","fs","reverse_flux_for_data","rule","gene_values","null_or_d","out_text","genes_found","replace_gene_in_rule","RETURN_ARG","new_str","any_num","EMPTY_LINES","TRAILING_NEWLINE","result","text_for_data","csv_converter","csv_rows","converted","row","AND_OR","ALL_PARENS","unique_strings_array","evaluate_gene_reaction_rule","curr_val","all_null","new_curr_val","EXCESS_PARENS","OR_EXPRESSION","nums","OR","sum","AND_EXPRESSION","AND","num","Number","escape_reg_exp","ESCAPE_REG","space_or_par_start","space_or_par_finish","escaped","r_data","version","DataMenu","static","load_map_model_from_url","map_download_url","model_download_url","local_index","opt","map_path","_get_path","model_name","model_path","hasOwnProperty","encodeURIComponent","organism","set_button","s2","pull_right","ul","li","link","set_json_or_csv_input_button","set_json_input_button","post_fn","load_json","click","load_json_or_csv","_check_filesaver","Blob","alert","defaults","must_be_float","has_key","hasChildNodes","removeChild","lastChild","load_css","css_path","ends_with","suffix","load_files","files_to_load","final_callback","remaining","is_internal","constructor","args","instance","container_sel","parent_node_selector","children_selector","object","id_key","create_function","update_function","exit_function","draw_object","make_array_ref","object_data_key","make_array","it","compare_arrays","a1","a2","arr","column","k","nk","copy","len","obj1","obj2","attrname","arrays","new_array","func","wait","immediate","timeout","context","later","callNow","object_slice_for_ids","subset","coords1","coords2","scalar","JSON","stringify","blob","saveAs","File","FileReader","FileList","reader","onload","parse","onabort","onerror","readAsText","debug_event","onload_function","errors","csv","parseRows","svg_sel","do_beautify","xml","XMLSerializer","serializeToString","vkbeautify","rotate_coords_recursive","coords_array","rot","cos","sin","denominator","numerator","atan","radians","point","gamma","atan2","beta","sqrt","pow","names","compartmentalize","compartment_id","no_compartment","avg","median","half","random_characters","possible","charAt","random","el","tag","tagName","download_url","the_window","query","vars","pair","decodeURIComponent","ownerDocument","defaultView","transform_attr","_toConsumableArray","isArray","arr2","from","Source","obs","sync","lazy","queue","ConsumingSource","BufferingSource","Desc","method","Some","Event","eventIdCounter","Next","valueF","eager","isFunction","_isNext","valueInternal","Initial","End","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","assertFunction","dispatcher","registerObs","PropertyDispatcher","property","None","currentValueRootId","propertyEnded","Property","unsubAll","subscribeAll","guardedSink","sink","Bacon","valueAndEnd","endEvent","_slice","Exception","nop","former","cloneArray","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","assertEventStream","_isEventStream","assertObservable","isObservable","assertArray","assertNoArguments","prop","inherit","child","parent","hasProp","ctor","indexWhere","head","always","negate","tail","filtered","toArray","last","all","any","without","splice","seed","cached","_isNone","me","internals","recursionDepth","UpdateBarrier","rootEvent","waiterObs","waiters","afters","aftersIndex","flushed","afterTransaction","whenDoneWith","obsWaiters","flush","flushWaiters","deps","obsId","flushDepsOf","dep","internalDeps","inTransaction","after","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","reply","noMore","hasWaiters","_isSource","markEnded","consume","mayHave","hasAtLeast","flatten","values","isTrigger","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toSimpleExtractor","fieldValue","toFieldExtractor","parts","partFuncs","isFieldKey","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","_isSome","getOrElse","get","isDefined","inspect","toOption","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","subscription","_this2","unsubMe","iterable","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","sub","unsubscribeFromSource","_this","initValue_","initValue","initSent","subbed","sendInit","toEventStream","withHandler","never","when","usage","sources","pats","patterns","patSources","constantToFunction","pat","ixs","triggerFound","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","state","checkObservable","groupSimultaneous","_len5","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","_len9","_key9","_len10","_key10","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","equals","isNone","skipDuplicates","isEqual","prev","awaiting","and","or","scheduler","setInterval","clearInterval","getTime","bufferWithTime","bufferWithTimeOrCount","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","valuesToPush","_this6","delayMs","_this7","_len11","_key11","once","unsubRight","unsubLeft","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len12","_key12","flatMapConcat","sender","bufferingThrottle","minimumInterval","newSink","subscribeInput","_this8","unsubscribeInput","plug","_this9","liftCallback","_len13","_key13","fromCallback","_len14","_key14","fromNodeCallback","_len15","_key15","combineTemplate","template","ctxStack","setValue","applyStreamValue","constantValue","mkContext","pushContext","newContext","compile","popContext","compileTemplate","rootContext","addPropertyInitValueToStream","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","resultProperty","_this10","acc","initHandled","prevTuple","tuple","doAction","doEnd","doError","doLog","_len16","_key16","endOnError","_len17","_key17","take","first","mapError","flatMapError","sampler","thisSource","samplerSource","sample","interval","_len18","_key18","eventMethods","findHandlerMethods","methodPair","addListener","fromEventTarget","eventName","_findHandlerMethods","fromEvent","fromPoll","poll","fromPromise","promise","abort","bound","then","done","groupBy","keyF","limitF","src","similar","limited","pushNeeded","holdWhen","valve","onHold","bufferedValues","subscribed","endIfBothEnded","toSend","asEventStream","_this11","off","jQuery","Zepto","lastEvent","_len19","_key19","mergeAll","smartSink","unsubBoth","sinks","repeatedly","repeat","generator","flag","subscribeNext","retry","retries","maxRetries","isRetryable","finished","valueStream","retriesDone","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len20","_key20","slidingWindow","minValues","spies","running","spy","startWith","takeWhile","_len21","_key21","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","initial","lateBindFirst","_len23","_key23","_len22","_key22","Function","zipAsArray","_len24","_key24","zipWith","_len25","_key25","_len26","_key26","observablesAndFunction","zip","view","navigator","test","userAgent","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","revoker","revokeObjectURL","chrome","dispatch","filesaver","event_types","listener","auto_bom","FileSaver","no_auto_bom","object_url","target_view","blob_changed","dispatch_all","fs_error","onloadend","base64Data","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","abortable","create_if_not_found","create","exclusive","download","webkitSlice","TEMPORARY","getDirectory","dir","getFile","createWriter","writer","onwriteend","toURL","ABORT_ERR","write","WRITING","NOT_FOUND_ERR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","content","_addEvent","attachEvent","_characterFromEvent","character","fromCharCode","which","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","cancelBubble","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","action","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","element","ancestor","targetElement","_resetSequences","doNotReset","activeSequences","_sequenceLevels","_nextExpectedAction","_getMatches","sequenceName","level","_callbacks","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","srcElement","_handleKeyEvent","_ignoreNextKeyup","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_directMap","info","_ignoreNextKeypress","_handleKey","maxLevel","processedSequenceCallback","ignoreThisKeypress","_bindMultiple","combinations",8,9,13,16,17,18,20,27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","&","*","(",")","+",":","\"","<",">","?","|","command","return","escape","plus","mod","platform","className","isContentEditable","documentMousetrap","createReduce","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","every","some","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","computed","lastComputed","shuffle","rand","shuffled","sortBy","criteria","indexBy","countBy","partition","pass","fail","rest","drop","compact","shallow","strict","startIndex","isArguments","difference","uniq","unique","isSorted","seen","union","intersection","argsLength","unzip","findLastIndex","low","high","mid","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","address","leading","trailing","timestamp","wrap","compose","times","before","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","functions","methods","extendOwn","pick","oiteratee","omit","props","tap","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","noConflict","noop","propertyOf","accum","escapeMap","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","offset","variable","render","argument","chain","_chain","mixin","valueOf","toJSON","createShiftArr","space","isSubquery","parenthesisLevel","split_sql","tab","inComment","deep","sql","ar_by_quote","xmlmin","preserveComments","jsonmin","cssmin","sqlmin"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzhxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9ppGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5fvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvatJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtvcrizZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvnvzlgfile":"escher.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/** Behavior. Defines the set of click and drag behaviors for the map, and keeps track\n of which behaviors are activated.\n\n A Behavior instance has the following attributes:\n\n my_behavior.rotation_drag, my_behavior.text_label_mousedown,\n my_behavior.text_label_click, my_behavior.selectable_mousedown,\n my_behavior.selectable_click, my_behavior.selectable_drag,\n my_behavior.node_mouseover, my_behavior.node_mouseout,\n my_behavior.label_mousedown, my_behavior.label_mouseover,\n my_behavior.label_mouseout, my_behavior.bezier_drag,\n my_behavior.bezier_mouseover, my_behavior.bezier_mouseout,\n my_behavior.reaction_label_drag, my_behavior.node_label_drag,\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar build = require('./build');\n\n\nvar Behavior = utils.make_class();\n// methods\nBehavior.prototype = {\n    init: init,\n    toggle_rotation_mode: toggle_rotation_mode,\n    turn_everything_on: turn_everything_on,\n    turn_everything_off: turn_everything_off,\n    // toggle\n    toggle_selectable_click: toggle_selectable_click,\n    toggle_text_label_edit: toggle_text_label_edit,\n    toggle_selectable_drag: toggle_selectable_drag,\n    toggle_label_drag: toggle_label_drag,\n    toggle_label_mousedown: toggle_label_mousedown,\n    toggle_bezier_drag: toggle_bezier_drag,\n    // util\n    turn_off_drag: turn_off_drag,\n    // get drag behaviors\n    _get_selectable_drag: _get_selectable_drag,\n    _get_bezier_drag: _get_bezier_drag,\n    _get_reaction_label_drag: _get_reaction_label_drag,\n    _get_node_label_drag: _get_node_label_drag,\n    _get_generic_drag: _get_generic_drag,\n    _get_generic_angular_drag: _get_generic_angular_drag\n};\nmodule.exports = Behavior;\n\n\n// definitions\nfunction init(map, undo_stack) {\n    this.map = map;\n    this.undo_stack = undo_stack;\n\n    // make an empty function that can be called as a behavior and does nothing\n    this.empty_behavior = function() {};\n\n    // rotation mode operates separately from the rest\n    this.rotation_mode_enabled = false;\n    this.rotation_drag = d3.behavior.drag();\n\n    // behaviors to be applied\n    this.selectable_mousedown = null;\n    this.text_label_mousedown = null;\n    this.text_label_click = null;\n    this.selectable_drag = this.empty_behavior;\n    this.node_mouseover = null;\n    this.node_mouseout = null;\n    this.label_mousedown = null;\n    this.label_mouseover = null;\n    this.label_mouseout = null;\n    this.bezier_drag = this.empty_behavior;\n    this.bezier_mouseover = null;\n    this.bezier_mouseout = null;\n    this.reaction_label_drag = this.empty_behavior;\n    this.node_label_drag = this.empty_behavior;\n    this.turn_everything_on();\n}\nfunction turn_everything_on() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(true);\n    this.toggle_selectable_drag(true);\n    this.toggle_label_drag(true);\n    this.toggle_label_mousedown(true);\n}\nfunction turn_everything_off() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(false);\n    this.toggle_selectable_drag(false);\n    this.toggle_label_drag(false);\n    this.toggle_label_mousedown(false);\n}\n\nfunction toggle_rotation_mode(on_off) {\n    /** Listen for rotation, and rotate selected nodes.\n\n     */\n    if (on_off===undefined) {\n        this.rotation_mode_enabled = !this.rotation_mode_enabled;\n    } else {\n        this.rotation_mode_enabled = on_off;\n    }\n\n    var selection_node = this.map.sel.selectAll('.node-circle'),\n        selection_background = this.map.sel.selectAll('#canvas');\n\n    if (this.rotation_mode_enabled) {\n        this.map.callback_manager.run('start_rotation');\n\n        var selected_nodes = this.map.get_selected_nodes();\n        if (Object.keys(selected_nodes).length == 0) {\n            console.warn('No selected nodes');\n            return;\n        }\n\n        // show center\n        this.center = average_location(selected_nodes);\n        show_center.call(this);\n\n        // this.set_status('Drag to rotate.');\n        var map = this.map,\n            selected_node_ids = Object.keys(selected_nodes),\n            reactions = this.map.reactions,\n            nodes = this.map.nodes,\n            beziers = this.map.beziers;\n\n        var start_fn = function(d) {\n            // silence other listeners\n            d3.event.sourceEvent.stopPropagation();\n        },\n            drag_fn = function(d, angle, total_angle, center) {\n                var updated = build.rotate_nodes(selected_nodes, reactions,\n                                                 beziers, angle, center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            end_fn = function(d) {},\n            undo_fn = function(d, total_angle, center) {\n                // undo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, -total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            redo_fn = function(d, total_angle, center) {\n                // redo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            center_fn = function() {\n                return this.center;\n            }.bind(this);\n        this.rotation_drag = this._get_generic_angular_drag(start_fn, drag_fn, end_fn,\n                                                            undo_fn, redo_fn, center_fn,\n                                                            this.map.sel);\n        selection_background.call(this.rotation_drag);\n        this.selectable_drag = this.rotation_drag;\n    } else {\n        // turn off all listeners\n        hide_center.call(this);\n        selection_node.on('mousedown.center', null);\n        selection_background.on('mousedown.center', null);\n        selection_background.on('mousedown.drag', null);\n        selection_background.on('touchstart.drag', null);\n        this.rotation_drag = null;\n        this.selectable_drag = null;\n    }\n\n    // definitions\n    function show_center() {\n        var s = this.map.sel.selectAll('#rotation-center')\n                .data([0]),\n            enter = s.enter()\n                .append('g').attr('id', 'rotation-center');\n\n        enter.append('path').attr('d', 'M-32 0 L32 0')\n            .attr('class', 'rotation-center-line');\n        enter.append('path').attr('d', 'M0 -32 L0 32')\n            .attr('class', 'rotation-center-line');\n\n        s.attr('transform', 'translate('+this.center.x+','+this.center.y+')')\n            .attr('visibility', 'visible');\n\n        s.call(d3.behavior.drag()\n               .on('drag', function(sel) {\n                   var cur = utils.d3_transform_catch(sel.attr('transform')),\n                       new_loc = [d3.event.dx + cur.translate[0],\n                                  d3.event.dy + cur.translate[1]];\n                   sel.attr('transform', 'translate('+new_loc+')');\n                   this.center = { x: new_loc[0], y: new_loc[1] };\n               }.bind(this, s)));\n        s.on('mouseover', function() {\n            var current = parseFloat(this.selectAll('path').style('stroke-width'));\n            this.selectAll('path').style('stroke-width', current * 2 + 'px');\n        }.bind(s));\n        s.on('mouseout', function() {\n            this.selectAll('path').style('stroke-width', null);\n        }.bind(s));\n    }\n    function hide_center(sel) {\n        this.map.sel.select('#rotation-center')\n            .attr('visibility', 'hidden');\n    }\n    function average_location(nodes) {\n        var xs = [], ys = [];\n        for (var node_id in nodes) {\n            var node = nodes[node_id];\n            if (node.x !== undefined)\n                xs.push(node.x);\n            if (node.y !== undefined)\n                ys.push(node.y);\n        }\n        return { x: utils.mean(xs),\n                 y: utils.mean(ys) };\n    }\n}\n\nfunction toggle_selectable_click(on_off) {\n    /** With no argument, toggle the node click on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_mousedown === null;\n    if (on_off) {\n        var map = this.map;\n        this.selectable_mousedown = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // this.parentNode.__data__.was_selected = d3.select(this.parentNode).classed('selected');\n            // d3.select(this.parentNode).classed('selected', true);\n        };\n        this.selectable_click = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // click suppressed. This DOES have en effect.\n            if (d3.event.defaultPrevented) return;\n            // turn off the temporary selection so select_selectable\n            // works. This is a bit of a hack.\n            // if (!this.parentNode.__data__.was_selected)\n            //     d3.select(this.parentNode).classed('selected', false);\n            map.select_selectable(this, d, d3.event.shiftKey);\n            // this.parentNode.__data__.was_selected = false;\n        };\n        this.node_mouseover = function(d) {\n            d3.select(this).style('stroke-width', null);\n            var current = parseFloat(d3.select(this).style('stroke-width'));\n            if (!d3.select(this.parentNode).classed('selected'))\n                d3.select(this).style('stroke-width', current * 3 + 'px');\n        };\n        this.node_mouseout = function(d) {\n            d3.select(this).style('stroke-width', null);\n        };\n    } else {\n        this.selectable_mousedown = null;\n        this.selectable_click = null;\n        this.node_mouseover = null;\n        this.node_mouseout = null;\n        this.map.sel.select('#nodes')\n            .selectAll('.node-circle').style('stroke-width', null);\n    }\n}\n\nfunction toggle_text_label_edit(on_off) {\n    /** With no argument, toggle the text edit on mousedown on/off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     The backup state is equal to selectable_mousedown.\n\n     */\n    if (on_off===undefined) on_off = this.text_edit_mousedown == null;\n    if (on_off) {\n        var map = this.map,\n            selection = this.selection;\n        this.text_label_mousedown = function() {\n            if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // run the callback\n            var coords_a = utils.d3_transform_catch(d3.select(this).attr('transform')).translate,\n                coords = {x: coords_a[0], y: coords_a[1]};\n            map.callback_manager.run('edit_text_label', null, d3.select(this), coords);\n            d3.event.stopPropagation();\n        };\n        this.text_label_click = null;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', true);\n        // add the new-label listener\n        this.map.sel.on('mousedown.new_text_label', function(node) {\n            // silence other listeners\n            d3.event.preventDefault();\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            this.map.callback_manager.run('new_text_label', null, coords);\n        }.bind(this, this.map.sel.node()));\n    } else {\n        this.text_label_mousedown = this.selectable_mousedown;\n        this.text_label_click = this.selectable_click;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', false);\n        // remove the new-label listener\n        this.map.sel.on('mousedown.new_text_label', null);\n        this.map.callback_manager.run('hide_text_label_editor');\n    }\n}\n\nfunction toggle_selectable_drag(on_off) {\n    /** With no argument, toggle the node drag & bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_drag===this.empty_behavior;\n    if (on_off) {\n        this.selectable_drag = this._get_selectable_drag(this.map, this.undo_stack);\n        this.bezier_drag = this._get_bezier_drag(this.map, this.undo_stack);\n    } else {\n        this.selectable_drag = this.empty_behavior;\n        this.bezier_drag = this.empty_behavior;\n    }\n}\nfunction toggle_label_drag(on_off) {\n    /** With no argument, toggle the label drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_drag===this.empty_behavior;\n    if (on_off) {\n        this.reaction_label_drag = this._get_reaction_label_drag(this.map);\n        this.node_label_drag = this._get_node_label_drag(this.map);\n    } else {\n        this.reaction_label_drag = this.empty_behavior;\n        this.node_label_drag = this.empty_behavior;\n    }\n}\n\nfunction toggle_label_mousedown(on_off) {\n    /** With no argument, toggle the reaction label mousedown on or off.z\n\n     Arguments\n     ---------\n\n     on_off: A boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_mousedown==null;\n    if (on_off) {\n        var map = this.map;\n        // TODO turn this feature (reaction label selection) back on, but\n        // with correct shift key management\n        this.label_mousedown = function(d) {\n            // if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // // select reaction/node\n            // d3.select(this.parentNode.parentNode)\n            //     .each(function(d) {\n            //         var node_ids = {};\n            //         for (var seg_id in d.segments) {\n            //             ['to_node_id', 'from_node_id'].forEach(function(n) {\n            //                 node_ids[d.segments[seg_id][n]] = true;\n            //             });\n            //         }\n            //         map.sel.selectAll('.selected').classed('selected', false);\n            //         map.sel.selectAll('.node')\n            //             .classed('selected', function(d) {\n            //                 return (d.node_id in node_ids);\n            //             });\n            //     });\n            // d3.event.stopPropagation();\n        };\n        this.label_mouseover = function(d) {\n            // d3.select(this).style('fill', 'rgb(56, 56, 184)');\n        };\n        this.label_mouseout = function(d) {\n            // d3.select(this).style('fill', null);\n        };\n    } else {\n        this.label_mousedown = null;\n        this.label_mouseover = null;\n        this.label_mouseout = null;\n        this.map.sel.select('.node-label,.reaction-label')\n            .style('fill', null);\n    }\n}\n\nfunction toggle_bezier_drag(on_off) {\n    /** With no argument, toggle the bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.bezier_drag===this.empty_behavior;\n    if (on_off) {\n        this.bezier_drag = this._get_bezier_drag(this.map);\n        this.bezier_mouseover = function(d) {\n            d3.select(this).style('stroke-width', String(3)+'px');\n        };\n        this.bezier_mouseout = function(d) {\n            d3.select(this).style('stroke-width', String(1)+'px');\n        };\n    } else {\n        this.bezier_drag = this.empty_behavior;\n        this.bezier_mouseover = null;\n        this.bezier_mouseout = null;\n    }\n}\n\nfunction turn_off_drag(sel) {\n    sel.on('mousedown.drag', null);\n    sel.on('touchstart.drag', null);\n}\n\nfunction _get_selectable_drag(map, undo_stack) {\n    /** Drag the selected nodes and text labels.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        the_timeout = null,\n        total_displacement = null,\n        // for nodes\n        node_ids_to_drag = null,\n        reaction_ids = null,\n        // for text labels\n        text_label_ids_to_drag = null,\n        move_label = function(text_label_id, displacement) {\n            var text_label = map.text_labels[text_label_id];\n            text_label.x = text_label.x + displacement.x;\n            text_label.y = text_label.y + displacement.y;\n        };\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners (e.g. nodes BELOW this one)\n        d3.event.sourceEvent.stopPropagation();\n        // remember the total displacement for later\n        // total_displacement = {};\n        total_displacement = {x: 0, y: 0};\n\n        // If a text label is selected, the rest is not necessary\n        if (d3.select(this).attr('class').indexOf('label') == -1) {\n            // Note that dragstart is called even for a click event\n            var data = this.parentNode.__data__,\n                bigg_id = data.bigg_id,\n                node_group = this.parentNode;\n            // Move element to back (for the next step to work). Wait 200ms\n            // before making the move, becuase otherwise the element will be\n            // deleted before the click event gets called, and selection\n            // will stop working.\n            the_timeout = setTimeout(function() {\n                node_group.parentNode.insertBefore(node_group,node_group.parentNode.firstChild);\n            }, 200);\n            // prepare to combine metabolites\n            map.sel.selectAll('.metabolite-circle')\n                .on('mouseover.combine', function(d) {\n                    if (d.bigg_id==bigg_id && d.node_id!=data.node_id) {\n                        d3.select(this).style('stroke-width', String(12)+'px')\n                            .classed('node-to-combine', true);\n                    }\n                }).on('mouseout.combine', function(d) {\n                    if (d.bigg_id==bigg_id) {\n                        map.sel.selectAll('.node-to-combine').style('stroke-width', String(2)+'px')\n                            .classed('node-to-combine', false);\n                    }\n                });\n        }\n    });\n    behavior.on(\"drag\", function(d) {\n        // if this node is not already selected, then select this one and\n        // deselect all other nodes. Otherwise, leave the selection alone.\n        if (!d3.select(this.parentNode).classed('selected'))\n            map.select_selectable(this, d);\n\n        // get the grabbed id\n        var grabbed = {};\n        if (d3.select(this).attr('class').indexOf('label') === -1) {\n            // if it is a node\n            grabbed['type'] = 'node';\n            grabbed['id'] = this.parentNode.__data__.node_id;\n        } else {\n            // if it is a text label\n            grabbed['type'] = 'label';\n            grabbed['id'] = this.__data__.text_label_id;\n        }\n\n        var selected_node_ids = map.get_selected_node_ids(),\n            selected_text_label_ids = map.get_selected_text_label_ids();\n        node_ids_to_drag = []; text_label_ids_to_drag = [];\n        // choose the nodes and text labels to drag\n        if (grabbed['type']=='node' &&\n            selected_node_ids.indexOf(grabbed['id'])==-1) {\n            node_ids_to_drag.push(grabbed['id']);\n        } else if (grabbed['type']=='label' &&\n                   selected_text_label_ids.indexOf(grabbed['id'])==-1) {\n            text_label_ids_to_drag.push(grabbed['id']);\n        } else {\n            node_ids_to_drag = selected_node_ids;\n            text_label_ids_to_drag = selected_text_label_ids;\n        }\n        reaction_ids = [];\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy };\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        node_ids_to_drag.forEach(function(node_id) {\n            // update data\n            var node = map.nodes[node_id],\n                updated = build.move_node_and_dependents(node, node_id,\n                                                         map.reactions,\n                                                         map.beziers,\n                                                         displacement);\n            reaction_ids = utils.unique_concat([reaction_ids, updated.reaction_ids]);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        text_label_ids_to_drag.forEach(function(text_label_id) {\n            move_label(text_label_id, displacement);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        // draw\n        map.draw_these_nodes(node_ids_to_drag);\n        map.draw_these_reactions(reaction_ids);\n        map.draw_these_text_labels(text_label_ids_to_drag);\n    });\n    behavior.on(\"dragend\", function() {\n        if (node_ids_to_drag===null) {\n            // Dragend can be called when drag has not been called. In this,\n            // case, do nothing.\n            total_displacement = null;\n            node_ids_to_drag = null;\n            text_label_ids_to_drag = null;\n            reaction_ids = null;\n            the_timeout = null;\n            return;\n        }\n        // look for mets to combine\n        var node_to_combine_array = [];\n        map.sel.selectAll('.node-to-combine').each(function(d) {\n            node_to_combine_array.push(d.node_id);\n        });\n        if (node_to_combine_array.length==1) {\n            // If a node is ready for it, combine nodes\n            var fixed_node_id = node_to_combine_array[0],\n                dragged_node_id = this.parentNode.__data__.node_id,\n                saved_dragged_node = utils.clone(map.nodes[dragged_node_id]),\n                segment_objs_moved_to_combine = combine_nodes_and_draw(fixed_node_id,\n                                                                       dragged_node_id);\n            undo_stack.push(function() {\n                // undo\n                // put the old node back\n                map.nodes[dragged_node_id] = saved_dragged_node;\n                var fixed_node = map.nodes[fixed_node_id],\n                    updated_reactions = [];\n                segment_objs_moved_to_combine.forEach(function(segment_obj) {\n                    var segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                    if (segment.from_node_id==fixed_node_id) {\n                        segment.from_node_id = dragged_node_id;\n                    } else if (segment.to_node_id==fixed_node_id) {\n                        segment.to_node_id = dragged_node_id;\n                    } else {\n                        console.error('Segment does not connect to fixed node');\n                    }\n                    // removed this segment_obj from the fixed node\n                    fixed_node.connected_segments = fixed_node.connected_segments.filter(function(x) {\n                        return !(x.reaction_id==segment_obj.reaction_id && x.segment_id==segment_obj.segment_id);\n                    });\n                    if (updated_reactions.indexOf(segment_obj.reaction_id)==-1)\n                        updated_reactions.push(segment_obj.reaction_id);\n                });\n                map.draw_these_nodes([dragged_node_id]);\n                map.draw_these_reactions(updated_reactions);\n            }, function () {\n                // redo\n                combine_nodes_and_draw(fixed_node_id, dragged_node_id);\n            });\n\n        } else {\n            // otherwise, drag node\n\n            // add to undo/redo stack\n            // remember the displacement, dragged nodes, and reactions\n            var saved_displacement = utils.clone(total_displacement),\n                // BUG TODO this variable disappears!\n                // Happens sometimes when you drag a node, then delete it, then undo twice\n                saved_node_ids = utils.clone(node_ids_to_drag),\n                saved_text_label_ids = utils.clone(text_label_ids_to_drag),\n                saved_reaction_ids = utils.clone(reaction_ids);\n            undo_stack.push(function() {\n                // undo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   utils.c_times_scalar(saved_displacement, -1));\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id,\n                               utils.c_times_scalar(saved_displacement, -1));\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            }, function () {\n                // redo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   saved_displacement);\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id, saved_displacement);\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            });\n        }\n\n        // stop combining metabolites\n        map.sel.selectAll('.metabolite-circle')\n            .on('mouseover.combine', null)\n            .on('mouseout.combine', null);\n\n        // clear the timeout\n        clearTimeout(the_timeout);\n\n        // clear the shared variables\n        total_displacement = null;\n        node_ids_to_drag = null;\n        text_label_ids_to_drag = null;\n        reaction_ids = null;\n        the_timeout = null;\n    });\n    return behavior;\n\n    // definitions\n    function combine_nodes_and_draw(fixed_node_id, dragged_node_id) {\n        var dragged_node = map.nodes[dragged_node_id],\n            fixed_node = map.nodes[fixed_node_id],\n            updated_segment_objs = [];\n        dragged_node.connected_segments.forEach(function(segment_obj) {\n            // change the segments to reflect\n            var segment;\n            try {\n                segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segment ' + segment_obj.segment_id);\n                return;\n            }\n            if (segment.from_node_id==dragged_node_id) segment.from_node_id = fixed_node_id;\n            else if (segment.to_node_id==dragged_node_id) segment.to_node_id = fixed_node_id;\n            else {\n                console.error('Segment does not connect to dragged node');\n                return;\n            }\n            // moved segment_obj to fixed_node\n            fixed_node.connected_segments.push(segment_obj);\n            updated_segment_objs.push(utils.clone(segment_obj));\n            return;\n        });\n        // delete the old node\n        map.delete_node_data([dragged_node_id]);\n        // turn off the class\n        map.sel.selectAll('.node-to-combine').classed('node-to-combine', false);\n        // draw\n        map.draw_everything();\n        // return for undo\n        return updated_segment_objs;\n    }\n}\nfunction _get_bezier_drag(map) {\n    var move_bezier = function(reaction_id, segment_id, bez, bezier_id, displacement) {\n        var segment = map.reactions[reaction_id].segments[segment_id];\n        segment[bez] = utils.c_plus_c(segment[bez], displacement);\n        map.beziers[bezier_id].x = segment[bez].x;\n        map.beziers[bezier_id].y = segment[bez].y;\n    },\n        start_fn = function(d) {\n            d.dragging = true;\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        end_fn = function(d) {\n            d.dragging = false;\n        },\n        undo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_reaction_label_drag(map) {\n    var move_label = function(reaction_id, displacement) {\n        var reaction = map.reactions[reaction_id];\n        reaction.label_x = reaction.label_x + displacement.x;\n        reaction.label_y = reaction.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.reaction_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_node_label_drag(map) {\n    var move_label = function(node_id, displacement) {\n        var node = map.nodes[node_id];\n        node.label_x = node.label_x + displacement.x;\n        node.label_y = node.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.node_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_nodes([d.node_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\n\nfunction _get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn\n\n     undo_fn\n\n     redo_fn\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_displacement,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_displacement = { x: 0, y: 0 };\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] };\n\n        // remember the displacement\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        drag_fn(d, displacement, total_displacement, location);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_displacement = utils.clone(total_displacement), // BUG TODO this variable disappears!\n            saved_location = { x: d3.mouse(rel)[0],\n                               y: d3.mouse(rel)[1] };\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_displacement, saved_location);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_displacement, saved_location);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n\nfunction _get_generic_angular_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                   get_center, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo. Supplies angles in\n     place of displacements.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn:\n\n     undo_fn:\n\n     redo_fn:\n\n     get_center:\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_angle,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_angle = 0;\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] },\n            center = get_center(),\n            angle = utils.angle_for_event(displacement,\n                                          location,\n                                          center);\n        // remember the displacement\n        total_angle = total_angle + angle;\n        drag_fn(d, angle, total_angle, center);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_angle = total_angle,\n            saved_center = utils.clone(get_center());\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_angle, saved_center);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_angle, saved_center);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n","/** Brush. Define a brush to select elements in a map.\n\n Arguments\n ---------\n\n selection: A d3 selection to place the brush in.\n\n is_enabled: Whether to turn the brush on.\n\n map: An instance of escher.Map.\n\n insert_after: A d3 selector string to choose the svg element that the brush\n will be inserted after. Often a canvas element (e.g. '.canvas-group').\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Brush = utils.make_class();\nBrush.prototype = {\n    init: init,\n    toggle: toggle,\n    setup_selection_brush: setup_selection_brush\n};\nmodule.exports = Brush;\n\n\n// definitions\nfunction init(selection, is_enabled, map, insert_after) {\n    this.brush_sel = selection.append('g')\n        .attr('id', 'brush-container');\n    var node = this.brush_sel.node(),\n        insert_before_node = selection.select(insert_after).node().nextSibling;\n    if (!(node===insert_before_node))\n        node.parentNode.insertBefore(node, insert_before_node);\n    this.enabled = is_enabled;\n    this.map = map;\n};\n\nfunction brush_is_enabled() {\n    /** Returns a boolean for the on/off status of the brush\n\n     */\n    return this.map.sel.select('.brush').empty();\n}\nfunction toggle(on_off) {\n    /** Turn the brush on or off\n\n     */\n    if (on_off===undefined) on_off = !this.enabled;\n\n    if (on_off) {\n        this.selection_brush = this.setup_selection_brush();\n    } else {\n        this.brush_sel.selectAll('.brush').remove();\n    }\n}\nfunction setup_selection_brush() {\n    var selection = this.brush_sel,\n        selectable_selection = this.map.sel.selectAll('#nodes,#text-labels'),\n        size_and_location = this.map.canvas.size_and_location(),\n        width = size_and_location.width,\n        height = size_and_location.height,\n        x = size_and_location.x,\n        y = size_and_location.y;\n\n    // clear existing brush\n    selection.selectAll('g').remove();\n\n    var brush_fn = d3.svg.brush()\n            .x(d3.scale.identity().domain([x, x+width]))\n            .y(d3.scale.identity().domain([y, y+height]))\n            .on(\"brush\", function() {\n                var shift_key_on = d3.event.sourceEvent.shiftKey,\n                    extent = d3.event.target.extent(),\n                    selection;\n                if (shift_key_on) {\n                    // when shift is pressed, ignore the currently selected nodes\n                    selection = selectable_selection\n                        .selectAll('.node:not(.selected),.text-label:not(.selected)');\n                } else {\n                    // otherwise, brush all nodes\n                    selection = selectable_selection\n                        .selectAll('.node,.text-label');\n                }\n                selection.classed(\"selected\", function(d) {\n                    var sx = d.x, sy = d.y;\n                    return extent[0][0] <= sx && sx < extent[1][0]\n                        && extent[0][1] <= sy && sy < extent[1][1];\n                });\n            })\n            .on(\"brushend\", function() {\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);\n            }),\n        brush = selection.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush_fn);\n\n    // turn off the mouse crosshair\n    selection.selectAll('.background')\n        .classed('cursor-grab', false)\n        .classed('cursor-grabbing', false)\n        .style('cursor', null);\n\n    return brush;\n}\n","/** BuildInput\n\n Arguments\n ---------\n\n selection: A d3 selection for the BuildInput.\n\n map: A Map instance.\n\n zoom_container: A ZoomContainer instance.\n\n settings: A Settings instance.\n\n  */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar completely = require('./complete.ly');\nvar DirectionArrow = require('./DirectionArrow');\nvar CobraModel = require('./CobraModel');\n\nvar _ = require('underscore');\n\n\nvar BuildInput = utils.make_class();\nBuildInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    toggle: toggle,\n    show_dropdown: show_dropdown,\n    hide_dropdown: hide_dropdown,\n    place_at_selected: place_at_selected,\n    place: place,\n    reload_at_selected: reload_at_selected,\n    reload: reload,\n    toggle_start_reaction_listener: toggle_start_reaction_listener,\n    hide_target: hide_target,\n    show_target: show_target\n};\nmodule.exports = BuildInput;\n\n\nfunction init(selection, map, zoom_container, settings) {\n    // set up container\n    var new_sel = selection.append('div').attr('id', 'rxn-input');\n    this.placed_div = PlacedDiv(new_sel, map, {x: 240, y: 0});\n    this.placed_div.hide();\n\n    // set up complete.ly\n    var c = completely(new_sel.node(), { backgroundColor: '#eee' });\n\n    d3.select(c.input);\n    this.completely = c;\n    // close button\n    new_sel.append('button').attr('class', \"button input-close-button\")\n        .text(\"×\")\n        .on('mousedown', function() { this.hide_dropdown(); }.bind(this));\n\n    // map\n    this.map = map;\n    // set up the reaction direction arrow\n    var default_angle = 90; // degrees\n    this.direction_arrow = new DirectionArrow(map.sel);\n    this.direction_arrow.set_rotation(default_angle);\n    this.setup_map_callbacks(map);\n\n    // zoom container\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n\n    // settings\n    this.settings = settings;\n\n    // toggle off\n    this.toggle(false);\n    this.target_coords = null;\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('select_metabolite_with_id.input', function(selected_node, coords) {\n        if (this.is_active) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        }\n        this.hide_target();\n    }.bind(this));\n    map.callback_manager.set('select_selectable.input', function(count, selected_node, coords) {\n        this.hide_target();\n        if (count == 1 && this.is_active && coords) {\n            this.reload(selected_node, coords, false);\n            this.show_dropdown(coords);\n        } else {\n            this.toggle(false);\n        }\n    }.bind(this));\n    map.callback_manager.set('deselect_nodes', function() {\n        this.direction_arrow.hide();\n        this.hide_dropdown();\n    }.bind(this));\n\n    // svg export\n    map.callback_manager.set('before_svg_export', function() {\n        this.direction_arrow.hide();\n        this.hide_target();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.input', function() {\n        if (this.is_active) {\n            this.place_at_selected();\n        }\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n    if (this.is_active) {\n        this.toggle_start_reaction_listener(true);\n        if (_.isNull(this.target_coords))\n            this.reload_at_selected();\n        else\n            this.placed_div.place(this.target_coords);\n        this.show_dropdown();\n        this.map.set_status('Click on the canvas or an existing metabolite');\n        this.direction_arrow.show();\n    } else {\n        this.toggle_start_reaction_listener(false);\n        this.hide_dropdown();\n        this.map.set_status(null);\n        this.direction_arrow.hide();\n    }\n}\n\nfunction show_dropdown(coords) {\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this.hide_dropdown();\n        }.bind(this), true);\n    // dropdown\n    this.completely.input.blur();\n    this.completely.repaint();\n    this.completely.setText('');\n    this.completely.input.focus();\n}\n\nfunction hide_dropdown() {\n    // escape key\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // dropdown\n    this.placed_div.hide();\n    this.completely.input.blur();\n    this.completely.hideDropDown();\n}\n\nfunction place_at_selected() {\n    /** Place autocomplete box at the first selected node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    this.place(coords);\n}\n\nfunction place(coords) {\n    this.placed_div.place(coords);\n    this.direction_arrow.set_location(coords);\n    this.direction_arrow.show();\n}\n\nfunction reload_at_selected() {\n    /** Reload data for autocomplete box and redraw box at the first selected\n     node. */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return false;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    // reload the reaction input\n    this.reload(selected_node, coords, false);\n    return true;\n}\n\nfunction reload(selected_node, coords, starting_from_scratch) {\n    /** Reload data for autocomplete box and redraw box at the new\n     coordinates. */\n\n    // try finding the selected node\n    if (!starting_from_scratch && !selected_node) {\n        console.error('No selected node, and not starting from scratch');\n        return;\n    }\n\n    this.place(coords);\n\n    if (this.map.cobra_model===null) {\n        this.completely.setText('Cannot add: No model.');\n        return;\n    }\n\n    // settings\n    var show_names = this.settings.get_option('identifiers_on_map') == 'name',\n        allow_duplicates = this.settings.get_option('allow_building_duplicate_reactions');\n\n    // Find selected\n    var options = [],\n        cobra_reactions = this.map.cobra_model.reactions,\n        cobra_metabolites = this.map.cobra_model.metabolites,\n        reactions = this.map.reactions,\n        has_data_on_reactions = this.map.has_data_on_reactions,\n        reaction_data = this.map.reaction_data,\n        reaction_data_styles = this.map.reaction_data_styles,\n        selected_m_name = (selected_node ? (show_names ? selected_node.name : selected_node.bigg_id) : ''),\n        bold_mets_in_str = function(str, mets) {\n            return str.replace(new RegExp('(^| )(' + mets.join('|') + ')($| )', 'g'),\n                               '$1<b>$2</b>$3');\n        };\n\n    // for reactions\n    var reaction_suggestions = {};\n    for (var bigg_id in cobra_reactions) {\n        var reaction = cobra_reactions[bigg_id],\n            reaction_name = reaction.name,\n            show_r_name = (show_names ? reaction_name : bigg_id);\n\n        // ignore drawn reactions\n        if ((!allow_duplicates) && already_drawn(bigg_id, reactions))\n            continue;\n\n        // check segments for match to selected metabolite\n        for (var met_bigg_id in reaction.metabolites) {\n\n            // if starting with a selected metabolite, check for that id\n            if (starting_from_scratch || met_bigg_id == selected_node.bigg_id) {\n\n                // don't add suggestions twice\n                if (bigg_id in reaction_suggestions) continue;\n\n                var met_name = cobra_metabolites[met_bigg_id].name;\n\n                if (has_data_on_reactions) {\n                    options.push({ reaction_data: reaction.data,\n                                   html: ('<b>' + show_r_name + '</b>' +\n                                          ': ' +\n                                          reaction.data_string),\n                                   matches: [show_r_name],\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                } else {\n                    // get the metabolite names or IDs\n                    var mets = {},\n                        show_met_names = [];\n                    if (show_names) {\n                        for (var met_id in reaction.metabolites) {\n                            var name = cobra_metabolites[met_id].name;\n                            mets[name] = reaction.metabolites[met_id];\n                            show_met_names.push(name);\n                        }\n                    } else {\n                        mets = utils.clone(reaction.metabolites);\n                        for (var met_id in reaction.metabolites) {\n                            show_met_names.push(met_id);\n                        }\n                    }\n                    var key = show_names ? 'name' : 'bigg_id',\n                        show_gene_names = reaction.genes.map(function(g_obj) {\n                            return g_obj[key];\n                        });\n                    // get the reaction string\n                    var reaction_string = CobraModel.build_reaction_string(mets,\n                                                                           reaction.reversibility,\n                                                                           reaction.lower_bound,\n                                                                           reaction.upper_bound);\n                    options.push({ html: ('<b>' + show_r_name + '</b>' +\n                                          '\\t' +\n                                          bold_mets_in_str(reaction_string, [selected_m_name])),\n                                   matches: [show_r_name].concat(show_met_names).concat(show_gene_names),\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                }\n            }\n        }\n    }\n\n    // Generate the array of reactions to suggest and sort it\n    var sort_fn;\n    if (has_data_on_reactions) {\n        sort_fn = function(x, y) {\n            return Math.abs(y.reaction_data) - Math.abs(x.reaction_data);\n        };\n    } else {\n        sort_fn = function(x, y) {\n            return (x.html.toLowerCase() < y.html.toLowerCase() ? -1 : 1);\n        };\n    }\n    options = options.sort(sort_fn);\n    // set up the box with data, searching for first num results\n    var num = 20,\n        complete = this.completely;\n    complete.options = options;\n\n    // TODO test this behavior\n    // if (strings_to_display.length==1) complete.setText(strings_to_display[0]);\n    // else complete.setText(\"\");\n    complete.setText('');\n\n    var direction_arrow = this.direction_arrow,\n        check_and_build = function(id) {\n            if (id !== null) {\n                // make sure the selected node exists, in case changes were made in the meantime\n                if (starting_from_scratch) {\n                    this.map.new_reaction_from_scratch(id,\n                                                       coords,\n                                                       direction_arrow.get_rotation());\n                } else {\n                    if (!(selected_node.node_id in this.map.nodes)) {\n                        console.error('Selected node no longer exists');\n                        this.hide_dropdown();\n                        return;\n                    }\n                    this.map.new_reaction_for_metabolite(id,\n                                                         selected_node.node_id,\n                                                         direction_arrow.get_rotation());\n                }\n            }\n        }.bind(this);\n    complete.onEnter = function(id) {\n        this.setText('');\n        this.onChange('');\n        check_and_build(id);\n    };\n\n    //definitions\n    function already_drawn(bigg_id, reactions) {\n        for (var drawn_id in reactions) {\n            if (reactions[drawn_id].bigg_id==bigg_id)\n                return true;\n        }\n        return false;\n    };\n}\n\nfunction toggle_start_reaction_listener(on_off) {\n    /** Toggle listening for a click to place a new reaction on the canvas. */\n    if (on_off===undefined)\n        this.start_reaction_listener = !this.start_reaction_listener;\n    else if (this.start_reaction_listener==on_off)\n        return;\n    else\n        this.start_reaction_listener = on_off;\n\n    if (this.start_reaction_listener) {\n        this.map.sel.on('click.start_reaction', function(node) {\n            // TODO fix this hack\n            if (this.direction_arrow.dragging) return;\n            // reload the reaction input\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            // unselect metabolites\n            this.map.deselect_nodes();\n            this.map.deselect_text_labels();\n            // reload the reaction input\n            this.reload(null, coords, true);\n            // generate the target symbol\n            this.show_target(this.map, coords);\n            // show the dropdown\n            this.show_dropdown(coords);\n        }.bind(this, this.map.sel.node()));\n        this.map.sel.classed('start-reaction-cursor', true);\n    } else {\n        this.map.sel.on('click.start_reaction', null);\n        this.map.sel.classed('start-reaction-cursor', false);\n        this.hide_target();\n    }\n}\n\nfunction hide_target() {\n    if (this.target_coords)\n        this.map.sel.selectAll('.start-reaction-target').remove();\n    this.target_coords = null;\n}\n\nfunction show_target(map, coords) {\n    var s = map.sel.selectAll('.start-reaction-target').data([12, 5]);\n    s.enter().append('circle')\n        .classed('start-reaction-target', true)\n        .attr('r', function(d) { return d; })\n        .style('stroke-width', 4);\n    s.style('visibility', 'visible')\n        .attr('transform', 'translate('+coords.x+','+coords.y+')');\n    this.target_coords = coords;\n}\n","/** For documentation of this class, see docs/javascript_api.rst\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar BuildInput = require('./BuildInput');\nvar ZoomContainer = require('./ZoomContainer');\nvar Map = require('./Map');\nvar CobraModel = require('./CobraModel');\nvar Brush = require('./Brush');\nvar CallbackManager = require('./CallbackManager');\nvar ui = require('./ui');\nvar SearchBar = require('./SearchBar');\nvar Settings = require('./Settings');\nvar SettingsMenu = require('./SettingsMenu');\nvar TextEditInput = require('./TextEditInput');\nvar QuickJump = require('./QuickJump');\nvar data_styles = require('./data_styles');\nvar builder_embed = require('./inline').builder_embed;\n\n\nvar Builder = utils.make_class();\nBuilder.prototype = {\n    init: init,\n    load_map: load_map,\n    load_model: load_model,\n    _set_mode: _set_mode,\n    view_mode: view_mode,\n    build_mode: build_mode,\n    brush_mode: brush_mode,\n    zoom_mode: zoom_mode,\n    rotate_mode: rotate_mode,\n    text_mode: text_mode,\n    set_reaction_data: set_reaction_data,\n    set_metabolite_data: set_metabolite_data,\n    set_gene_data: set_gene_data,\n    _update_data: _update_data,\n    _toggle_direction_buttons: _toggle_direction_buttons,\n    _setup_menu: _setup_menu,\n    _setup_simple_zoom_buttons: _setup_simple_zoom_buttons,\n    _setup_status: _setup_status,\n    _setup_quick_jump: _setup_quick_jump,\n    _setup_modes: _setup_modes,\n    _get_keys: _get_keys,\n    _setup_confirm_before_exit: _setup_confirm_before_exit\n};\nmodule.exports = Builder;\n\n\nfunction init(map_data, model_data, embedded_css, selection, options) {\n\n    // defaults\n    if (!selection)\n        selection = d3.select('body').append('div');\n    if (!options)\n        options = {};\n    if (!embedded_css)\n        embedded_css = builder_embed;\n\n    this.map_data = map_data;\n    this.model_data = model_data;\n    this.embedded_css = embedded_css;\n    this.selection = selection;\n\n    // apply this object as data for the selection\n    this.selection.datum(this);\n\n    // set defaults\n    this.options = utils.set_options(options, {\n        // view options\n        menu: 'all',\n        scroll_behavior: 'pan',\n        use_3d_transform: false,\n        enable_editing: true,\n        enable_keys: true,\n        enable_search: true,\n        fill_screen: false,\n        zoom_to_element: null,\n        // map, model, and styles\n        starting_reaction: null,\n        never_ask_before_quit: false,\n        unique_map_id: null,\n        primary_metabolite_radius: 20,\n        secondary_metabolite_radius: 10,\n        marker_radius: 5,\n        gene_font_size: 18,\n        hide_secondary_metabolites: false,\n        show_gene_reaction_rules: false,\n        hide_all_labels: false,\n        // applied data\n        // reaction\n        reaction_data: null,\n        reaction_styles: ['color', 'size', 'text'],\n        reaction_compare_style: 'log2_fold',\n        reaction_scale: [{ type: 'min', color: '#c8c8c8', size: 12 },\n                         { type: 'median', color: '#9696ff', size: 20 },\n                         { type: 'max', color: '#ff0000', size: 25 }],\n        reaction_no_data_color: '#dcdcdc',\n        reaction_no_data_size: 8,\n        // gene\n        gene_data: null,\n        and_method_in_gene_reaction_rule: 'mean',\n        // metabolite\n        metabolite_data: null,\n        metabolite_styles: ['color', 'size', 'text'],\n        metabolite_compare_style: 'log2_fold',\n        metabolite_scale: [ { type: 'min', color: '#fffaf0', size: 20 },\n                            { type: 'median', color: '#f1c470', size: 30 },\n                            { type: 'max', color: '#800000', size: 40 } ],\n        metabolite_no_data_color: '#ffffff',\n        metabolite_no_data_size: 10,\n        // View and build options\n        identifiers_on_map: 'bigg_id',\n        highlight_missing: false,\n        allow_building_duplicate_reactions: false,\n        // Callbacks\n        first_load_callback: null\n    }, {\n        primary_metabolite_radius: true,\n        secondary_metabolite_radius: true,\n        marker_radius: true,\n        gene_font_size: true,\n        reaction_no_data_size: true,\n        metabolite_no_data_size: true\n    });\n\n    // check the location\n    if (utils.check_for_parent_tag(this.selection, 'svg')) {\n        throw new Error('Builder cannot be placed within an svg node '+\n                        'becuase UI elements are html-based.');\n    }\n\n    // Initialize the settings\n    var set_option = function(option, new_value) {\n        this.options[option] = new_value;\n    }.bind(this),\n        get_option = function(option) {\n            return this.options[option];\n        }.bind(this),\n        // the options that are erased when the settings menu is canceled\n        conditional_options = ['hide_secondary_metabolites', 'show_gene_reaction_rules',\n                               'hide_all_labels', 'scroll_behavior', 'use_3d_transform', 'reaction_styles',\n                               'reaction_compare_style', 'reaction_scale',\n                               'reaction_no_data_color', 'reaction_no_data_size',\n                               'and_method_in_gene_reaction_rule', 'metabolite_styles',\n                               'metabolite_compare_style', 'metabolite_scale',\n                               'metabolite_no_data_color', 'metabolite_no_data_size',\n                               'identifiers_on_map', 'highlight_missing',\n                               'allow_building_duplicate_reactions',];\n    this.settings = new Settings(set_option, get_option, conditional_options);\n\n    // check the scales have max and min\n    ['reaction_scale', 'metabolite_scale'].forEach(function(name) {\n        this.settings.streams[name].onValue(function(val) {\n            ['min', 'max'].forEach(function(type) {\n                var has = val.reduce(function(has_found, scale_el) {\n                    return has_found || (scale_el.type == type);\n                }, false);\n                if (!has) {\n                    val.push({ type: type, color: '#ffffff', size: 10 });\n                    this.settings.set_conditional(name, val);\n                }\n            }.bind(this));\n        }.bind(this));\n    }.bind(this));\n    // TODO warn about repeated types in the scale\n\n    // set up this callback manager\n    this.callback_manager = CallbackManager();\n    if (this.options.first_load_callback !== null)\n        this.callback_manager.set('first_load', this.options.first_load_callback);\n\n    // load the model, map, and update data in both\n    this.load_model(this.model_data, false);\n    this.load_map(this.map_data, false);\n    this._update_data(true, true);\n\n    // setting callbacks\n    // TODO enable atomic updates. Right now, every time\n    // the menu closes, everything is drawn.\n    this.settings.status_bus\n        .onValue(function(x) {\n            if (x === 'accepted') {\n                this._update_data(true, true, ['reaction', 'metabolite'], false);\n                if (this.zoom_container !== null) {\n                    var new_behavior = this.settings.get_option('scroll_behavior');\n                    this.zoom_container.set_scroll_behavior(new_behavior);\n                    this.zoom_container.set_use_3d_transform(this.settings.get_option('use_3d_transform'));\n                }\n                if (this.map !== null) {\n                    this.map.draw_all_nodes(false);\n                    this.map.draw_all_reactions(true, false);\n                }\n            }\n        }.bind(this));\n\n    this.callback_manager.run('first_load', this);\n}\n\nfunction load_model(model_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Check the cobra model\n    if (model_data === null)\n        this.cobra_model = null;\n    else\n        this.cobra_model = CobraModel.from_cobra_json(model_data);\n\n    if (this.map) {\n        this.map.cobra_model = this.cobra_model;\n        if (should_update_data)\n            this._update_data(true, false);\n        if (this.settings.get_option('highlight_missing'))\n            this.map.draw_all_reactions(false, false);\n    }\n\n    this.callback_manager.run('load_model', null, model_data, should_update_data);\n}\n\nfunction load_map(map_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst\n\n     */\n\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Begin with some definitions\n    var selectable_mousedown_enabled = true,\n        shift_key_on = false;\n\n    // remove the old builder\n    utils.remove_child_nodes(this.selection);\n\n    // set up the zoom container\n    this.zoom_container = new ZoomContainer(this.selection,\n                                            this.options.scroll_behavior,\n                                            this.options.use_3d_transform,\n                                            this.options.fill_screen);\n    var zoomed_sel = this.zoom_container.zoomed_sel;\n    var svg = this.zoom_container.svg;\n\n    if (map_data!==null) {\n        // import map\n        this.map = Map.from_data(map_data,\n                                 svg,\n                                 this.embedded_css,\n                                 zoomed_sel,\n                                 this.zoom_container,\n                                 this.settings,\n                                 this.cobra_model,\n                                 this.options.enable_search);\n    } else {\n        // new map\n        this.map = new Map(svg,\n                           this.embedded_css,\n                           zoomed_sel,\n                           this.zoom_container,\n                           this.settings,\n                           this.cobra_model,\n                           null,\n                           this.options.enable_search);\n    }\n    // zoom container status changes\n    this.zoom_container.callback_manager.set('svg_start', function() {\n        this.map.set_status('Drawing ...');\n    }.bind(this));\n    this.zoom_container.callback_manager.set('svg_finish', function() {\n        this.map.set_status('');\n    }.bind(this));\n\n    // set the data for the map\n    if (should_update_data)\n        this._update_data(false, true);\n\n    // set up the reaction input with complete.ly\n    this.build_input = BuildInput(this.selection, this.map,\n                                  this.zoom_container, this.settings);\n\n    // set up the text edit input\n    this.text_edit_input = TextEditInput(this.selection, this.map,\n                                         this.zoom_container);\n\n    // set up the Brush\n    this.brush = new Brush(zoomed_sel, false, this.map, '.canvas-group');\n    this.map.canvas.callback_manager.set('resize', function() {\n        this.brush.toggle(true);\n    }.bind(this));\n\n    // set up the modes\n    this._setup_modes(this.map, this.brush, this.zoom_container);\n\n    var s = this.selection\n            .append('div').attr('class', 'search-menu-container')\n            .append('div').attr('class', 'search-menu-container-inline'),\n        menu_div = s.append('div'),\n        search_bar_div = s.append('div'),\n        button_div = this.selection.append('div');\n\n    // set up the search bar\n    this.search_bar = SearchBar(search_bar_div, this.map.search_index,\n                                this.map);\n    // set up the hide callbacks\n    this.search_bar.callback_manager.set('show', function() {\n        this.settings_bar.toggle(false);\n    }.bind(this));\n\n    // set up the settings\n    var settings_div = this.selection.append('div');\n    this.settings_bar = SettingsMenu(settings_div, this.settings, this.map,\n                                     function(type, on_off) {\n                                         // temporarily set the abs type, for\n                                         // previewing it in the Settings\n                                         // menu\n                                         var o = this.options[type + '_styles'];\n                                         if (on_off && o.indexOf('abs') == -1)\n                                             o.push('abs');\n                                         else if (!on_off) {\n                                             var i = o.indexOf('abs');\n                                             if (i != -1)\n                                                 this.options[type + '_styles'] = o.slice(0, i).concat(o.slice(i + 1));\n                                         }\n                                         this._update_data(false, true, type);\n                                     }.bind(this));\n    this.settings_bar.callback_manager.set('show', function() {\n        this.search_bar.toggle(false);\n    }.bind(this));\n\n    // set up key manager\n    var keys = this._get_keys(this.map, this.zoom_container,\n                              this.search_bar, this.settings_bar,\n                              this.options.enable_editing);\n    this.map.key_manager.assigned_keys = keys;\n    // tell the key manager about the reaction input and search bar\n    this.map.key_manager.input_list = [this.build_input, this.search_bar,\n                                       this.settings_bar, this.text_edit_input];\n    // make sure the key manager remembers all those changes\n    this.map.key_manager.update();\n    // turn it on/off\n    this.map.key_manager.toggle(this.options.enable_keys);\n\n    // set up menu and status bars\n    if (this.options.menu=='all') {\n        this._setup_menu(menu_div, button_div, this.map, this.zoom_container, this.map.key_manager, keys,\n                         this.options.enable_editing, this.options.enable_keys);\n    } else if (this.options.menu=='zoom') {\n        this._setup_simple_zoom_buttons(button_div, keys);\n    }\n\n    // setup selection box\n    if (this.options.zoom_to_element) {\n        var type = this.options.zoom_to_element.type,\n            element_id = this.options.zoom_to_element.id;\n        if (typeof type === 'undefined' || ['reaction', 'node'].indexOf(type) == -1)\n            throw new Error('zoom_to_element type must be \"reaction\" or \"node\"');\n        if (typeof element_id === 'undefined')\n            throw new Error('zoom_to_element must include id');\n        if (type == 'reaction')\n            this.map.zoom_to_reaction(element_id);\n        else if (type == 'node')\n            this.map.zoom_to_node(element_id);\n    } else if (map_data !== null) {\n        this.map.zoom_extent_canvas();\n    } else {\n        if (this.options.starting_reaction !== null && this.cobra_model !== null) {\n            // Draw default reaction if no map is provided\n            var size = this.zoom_container.get_size();\n            var start_coords = { x: size.width / 2,\n                                 y: size.height / 4 };\n            this.map.new_reaction_from_scratch(this.options.starting_reaction, start_coords, 90);\n            this.map.zoom_extent_nodes();\n        } else {\n            this.map.zoom_extent_canvas();\n        }\n    }\n\n    // status in both modes\n    var status = this._setup_status(this.selection, this.map);\n\n    // set up quick jump\n    this._setup_quick_jump(this.selection);\n\n    // start in zoom mode for builder, view mode for viewer\n    if (this.options.enable_editing)\n        this.zoom_mode();\n    else\n        this.view_mode();\n\n    // confirm before leaving the page\n    if (this.options.enable_editing)\n        this._setup_confirm_before_exit();\n\n    // draw\n    this.map.draw_everything();\n}\n\nfunction _set_mode(mode) {\n    this.search_bar.toggle(false);\n    // input\n    this.build_input.toggle(mode=='build');\n    this.build_input.direction_arrow.toggle(mode=='build');\n    if (this.options.menu=='all' && this.options.enable_editing)\n        this._toggle_direction_buttons(mode=='build');\n    // brush\n    this.brush.toggle(mode=='brush');\n    // zoom\n    this.zoom_container.toggle_pan_drag(mode=='zoom' || mode=='view');\n    // resize canvas\n    this.map.canvas.toggle_resize(mode=='zoom' || mode=='brush');\n    // Behavior. Be careful of the order becuase rotation and\n    // toggle_selectable_drag both use Behavior.selectable_drag.\n    if (mode == 'rotate') {\n        this.map.behavior.toggle_selectable_drag(false); // before toggle_rotation_mode\n        this.map.behavior.toggle_rotation_mode(true);\n    } else {\n        this.map.behavior.toggle_rotation_mode(mode=='rotate'); // before toggle_selectable_drag\n        this.map.behavior.toggle_selectable_drag(mode=='brush');\n    }\n    this.map.behavior.toggle_selectable_click(mode=='build' || mode=='brush');\n    this.map.behavior.toggle_label_drag(mode=='brush');\n    this.map.behavior.toggle_label_mousedown(mode=='brush');\n    this.map.behavior.toggle_text_label_edit(mode=='text');\n    this.map.behavior.toggle_bezier_drag(mode=='brush');\n    // edit selections\n    if (mode=='view' || mode=='text')\n        this.map.select_none();\n    if (mode=='rotate')\n        this.map.deselect_text_labels();\n    this.map.draw_everything();\n}\n\nfunction view_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('view_mode');\n    this._set_mode('view');\n}\n\nfunction build_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('build_mode');\n    this._set_mode('build');\n}\n\nfunction brush_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('brush_mode');\n    this._set_mode('brush');\n}\n\nfunction zoom_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('zoom_mode');\n    this._set_mode('zoom');\n}\n\nfunction rotate_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('rotate_mode');\n    this._set_mode('rotate');\n}\n\nfunction text_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('text_mode');\n    this._set_mode('text');\n}\n\nfunction set_reaction_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.reaction_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_gene_data(data, clear_gene_reaction_rules) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (clear_gene_reaction_rules) // default undefined\n        this.settings.set_conditional('show_gene_reaction_rules', false);\n    this.options.gene_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_metabolite_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.metabolite_data = data;\n    this._update_data(true, true, 'metabolite');\n    this.map.set_status('');\n}\n\nfunction _update_data(update_model, update_map, kind, should_draw) {\n    /** Set data and settings for the model.\n\n     Arguments\n     ---------\n\n     update_model: (Boolean) Update data for the model.\n\n     update_map: (Boolean) Update data for the map.\n\n     kind: (Optional, Default: all) An array defining which data is being\n     updated that can include any of: ['reaction', 'metabolite'].\n\n     should_draw: (Optional, Default: true) Whether to redraw the update\n     sections of the map.\n\n     */\n\n    // defaults\n    if (kind === undefined)\n        kind = ['reaction', 'metabolite'];\n    if (should_draw === undefined)\n        should_draw = true;\n\n    var update_metabolite_data = (kind.indexOf('metabolite') != -1),\n        update_reaction_data = (kind.indexOf('reaction') != -1),\n        met_data_object,\n        reaction_data_object,\n        gene_data_object;\n\n    // -------------------\n    // First map, and draw\n\n    // metabolite data\n    if (update_metabolite_data && update_map && this.map !== null) {\n        met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                       'metabolite_data');\n        this.map.apply_metabolite_data_to_map(met_data_object);\n        if (should_draw)\n            this.map.draw_all_nodes(false);\n    }\n\n    // reaction data\n    if (update_reaction_data) {\n        if (this.options.reaction_data !== null && update_map && this.map !== null) {\n            reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                'reaction_data');\n            this.map.apply_reaction_data_to_map(reaction_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (this.options.gene_data !== null && update_map && this.map !== null) {\n            gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                     this.cobra_model, this.map);\n            this.map.apply_gene_data_to_map(gene_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (update_map && this.map !== null) {\n            // clear the data\n            this.map.apply_reaction_data_to_map(null);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        }\n    }\n\n    // ----------------------------------------------------------------\n    // Then the model, after drawing. Delay by 5ms so the the map draws\n    // first.\n\n    // if this function runs again, cancel the previous model update\n    if (this.update_model_timer)\n        clearTimeout(this.update_model_timer);\n\n    var delay = 5;\n    this.update_model_timer = setTimeout(function() {\n\n        // metabolite_data\n        if (update_metabolite_data && update_model && this.cobra_model !== null) {\n            // if we haven't already made this\n            if (!met_data_object)\n                met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                               'metabolite_data');\n            this.cobra_model.apply_metabolite_data(met_data_object,\n                                                   this.options.metabolite_styles,\n                                                   this.options.metabolite_compare_style);\n        }\n\n        // reaction data\n        if (update_reaction_data) {\n            if (this.options.reaction_data !== null && update_model && this.cobra_model !== null) {\n                // if we haven't already made this\n                if (!reaction_data_object)\n                    reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                        'reaction_data');\n                this.cobra_model.apply_reaction_data(reaction_data_object,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            } else if (this.options.gene_data !== null && update_model && this.cobra_model !== null) {\n                if (!gene_data_object)\n                    gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                             this.cobra_model, this.map);\n                this.cobra_model.apply_gene_data(gene_data_object,\n                                                 this.options.reaction_styles,\n                                                 this.options.identifiers_on_map,\n                                                 this.options.reaction_compare_style,\n                                                 this.options.and_method_in_gene_reaction_rule);\n            } else if (update_model && this.cobra_model !== null) {\n                // clear the data\n                this.cobra_model.apply_reaction_data(null,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            }\n        }\n\n        // callback\n        this.callback_manager.run('update_data', null, update_model, update_map, kind, should_draw);\n\n    }.bind(this), delay);\n\n    // definitions\n    function make_gene_data_object(gene_data, cobra_model, map) {\n        var all_reactions = {};\n        if (cobra_model !== null)\n            utils.extend(all_reactions, cobra_model.reactions);\n        // extend, overwrite\n        if (map !== null)\n            utils.extend(all_reactions, map.reactions, true);\n\n        // this object has reaction keys and values containing associated genes\n        return data_styles.import_and_check(gene_data, 'gene_data', all_reactions);\n    }\n}\n\nfunction _setup_menu(menu_selection, button_selection, map, zoom_container,\n                     key_manager, keys, enable_editing, enable_keys) {\n    var menu = menu_selection.attr('id', 'menu')\n            .append('ul')\n            .attr('class', 'nav nav-pills');\n    // map dropdown\n    ui.dropdown_menu(menu, 'Map')\n        .button({ key: keys.save,\n                  text: 'Save map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+S)' : null) })\n        .button({ text: 'Load map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+O)' : null),\n                  input: { assign: key_manager.assigned_keys.load,\n                           key: 'fn',\n                           fn: load_map_for_file.bind(this),\n                           pre_fn: function() {\n                               map.set_status('Loading map ...');\n                           },\n                           failure_fn: function() {\n                               map.set_status('');\n                           }}\n                })\n        .button({ key: keys.save_svg,\n                  text: 'Export as SVG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+S)' : null) })\n        .button({ key: keys.clear_map,\n                  text: 'Clear map' });\n    // model dropdown\n    var model_menu = ui.dropdown_menu(menu, 'Model')\n            .button({ text: 'Load COBRA model JSON',\n                      key_text: (enable_keys ? ' (Ctrl+M)' : null),\n                      input: { assign: key_manager.assigned_keys.load_model,\n                               key: 'fn',\n                               fn: load_model_for_file.bind(this),\n                               pre_fn: function() {\n                                   map.set_status('Loading model ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               } }\n                    })\n            .button({ id: 'convert_map',\n                      key: keys.convert_map,\n                      text: 'Update names and gene reaction rules using model' })\n            .button({ id: 'clear_model',\n                      key: keys.clear_model,\n                      text: 'Clear model' });\n    // disable the clear and convert buttons\n    var disable_model_clear_convert = function() {\n        model_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if ((d.id == 'clear_model' || d.id == 'convert_map') &&\n                    this.cobra_model === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_model_clear_convert();\n    this.callback_manager.set('load_model', disable_model_clear_convert);\n\n    // data dropdown\n    var data_menu = ui.dropdown_menu(menu, 'Data')\n            .button({ input: { assign: key_manager.assigned_keys.load_reaction_data,\n                               key: 'fn',\n                               fn: load_reaction_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading reaction data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load reaction data' })\n            .button({ key: keys.clear_reaction_data,\n                      text: 'Clear reaction data' })\n            .divider()\n            .button({ input: { fn: load_gene_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading gene data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load gene data' })\n            .button({ key: keys.clear_gene_data,\n                      text: 'Clear gene data' })\n            .divider()\n            .button({ input: { fn: load_metabolite_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading metabolite data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load metabolite data' })\n            .button({ key: keys.clear_metabolite_data,\n                      text: 'Clear metabolite data' });\n\n    // update the buttons\n    var disable_clears = function() {\n        data_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if (!d) return null;\n                if (d.text == 'Clear reaction data' && this.options.reaction_data === null)\n                    return true;\n                if (d.text == 'Clear gene data' && this.options.gene_data === null)\n                    return true;\n                if (d.text == 'Clear metabolite data' && this.options.metabolite_data === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_clears();\n    this.callback_manager.set('update_data', disable_clears);\n\n    // edit dropdown\n    var edit_menu = ui.dropdown_menu(menu, 'Edit', true);\n    if (enable_editing) {\n        edit_menu\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-menu-button',\n                      text: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-menu-button',\n                      text: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-menu-button',\n                      text: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-menu-button',\n                      text: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-menu-button',\n                      text: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) })\n            .divider()\n            .button({ key: keys.delete,\n                      text: 'Delete',\n                      key_text: (enable_keys ? ' (Del)' : null) })\n            .button({ key: keys.undo,\n                      text: 'Undo',\n                      key_text: (enable_keys ? ' (Ctrl+Z)' : null) })\n            .button({ key: keys.redo,\n                      text: 'Redo',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+Z)' : null) })\n            .button({ key: keys.toggle_primary,\n                      text: 'Toggle primary/secondary',\n                      key_text: (enable_keys ? ' (P)' : null) })\n            .button({ key: keys.cycle_primary,\n                      text: 'Rotate reactant locations',\n                      key_text: (enable_keys ? ' (C)' : null) })\n            .button({ key: keys.select_all,\n                      text: 'Select all',\n                      key_text: (enable_keys ? ' (Ctrl+A)' : null) })\n            .button({ key: keys.select_none,\n                      text: 'Select none',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+A)' : null) })\n            .button({ key: keys.invert_selection,\n                      text: 'Invert selection' });\n    } else {\n        edit_menu.button({ key: keys.view_mode,\n                           id: 'view-mode-menu-button',\n                           text: 'View mode' });\n    }\n\n    // view dropdown\n    var view_menu = ui.dropdown_menu(menu, 'View', true)\n            .button({ key: keys.zoom_in,\n                      text: 'Zoom in',\n                      key_text: (enable_keys ? ' (Ctrl and +)' : null) })\n            .button({ key: keys.zoom_out,\n                      text: 'Zoom out',\n                      key_text: (enable_keys ? ' (Ctrl and -)' : null) })\n            .button({ key: keys.extent_nodes,\n                      text: 'Zoom to nodes',\n                      key_text: (enable_keys ? ' (Ctrl+0)' : null) })\n            .button({ key: keys.extent_canvas,\n                      text: 'Zoom to canvas',\n                      key_text: (enable_keys ? ' (Ctrl+1)' : null) })\n            .button({ key: keys.search,\n                      text: 'Find',\n                      key_text: (enable_keys ? ' (Ctrl+F)' : null) });\n    if (enable_editing) {\n        view_menu.button({ key: keys.toggle_beziers,\n                           id: 'bezier-button',\n                           text: 'Show control points',\n                           key_text: (enable_keys ? ' (B)' : null) });\n        map.callback_manager\n            .set('toggle_beziers.button', function(on_off) {\n                menu.select('#bezier-button').select('.dropdown-button-text')\n                    .text((on_off ? 'Hide' : 'Show') +\n                          ' control points' +\n                          (enable_keys ? ' (B)' : ''));\n            });\n    }\n    view_menu.divider()\n        .button({ key: keys.show_settings,\n                  text: 'Settings',\n                  key_text: (enable_keys ? ' (Ctrl+,)' : null) });\n\n    // help\n    menu.append('a')\n        .attr('class', 'help-button')\n        .attr('target', '#')\n        .attr('href', 'https://escher.readthedocs.org')\n        .text('?');\n\n    var button_panel = button_selection.append('ul')\n            .attr('class', 'nav nav-pills nav-stacked')\n            .attr('id', 'button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_in,\n                           icon: 'glyphicon glyphicon-plus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom in',\n                           key_text: (enable_keys ? ' (Ctrl and +)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_out,\n                           icon: 'glyphicon glyphicon-minus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom out',\n                           key_text: (enable_keys ? ' (Ctrl and -)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.extent_canvas,\n                           icon: 'glyphicon glyphicon-resize-full',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom to canvas',\n                           key_text: (enable_keys ? ' (Ctrl+1)' : null) });\n\n    // mode buttons\n    if (enable_editing) {\n        ui.radio_button_group(button_panel.append('li'))\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-button',\n                      icon: 'glyphicon glyphicon-move',\n                      tooltip: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-button',\n                      icon: 'glyphicon glyphicon-hand-up',\n                      tooltip: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-button',\n                      icon: 'glyphicon glyphicon-plus',\n                      tooltip: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-button',\n                      icon: 'glyphicon glyphicon-repeat',\n                      tooltip: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-button',\n                      icon: 'glyphicon glyphicon-font',\n                      tooltip: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) });\n\n        // arrow buttons\n        this.direction_buttons = button_panel.append('li');\n        var o = ui.button_group(this.direction_buttons)\n                .button({ key: keys.direction_arrow_left,\n                          icon: 'glyphicon glyphicon-arrow-left',\n                          tooltip: 'Direction arrow (←)' })\n                .button({ key: keys.direction_arrow_right,\n                          icon: 'glyphicon glyphicon-arrow-right',\n                          tooltip: 'Direction arrow (→)' })\n                .button({ key: keys.direction_arrow_up,\n                          icon: 'glyphicon glyphicon-arrow-up',\n                          tooltip: 'Direction arrow (↑)' })\n                .button({ key: keys.direction_arrow_down,\n                          icon: 'glyphicon glyphicon-arrow-down',\n                          tooltip: 'Direction arrow (↓)' });\n    }\n\n    // set up mode callbacks\n    var select_button = function(id) {\n        // toggle the button\n        $(this.selection.node()).find('#' + id)\n            .button('toggle');\n\n        // menu buttons\n        var ids = ['zoom-mode-menu-button', 'brush-mode-menu-button',\n                   'build-mode-menu-button', 'rotate-mode-menu-button',\n                   'view-mode-menu-button', 'text-mode-menu-button'];\n        ids.forEach(function(this_id) {\n            var b_id = this_id.replace('-menu', '');\n            this.selection.select('#' + this_id)\n                .select('span')\n                .classed('glyphicon', b_id == id)\n                .classed('glyphicon-ok', b_id == id);\n        }.bind(this));\n    };\n    this.callback_manager.set('zoom_mode', select_button.bind(this, 'zoom-mode-button'));\n    this.callback_manager.set('brush_mode', select_button.bind(this, 'brush-mode-button'));\n    this.callback_manager.set('build_mode', select_button.bind(this, 'build-mode-button'));\n    this.callback_manager.set('rotate_mode', select_button.bind(this, 'rotate-mode-button'));\n    this.callback_manager.set('view_mode', select_button.bind(this, 'view-mode-button'));\n    this.callback_manager.set('text_mode', select_button.bind(this, 'text-mode-button'));\n\n    // definitions\n    function load_map_for_file(error, map_data) {\n        /** Load a map. This reloads the whole builder.\n\n         */\n\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading map: ' + error, 2000);\n            return;\n        }\n\n        try {\n            check_map(map_data);\n            this.load_map(map_data);\n            this.map.set_status('Loaded map ' + map_data[0].map_name, 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading map: ' + e, 2000);\n        }\n\n        // definitions\n        function check_map(data) {\n            /** Perform a quick check to make sure the map is mostly valid.\n\n             */\n\n            if (!('map_id' in data[0] && 'reactions' in data[1] &&\n                  'nodes' in data[1] && 'canvas' in data[1]))\n                throw new Error('Bad map data.');\n        }\n    }\n    function load_model_for_file(error, data) {\n        /** Load a cobra model. Redraws the whole map if the\n         highlight_missing option is true.\n\n         */\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading model: ' + error, 2000);\n            return;\n        }\n\n        try {\n            this.load_model(data, true);\n            this.build_input.toggle(false);\n            if ('id' in data)\n                this.map.set_status('Loaded model ' + data.id, 3000);\n            else\n                this.map.set_status('Loaded model (no model id)', 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading model: ' + e, 2000);\n        }\n\n    }\n    function load_reaction_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off gene data\n        if (data !== null)\n            this.set_gene_data(null);\n\n        this.set_reaction_data(data);\n    }\n    function load_metabolite_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        this.set_metabolite_data(data);\n    }\n    function load_gene_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off reaction data\n        if (data !== null)\n            this.set_reaction_data(null);\n\n        // turn on gene_reaction_rules\n        this.settings.set_conditional('show_gene_reaction_rules', true);\n\n        this.set_gene_data(data);\n    }\n}\n\nfunction _setup_simple_zoom_buttons(button_selection, keys) {\n    var button_panel = button_selection.append('div')\n            .attr('id', 'simple-button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_in,\n                           text: '+',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom in (Ctrl +)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_out,\n                           text: '–',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom out (Ctrl -)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.extent_canvas,\n                           text: '↔',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom to canvas (Ctrl 1)' });\n\n}\n\nfunction _toggle_direction_buttons(on_off) {\n    if (on_off===undefined)\n        on_off = !this.direction_buttons.style('visibility')=='visible';\n    this.direction_buttons.style('visibility', on_off ? 'visible' : 'hidden');\n}\n\nfunction _setup_status(selection, map) {\n    var status_bar = selection.append('div').attr('id', 'status');\n    map.callback_manager.set('set_status', function(status) {\n        status_bar.html(status);\n    });\n    return status_bar;\n}\n\nfunction _setup_quick_jump(selection) {\n    // function to load a map\n    var load_fn = function(new_map_name, quick_jump_path, callback) {\n        if (this.options.enable_editing && !this.options.never_ask_before_quit) {\n            if (!(confirm(('You will lose any unsaved changes.\\n\\n' +\n                           'Are you sure you want to switch maps?')))) {\n                if (callback) callback(false);\n                return;\n            }\n        }\n        this.map.set_status('Loading map ' + new_map_name + ' ...');\n        var url = utils.name_to_url(new_map_name, quick_jump_path);\n        d3.json(url, function(error, data) {\n            if (error) {\n                console.warn('Could not load data: ' + error);\n                if (callback) callback(false);\n            }\n            // run callback before load_map so the new map has the correct\n            // quick_jump menu\n            if (callback) callback(true);\n            // now reload\n            this.load_map(data);\n            this.map.set_status('');\n        }.bind(this));\n    }.bind(this);\n\n    // make the quick jump object\n    this.quick_jump = QuickJump(selection, load_fn);\n}\n\nfunction _setup_modes(map, brush, zoom_container) {\n    // set up zoom+pan and brush modes\n    var was_enabled = {};\n    map.callback_manager.set('start_rotation', function() {\n        was_enabled.brush = brush.enabled;\n        brush.toggle(false);\n        was_enabled.zoom = zoom_container.zoom_on;\n        zoom_container.toggle_pan_drag(false);\n        was_enabled.selectable_mousedown = map.behavior.selectable_mousedown!=null;\n        map.behavior.toggle_selectable_click(false);\n        was_enabled.label_mousedown = map.behavior.label_mousedown!=null;\n        map.behavior.toggle_label_mousedown(false);\n    });\n    map.callback_manager.set('end_rotation', function() {\n        brush.toggle(was_enabled.brush);\n        zoom_container.toggle_pan_drag(was_enabled.zoom);\n        map.behavior.toggle_selectable_click(was_enabled.selectable_mousedown);\n        map.behavior.toggle_label_mousedown(was_enabled.label_mousedown);\n        was_enabled = {};\n    });\n}\n\nfunction _get_keys(map, zoom_container, search_bar, settings_bar, enable_editing) {\n    var keys = {\n        save: {\n            key: 'ctrl+s',\n            target: map,\n            fn: map.save\n        },\n        save_svg: {\n            key: 'ctrl+shift+s',\n            target: map,\n            fn: map.save_svg\n        },\n        load: {\n            key: 'ctrl+o',\n            fn: null  // defined by button\n        },\n        convert_map: {\n            target: map,\n            fn: map.convert_map\n        },\n        clear_map: {\n            target: map,\n            fn: map.clear_map\n        },\n        load_model: {\n            key: 'ctrl+m',\n            fn: null // defined by button\n        },\n        clear_model: {\n            fn: this.load_model.bind(this, null, true)\n        },\n        load_reaction_data: { fn: null }, // defined by button\n        clear_reaction_data: {\n            target: this,\n            fn: function() { this.set_reaction_data(null); }\n        },\n        load_metabolite_data: { fn: null }, // defined by button\n        clear_metabolite_data: {\n            target: this,\n            fn: function() { this.set_metabolite_data(null); }\n        },\n        load_gene_data: { fn: null }, // defined by button\n        clear_gene_data: {\n            target: this,\n            fn: function() { this.set_gene_data(null, true); }\n        },\n        zoom_in: {\n            key: 'ctrl+=',\n            target: zoom_container,\n            fn: zoom_container.zoom_in\n        },\n        zoom_out: {\n            key: 'ctrl+-',\n            target: zoom_container,\n            fn: zoom_container.zoom_out\n        },\n        extent_nodes: {\n            key: 'ctrl+0',\n            target: map,\n            fn: map.zoom_extent_nodes\n        },\n        extent_canvas: {\n            key: 'ctrl+1',\n            target: map,\n            fn: map.zoom_extent_canvas\n        },\n        search: {\n            key: 'ctrl+f',\n            fn: search_bar.toggle.bind(search_bar, true)\n        },\n        view_mode: {\n            target: this,\n            fn: this.view_mode,\n            ignore_with_input: true\n        },\n        show_settings: {\n            key: 'ctrl+,',\n            target: settings_bar,\n            fn: settings_bar.toggle\n        }\n    };\n    if (enable_editing) {\n        utils.extend(keys, {\n            build_mode: {\n                key: 'n',\n                target: this,\n                fn: this.build_mode,\n                ignore_with_input: true\n            },\n            zoom_mode: {\n                key: 'z',\n                target: this,\n                fn: this.zoom_mode,\n                ignore_with_input: true\n            },\n            brush_mode: {\n                key: 'v',\n                target: this,\n                fn: this.brush_mode,\n                ignore_with_input: true\n            },\n            rotate_mode: {\n                key: 'r',\n                target: this,\n                fn: this.rotate_mode,\n                ignore_with_input: true\n            },\n            text_mode: {\n                key: 't',\n                target: this,\n                fn: this.text_mode,\n                ignore_with_input: true\n            },\n            toggle_beziers: {\n                key: 'b',\n                target: map,\n                fn: map.toggle_beziers,\n                ignore_with_input: true\n            },\n            delete: {\n                key: 'ctrl+backspace',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            delete_del: {\n                key: 'del',\n                target: map,\n                fn: map.delete_selected,\n                ignore_with_input: true\n            },\n            toggle_primary: {\n                key: 'p',\n                target: map,\n                fn: map.toggle_selected_node_primary,\n                ignore_with_input: true\n            },\n            cycle_primary: {\n                key: 'c',\n                target: map,\n                fn: map.cycle_primary_node,\n                ignore_with_input: true\n            },\n            direction_arrow_right: {\n                key: 'right',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.right,\n                ignore_with_input: true\n            },\n            direction_arrow_down: {\n                key: 'down',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.down,\n                ignore_with_input: true\n            },\n            direction_arrow_left: {\n                key: 'left',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.left,\n                ignore_with_input: true\n            },\n            direction_arrow_up: {\n                key: 'up',\n                target: this.build_input.direction_arrow,\n                fn: this.build_input.direction_arrow.up,\n                ignore_with_input: true\n            },\n            undo: {\n                key: 'ctrl+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.undo\n            },\n            redo: {\n                key: 'ctrl+shift+z',\n                target: map.undo_stack,\n                fn: map.undo_stack.redo\n            },\n            select_all: {\n                key: 'ctrl+a',\n                target: map,\n                fn: map.select_all\n            },\n            select_none: {\n                key: 'ctrl+shift+a',\n                target: map,\n                fn: map.select_none\n            },\n            invert_selection: {\n                target: map,\n                fn: map.invert_selection\n            }\n        });\n    }\n    return keys;\n}\n\nfunction _setup_confirm_before_exit() {\n    /** Ask if the user wants to exit the page (to avoid unplanned refresh).\n\n     */\n\n    window.onbeforeunload = function(e) {\n        // If we haven't been passed the event get the window.event\n        e = e || window.event;\n        return  (this.options.never_ask_before_quit ? null :\n                 'You will lose any unsaved changes.');\n    }.bind(this);\n}\n","/** CallbackManager */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\n\nvar CallbackManager = utils.make_class();\nCallbackManager.prototype = {\n    init: init,\n    set: set,\n    remove: remove,\n    run: run\n};\nmodule.exports = CallbackManager;\n\n\nfunction init() {\n\n}\n\n\nfunction set(name, fn) {\n    /** As in d3 callbacks, you can namespace your callbacks after a period:\n\n     select_metabolite.direction_arrow\n     select_metabolite.input\n\n     Both are called by select_metabolite\n\n\n     TODO add *arguments to set, as in _.defer()\n\n     */\n    if (this.callbacks===undefined) this.callbacks = {};\n    if (this.callbacks[name]===undefined) this.callbacks[name] = [];\n    this.callbacks[name].push(fn);\n\n    return this;\n}\n\n\nfunction remove(name) {\n    /** Remove a callback by name\n\n     */\n    if (this.callbacks===undefined || Object.keys(this.callbacks).length==0) {\n        console.warn('No callbacks to remove');\n    }\n    delete this.callbacks[name];\n    return this;\n}\n\n\nfunction run(name, this_arg) {\n    /** Run all callbacks that match the portion of name before the period ('.').\n\n     Arguments\n     ---------\n\n     name: The callback name, which can include a tag after a '.' to\n     specificy a particular callback.\n\n     this_arg: (Optional, Default: null) The object assigned to `this` in\n     the callback.\n\n     */\n    if (_.isUndefined(this.callbacks)) return this;\n    if (_.isUndefined(this_arg)) this_arg = null;\n    // pass all but the first (name) argument to the callback\n    var pass_args = Array.prototype.slice.call(arguments, 2);\n    // look for matching callback names\n    for (var a_name in this.callbacks) {\n        var split_name = a_name.split('.')[0];\n        if (split_name==name) {\n            this.callbacks[a_name].forEach(function(fn) {\n                fn.apply(this_arg, pass_args);\n            });\n        }\n    }\n    return this;\n}\n","/** Canvas. Defines a canvas that accepts drag/zoom events and can be resized.\n\n Canvas(selection, x, y, width, height)\n\n Adapted from http://bl.ocks.org/mccannf/1629464.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Canvas = utils.make_class();\nCanvas.prototype = {\n    init: init,\n    toggle_resize: toggle_resize,\n    setup: setup,\n    size_and_location: size_and_location\n};\nmodule.exports = Canvas;\n\n\nfunction init(selection, size_and_location) {\n    this.selection = selection;\n    this.x = size_and_location.x;\n    this.y = size_and_location.y;\n    this.width = size_and_location.width;\n    this.height = size_and_location.height;\n\n    // enable by default\n    this.resize_enabled = true;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    this.setup();\n}\n\nfunction toggle_resize(on_off) {\n    /** Turn the resize on or off\n\n     */\n    if (on_off===undefined) on_off = !this.resize_enabled;\n\n    if (on_off) {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'auto');\n    } else {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'none');\n    }\n}\n\nfunction setup() {\n    var self = this,\n        extent = {\"x\": this.width, \"y\": this.height},\n        dragbar_width = 100,\n        mouse_node_mult = 10,\n        new_sel = this.selection.append('g')\n            .classed('canvas-group', true)\n            .data([{x: this.x, y: this.y}]);\n\n    var mouse_node = new_sel.append('rect')\n            .attr('id', 'mouse-node')\n            .attr(\"width\", this.width*mouse_node_mult)\n            .attr(\"height\", this.height*mouse_node_mult)\n            .attr(\"transform\", \"translate(\"+[self.x - this.width*mouse_node_mult/2,\n                                             self.y - this.height*mouse_node_mult/2]+\")\")\n            .attr('pointer-events', 'all');\n    this.mouse_node = mouse_node;\n\n    var rect = new_sel.append('rect')\n            .attr('id', 'canvas')\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height)\n            .attr(\"transform\", \"translate(\"+[self.x, self.y]+\")\");\n\n    var drag_right = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", rdragresize),\n        drag_left = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", ldragresize),\n        drag_top = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", tdragresize),\n        drag_bottom = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", bdragresize);\n\n    var left = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"id\", \"dragleft\")\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_left);\n\n    var right = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + self.width - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragright\")\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_right);\n\n    var top = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y - (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", dragbar_width)\n            .attr(\"id\", \"dragtop\")\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_top);\n\n    var bottom = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y + self.height - (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragbottom\")\n            .attr(\"height\", dragbar_width)\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_bottom);\n\n    // definitions\n    function stop_propagation() {\n        d3.event.sourceEvent.stopPropagation();\n    }\n    function transform_string(x, y, current_transform) {\n        var tr = utils.d3_transform_catch(current_transform),\n            translate = tr.translate;\n        if (x!==null) translate[0] = x;\n        if (y!==null) translate[1] = y;\n        return 'translate('+translate+')';\n    }\n    function ldragresize(d) {\n        var oldx = d.x;\n        d.x = Math.min(d.x + self.width - (dragbar_width / 2), d3.event.x);\n        self.x = d.x;\n        self.width = self.width + (oldx - d.x);\n        left.attr(\"transform\", function(d) {\n            return transform_string(d.x - (dragbar_width / 2), null, left.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, mouse_node.attr('transform'));\n        }).attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, rect.attr('transform'));\n        }).attr(\"width\", self.width);\n        top.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, top.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, bottom.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function rdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragx = Math.max(d.x + (dragbar_width/2), d.x + self.width + d3.event.dx);\n        //recalculate width\n        self.width = dragx - d.x;\n        //move the right drag handle\n        right.attr(\"transform\", function(d) {\n            return transform_string(dragx - (dragbar_width/2), null, right.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"width\", self.width);\n        top.attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function tdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var oldy = d.y;\n        d.y = Math.min(d.y + self.height - (dragbar_width / 2), d3.event.y);\n        self.y = d.y;\n        self.height = self.height + (oldy - d.y);\n        top.attr(\"transform\", function(d) {\n            return transform_string(null, d.y - (dragbar_width / 2), top.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, mouse_node.attr('transform'));\n        }).attr(\"width\", self.height*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, rect.attr('transform'));\n        }).attr(\"height\", self.height);\n        left.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), left.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n        right.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), right.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function bdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragy = Math.max(d.y + (dragbar_width/2), d.y + self.height + d3.event.dy);\n        //recalculate width\n        self.height = dragy - d.y;\n        //move the right drag handle\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(null, dragy - (dragbar_width/2), bottom.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"height\", self.height*mouse_node_mult);\n        rect.attr(\"height\", self.height);\n        left.attr(\"height\", self.height - dragbar_width);\n        right.attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n}\n\nfunction size_and_location() {\n    return { x: this.x,\n             y: this.y,\n             width: this.width,\n             height: this.height };\n}\n","/** CobraModel\n *\n */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nvar CobraModel = utils.make_class();\n// class methods\nCobraModel.from_exported_data = from_exported_data;\nCobraModel.from_cobra_json = from_cobra_json;\nCobraModel.build_reaction_string = build_reaction_string;\n// instance methods\nCobraModel.prototype = { init: init,\n                         apply_reaction_data: apply_reaction_data,\n                         apply_metabolite_data: apply_metabolite_data,\n                         apply_gene_data: apply_gene_data,\n                         model_for_export: model_for_export };\nmodule.exports = CobraModel;\n\n// class methods\nfunction build_reaction_string(stoichiometries, is_reversible) {\n    /** Return a reaction string for the given stoichiometries.\n\n     Adapted from cobra.core.Reaction.build_reaction_string().\n\n     Arguments\n     ---------\n\n     stoichiometries: An object with metabolites as keys and\n     stoichiometries as values.\n\n     is_reversible: Boolean. Whether the reaction is reversible.\n\n     */\n\n    var format = function(number) {\n        if (number == 1)\n            return \"\";\n        return String(number) + \" \";\n    };\n    var reactant_dict = {},\n        product_dict = {},\n        reactant_bits = [],\n        product_bits = [];\n    for (var the_metabolite in stoichiometries) {\n        var coefficient = stoichiometries[the_metabolite];\n        if (coefficient > 0)\n            product_bits.push(format(coefficient) + the_metabolite);\n        else\n            reactant_bits.push(format(Math.abs(coefficient)) + the_metabolite);\n    }\n    var reaction_string = reactant_bits.join(' + ');\n    if (is_reversible) {\n        reaction_string += ' ↔ ';\n    } else {\n        reaction_string += ' → ';\n    }\n    reaction_string += product_bits.join(' + ');\n    return reaction_string;\n}\n\nfunction from_exported_data(data) {\n    /** Use data generated by CobraModel.model_for_export() to make a new\n     CobraModel object.\n\n     */\n    if (!(data.reactions && data.metabolites))\n        throw new Error('Bad model data.');\n\n    var model = new CobraModel();\n    model.reactions = data.reactions;\n    model.metabolites = data.metabolites;\n    return model;\n}\n\nfunction from_cobra_json(model_data) {\n    /** Use a JSON Cobra model exported by COBRApy to make a new CobraModel\n     object.\n\n     The COBRA \"id\" becomes a \"bigg_id\", and \"upper_bound\" and \"lower_bound\"\n     bounds become \"reversibility\".\n\n     Fills out a \"genes\" list.\n\n     */\n    // reactions and metabolites\n    if (!(model_data.reactions && model_data.metabolites))\n        throw new Error('Bad model data.');\n\n    // make a gene dictionary\n    var genes = {};\n    for (var i = 0, l = model_data.genes.length; i < l; i++) {\n        var r = model_data.genes[i],\n            the_id = r.id;\n        genes[the_id] = r;\n    }\n\n    var model = new CobraModel();\n\n    model.reactions = {};\n    for (var i = 0, l = model_data.reactions.length; i<l; i++) {\n        var r = model_data.reactions[i],\n            the_id = r.id,\n            reaction = utils.clone(r);\n        delete reaction.id;\n        reaction.bigg_id = the_id;\n        // add the appropriate genes\n        reaction.genes = [];\n\n        // set reversibility\n        reaction.reversibility = (reaction.lower_bound < 0 && reaction.upper_bound > 0);\n        if (reaction.upper_bound <= 0 && reaction.lower_bound < 0) {\n            // reverse stoichiometries\n            for (var met_id in reaction.metabolites) {\n                reaction.metabolites[met_id] = -reaction.metabolites[met_id];\n            }\n        }\n        delete reaction.lower_bound;\n        delete reaction.upper_bound;\n\n        if ('gene_reaction_rule' in reaction) {\n            var gene_ids = data_styles.genes_for_gene_reaction_rule(reaction.gene_reaction_rule);\n            gene_ids.forEach(function(gene_id) {\n                if (gene_id in genes) {\n                    var gene = utils.clone(genes[gene_id]);\n                    // rename id to bigg_id\n                    gene.bigg_id = gene.id;\n                    delete gene.id;\n                    reaction.genes.push(gene);\n                } else {\n                    console.warn('Could not find gene for gene_id ' + gene_id);\n                }\n            });\n        }\n        model.reactions[the_id] = reaction;\n    }\n    model.metabolites = {};\n    for (var i=0, l=model_data.metabolites.length; i<l; i++) {\n        var r = model_data.metabolites[i],\n            the_id = r.id,\n            met = utils.clone(r);\n        delete met.id;\n        met.bigg_id = the_id;\n        model.metabolites[the_id] = met;\n    }\n    return model;\n}\n\n// instance methods\nfunction init() {\n    this.reactions = {};\n    this.metabolites = {};\n    this.cofactors = ['atp', 'adp', 'nad', 'nadh', 'nadp', 'nadph', 'gtp',\n                      'gdp', 'h', 'coa'];\n}\n\nfunction apply_reaction_data(reaction_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_reaction_data overrides apply_gene_data.\n\n     */\n    data_styles.apply_reaction_data_to_reactions(this.reactions, reaction_data,\n                                                 styles, compare_style);\n}\n\nfunction apply_metabolite_data(metabolite_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     */\n    data_styles.apply_metabolite_data_to_nodes(this.metabolites, metabolite_data,\n                                               styles, compare_style);\n}\n\nfunction apply_gene_data(gene_data_obj, styles, identifiers_on_map,\n                         compare_style, and_method_in_gene_reaction_rule) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_gene_data overrides apply_reaction_data.\n\n     */\n    data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                             styles, identifiers_on_map,\n                                             compare_style,\n                                             and_method_in_gene_reaction_rule);\n}\n\nfunction model_for_export() {\n    /** Export a CobraModel object for reloading later.\n\n     This object is not for loading into COBRApy! Export to COBRApy is not\n     currently supported.\n\n     */\n    return { reactions: this.reactions,\n             metabolites: this.metabolites };\n}\n","/** DataMenu */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = function(options) {\n    var o = utils.set_options(options, {\n        selection: null,\n        getdatafiles: null,\n        datafiles: null,\n        update_callback: null,\n        target: null});\n\n    if (o.selection===null)\n        throw new Error('No selection provided for DataMenu');\n\n    // setup dropdown menu\n    // Append menu if it doesn't exist\n    var menu = o.selection.select('.data-menu');\n    if (menu.empty()) {\n        menu = o.selection.append('div')\n            .attr('class','data-menu');\n    }\n    var select_sel = menu.append('form')\n            .append('select').attr('class','dropdown-menu');\n\n    if (o.getdatafiles) {\n        if (o.datafiles) {\n            console.warn('DataMenu: getdatafiles option overrides datafiles');\n        }\n        d3.json(o.getdatafiles, function(error, d) {\n            // returns json object:  { data: [file0, file1, ...] }\n            if (error) {\n                return console.warn(error);\n            } else {\n                load_with_files(o.target, d.data, select_sel, o.update_callback, o.selection);\n            }\n            return null;\n        });\n    } else if (o.datafiles) {\n        load_with_files(o.target, o.datafiles, select_sel, o.update_callback, o.selection);\n    } else {\n        console.warn('DataMenu: No datafiles given');\n    }\n\n    return { update: update };\n\n    // definitions\n    function load_with_files(t, files, select_sel, update_callback, selection) {\n\n        //when it changes\n        select_sel.node().addEventListener(\"change\", function() {\n            load_datafile(t, this.value, selection, update_callback);\n        }, false);\n\n        var file = files[0];\n\n        update(files, select_sel);\n        load_datafile(t, file, selection, update_callback);\n    };\n    function load_datafile(t, this_file, selection, callback) {\n        utils.load_the_file(t, this_file, function(error, data) {\n            if (error) {\n                return console.warn(error);\n                selection.append('error loading');\n                o.data = null;\n            } else {\n                o.data = data;\n                if (callback) {\n                    callback(data);\n                }\n            }\n        });\n    };\n\n    function update(list, select_sel) {\n        // update select element with d3 selection /select_sel/ to have options\n        // given by /list/\n        // TODO remove paths from file list\n        select_sel.selectAll(\".menu-option\")\n            .data(list)\n            .enter()\n            .append('option')\n            .attr('value', function (d) { return d; } )\n            .text(function (d) { return d; } );\n        // TODO set value to default_filename_index\n        select_sel.node().focus();\n    };\n\n    function get_data() {\n        return o.data;\n    };\n};\n","/** DirectionArrow. A constructor for an arrow that can be rotated and dragged,\n and supplies its direction. */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar DirectionArrow = utils.make_class();\nDirectionArrow.prototype = {\n    init: init,\n    set_location: set_location,\n    set_rotation: set_rotation,\n    displace_rotation: displace_rotation,\n    get_rotation: get_rotation,\n    toggle: toggle,\n    show: show,\n    hide: hide,\n    right: right,\n    left: left,\n    up: up,\n    down: down,\n    _setup_drag: _setup_drag\n};\nmodule.exports = DirectionArrow;\n\n\n// definitions\nfunction init(sel) {\n    this.arrow_container = sel.append('g')\n        .attr('id', 'direction-arrow-container')\n        .attr('transform', 'translate(0,0)rotate(0)');\n    this.arrow = this.arrow_container.append('path')\n        .classed('direction-arrow', true)\n        .attr('d', path_for_arrow())\n        .style('visibility', 'hidden')\n        .attr('transform', 'translate(30,0)scale(2.5)');\n\n    this.sel = sel;\n    this.center = { x: 0, y: 0 };\n\n    this._setup_drag();\n    this.dragging = false;\n\n    this.is_visible = false;\n    this.show();\n\n    // definitions\n    function path_for_arrow() {\n        return \"M0 -5 L0 5 L20 5 L20 10 L30 0 L20 -10 L20 -5 Z\";\n    }\n}\nfunction set_location(coords) {\n    /** Move the arrow to coords.\n     */\n    this.center = coords;\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+coords.x+','+coords.y+')rotate('+transform.rotate+')');\n}\nfunction set_rotation(rotation) {\n    /** Rotate the arrow to rotation.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')rotate('+rotation+')');\n}\nfunction displace_rotation(d_rotation) {\n    /** Displace the arrow rotation by a set amount.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')'+\n                              'rotate('+(transform.rotate+d_rotation)+')');\n}\nfunction get_rotation() {\n    /** Returns the arrow rotation.\n     */\n    return utils.d3_transform_catch(this.arrow_container.attr('transform')).rotate;\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_visible = !this.is_visible;\n    else this.is_visible = on_off;\n    this.arrow.style('visibility', this.is_visible ? 'visible' : 'hidden');\n}\nfunction show() {\n    this.toggle(true);\n}\nfunction hide() {\n    this.toggle(false);\n}\nfunction right() {\n    this.set_rotation(0);\n}\nfunction down() {\n    this.set_rotation(90);\n}\nfunction left() {\n    this.set_rotation(180);\n}\nfunction up() {\n    this.set_rotation(270);\n}\n\nfunction _setup_drag() {\n    var b = d3.behavior.drag()\n            .on(\"dragstart\", function(d) {\n                // silence other listeners\n                d3.event.sourceEvent.stopPropagation();\n                this.dragging = true;\n            }.bind(this))\n            .on(\"drag.direction_arrow\", function(d) {\n                var displacement = { x: d3.event.dx,\n                                     y: d3.event.dy },\n                    location = { x: d3.mouse(this.sel.node())[0],\n                                 y: d3.mouse(this.sel.node())[1] },\n                    d_angle = utils.angle_for_event(displacement,\n                                                    location,\n                                                    this.center);\n                this.displace_rotation(utils.to_degrees(d_angle));\n            }.bind(this))\n            .on(\"dragend\", function(d) {\n                setTimeout(function() {\n                    this.dragging = false;\n                }.bind(this), 200);\n            }.bind(this));\n    this.arrow_container.call(b);\n}\n","/** Draw. Manages creating, updating, and removing objects during d3 data binding.\n\n Arguments\n ---------\n\n behavior: An escher.Behavior object.\n\n settings: An escher.Settings object.\n\n Callbacks\n ---------\n\n draw.callback_manager.run('create_membrane', draw, enter_selection);\n draw.callback_manager.run('update_membrane', draw, update_selection);\n draw.callback_manager.run('create_reaction', draw, enter_selection);\n draw.callback_manager.run('update_reaction', draw, update_selection);\n draw.callback_manager.run('create_reaction_label', draw, enter_selection);\n draw.callback_manager.run('update_reaction_label', draw, update_selection);\n draw.callback_manager.run('create_segment', draw, enter_selection);\n draw.callback_manager.run('update_segment', draw, update_selection);\n draw.callback_manager.run('create_bezier', draw, enter_selection);\n draw.callback_manager.run('update_bezier', draw, update_selection);\n draw.callback_manager.run('create_node', draw, enter_selection);\n draw.callback_manager.run('update_node', draw, update_selection);\n draw.callback_manager.run('create_text_label', draw, enter_selection);\n draw.callback_manager.run('update_text_label', draw, update_selection);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Draw = utils.make_class();\n// instance methods\nDraw.prototype = {\n    init: init,\n    create_reaction: create_reaction,\n    update_reaction: update_reaction,\n    create_bezier: create_bezier,\n    update_bezier: update_bezier,\n    create_node: create_node,\n    update_node: update_node,\n    create_text_label: create_text_label,\n    update_text_label: update_text_label,\n    create_membrane: create_membrane,\n    update_membrane: update_membrane,\n    create_reaction_label: create_reaction_label,\n    update_reaction_label: update_reaction_label,\n    create_segment: create_segment,\n    update_segment: update_segment\n};\nmodule.exports = Draw;\n\n// definitions\nfunction init(behavior, settings) {\n    this.behavior = behavior;\n    this.settings = settings;\n    this.callback_manager = new CallbackManager();\n}\n\nfunction create_membrane(enter_selection) {\n    enter_selection.append('rect')\n        .attr('class', 'membrane');\n    this.callback_manager.run('create_membrane', this, enter_selection);\n}\n\nfunction update_membrane(update_selection) {\n    update_selection\n        .attr('width', function(d){ return d.width; })\n        .attr('height', function(d){ return d.height; })\n        .attr('transform', function(d){return 'translate('+d.x+','+d.y+')';})\n        .style('stroke-width', function(d) { return 10; })\n        .attr('rx', function(d){ return 20; })\n        .attr('ry', function(d){ return 20; });\n\n    this.callback_manager.run('update_membrane', this, update_selection);\n}\n\nfunction create_reaction(enter_selection) {\n    // attributes for new reaction group\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'r'+d.reaction_id; })\n        .attr('class', 'reaction')\n        .call(this.create_reaction_label.bind(this));\n\n    this.callback_manager.run('create_reaction', this, enter_selection);\n    return;\n}\n\nfunction update_reaction(update_selection, scale, cobra_model, drawn_nodes,\n                         defs, has_data_on_reactions) {\n    /** Run on the update selection for reactions.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     cobra_model: A CobraModel object.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     defs: The defs object generated by utils.setup_defs() (e.g. Map.defs).\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    // update reaction label\n    update_selection.select('.reaction-label-group')\n        .call(function(sel) {\n            return this.update_reaction_label(sel, has_data_on_reactions);\n        }.bind(this));\n\n    // draw segments\n    utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                               this.create_segment.bind(this),\n                               function(sel) {\n                                   return this.update_segment(sel, scale, cobra_model,\n                                                              drawn_nodes, defs,\n                                                              has_data_on_reactions);\n                               }.bind(this),\n                               function(sel) {\n                                   sel.remove();\n                               });\n\n    // run the callback\n    this.callback_manager.run('update_reaction', this, update_selection);\n}\n\nfunction create_reaction_label(enter_selection) {\n    /** Draw reaction label for selection.\n\n     */\n\n    var group = enter_selection.append('g')\n            .attr('class', 'reaction-label-group');\n    group.append('title'); // tooltip\n    group.append('text')\n        .attr('class', 'reaction-label label');\n    group.append('g')\n        .attr('class', 'all-genes-label-group');\n\n    this.callback_manager.run('create_reaction_label', this, enter_selection);\n}\n\nfunction update_reaction_label(update_selection, has_data_on_reactions) {\n    /** Run on the update selection for reaction labels.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    var decimal_format = d3.format('.4g'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        reaction_data_styles = this.settings.get_option('reaction_styles'),\n        show_gene_reaction_rules = this.settings.get_option('show_gene_reaction_rules'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        gene_font_size = this.settings.get_option('gene_font_size'),\n        label_mousedown_fn = this.behavior.label_mousedown,\n        label_mouseover_fn = this.behavior.label_mouseover,\n        label_mouseout_fn = this.behavior.label_mouseout;\n\n    // label location\n    update_selection\n        .attr('transform', function(d) {\n            return 'translate(' + d.label_x + ',' + d.label_y + ')';\n        })\n        .call(this.behavior.turn_off_drag)\n        .call(this.behavior.reaction_label_drag);\n\n    // update label visibility\n    var label = update_selection.select('.reaction-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        label\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_reactions && reaction_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .on('mousedown', label_mousedown_fn)\n            .on('mouseover', label_mouseover_fn)\n            .on('mouseout', label_mouseout_fn);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n    // gene label\n    var all_genes_g = update_selection.select('.all-genes-label-group')\n            .selectAll('.gene-label-group')\n            .data(function(d) {\n                var show_gene_string = ('gene_string' in d &&\n                                        d.gene_string !== null &&\n                                        show_gene_reaction_rules &&\n                                        (!hide_all_labels) &&\n                                        reaction_data_styles.indexOf('text') !== -1),\n                    show_gene_reaction_rule = ('gene_reaction_rule' in d &&\n                                               d.gene_reaction_rule !== null &&\n                                               show_gene_reaction_rules &&\n                                               (!hide_all_labels) );\n                if (show_gene_string) {\n                    return d.gene_string;\n                } else if (show_gene_reaction_rule) {\n                    // make the gene string with no data\n                    return data_styles.gene_string_for_data(d.gene_reaction_rule, null,\n                                                            d.genes, null, identifiers_on_map,\n                                                            null);\n                } else {\n                    return [];\n                }\n            });\n    // enter\n    var gene_g = all_genes_g.enter()\n            .append('g')\n            .attr('class', 'gene-label-group');\n    gene_g.append('text')\n        .attr('class', 'gene-label')\n        .style('font-size', gene_font_size + 'px');\n    gene_g.append('title');\n    // update\n    all_genes_g.attr('transform', function(d, i) {\n        return 'translate(0, ' + (gene_font_size * 1.5 * (i + 1)) + ')';\n    });\n    // update text\n    all_genes_g.select('text').text(function(d) {\n        return d['text'];\n    });\n    // update tooltip\n    all_genes_g.select('title').text(function(d) {\n        return d[identifiers_in_tooltip];\n    });\n    // exit\n    all_genes_g.exit()\n        .remove();\n\n    this.callback_manager.run('update_reaction_label', this, update_selection);\n}\n\nfunction create_segment(enter_selection) {\n    // create segments\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'segment-group')\n            .attr('id', function(d) { return 's'+d.segment_id; });\n\n    // create reaction arrow\n    g.append('path')\n        .attr('class', 'segment');\n\n    g.append('g')\n        .attr('class', 'arrowheads');\n\n    g.append('g')\n        .attr('class', 'stoichiometry-labels');\n\n    this.callback_manager.run('create_segment', this, enter_selection);\n}\n\nfunction update_segment(update_selection, scale, cobra_model,\n                        drawn_nodes, defs, has_data_on_reactions) {\n    var reaction_data_styles = this.settings.get_option('reaction_styles'),\n        should_size = (has_data_on_reactions && reaction_data_styles.indexOf('size') != -1),\n        should_color = (has_data_on_reactions && reaction_data_styles.indexOf('color') != -1),\n        no_data_size = this.settings.get_option('reaction_no_data_size'),\n        no_data_color = this.settings.get_option('reaction_no_data_color');\n\n    // update segment attributes\n    var highlight_missing  = this.settings.get_option('highlight_missing'),\n        hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        get_arrow_size = function(data, should_size) {\n            var width = 20,\n                height = 13;\n            if (should_size) {\n                height = (data === null ? no_data_size : scale.reaction_size(data));\n                // check for nan\n                if (isNaN(height))\n                    height = no_data_size;\n                width = height * 2;\n            }\n            return { width: width, height: height };\n        },\n        get_disp = function(arrow_size, reversibility, coefficient, node_is_primary) {\n            var arrow_height = ((reversibility || coefficient > 0) ?\n                                arrow_size.height :\n                                0),\n                r = node_is_primary ? primary_r : secondary_r;\n            return r + arrow_height + 10;\n        };\n    // update arrows\n    update_selection\n        .selectAll('.segment')\n        .datum(function() {\n            return this.parentNode.__data__;\n        })\n        .style('visibility', function(d) {\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        })\n        .attr('d', function(d) {\n            if (d.from_node_id === null || d.to_node_id === null)\n                return null;\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id],\n                b1 = d.b1,\n                b2 = d.b2;\n            // if metabolite, then displace the arrow\n            if (start['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.from_node_coefficient,\n                                    start.node_is_primary);\n                var direction = (b1 === null) ? end : b1;\n                start = displaced_coords(disp, start, direction, 'start');\n            }\n            if (end['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.to_node_coefficient,\n                                    end.node_is_primary);\n                var direction = (b2 === null) ? start : b2;\n                end = displaced_coords(disp, direction, end, 'end');\n            }\n            var curve = ('M' + start.x + ',' + start.y + ' ');\n            if (b1 !== null && b2 !== null) {\n                curve += ('C' + b1.x + ',' + b1.y + ' ' +\n                          b2.x + ',' + b2.y + ' ');\n            }\n            curve += (end.x + ',' + end.y);\n            return curve;\n        })\n        .style('stroke', function(d) {\n            var reaction_id = this.parentNode.parentNode.__data__.bigg_id,\n                show_missing = (highlight_missing &&\n                                cobra_model !== null &&\n                                !(reaction_id in cobra_model.reactions));\n            if (show_missing) {\n                return 'red';\n            }\n            if (should_color) {\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            return null;\n        })\n        .style('stroke-width', function(d) {\n            if (should_size) {\n                var f = d.data;\n                return f === null ? no_data_size : scale.reaction_size(f);\n            } else {\n                return null;\n            }\n        });\n\n    // new arrowheads\n    var arrowheads = update_selection.select('.arrowheads')\n            .selectAll('.arrowhead')\n            .data(function (d) {\n                var arrowheads = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return arrowheads;\n\n                if (start.node_type == 'metabolite' && (d.reversibility || d.from_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.from_node_coefficient,\n                                        start.node_is_primary),\n                        direction = (b1 === null) ? end : b1,\n                        rotation = utils.to_degrees(utils.get_angle([start, direction])) + 90,\n                        loc = displaced_coords(disp, start, direction, 'start');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.from_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                if (end.node_type == 'metabolite' && (d.reversibility || d.to_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.to_node_coefficient,\n                                        end.node_is_primary),\n                        direction = (b2 === null) ? start : b2,\n                        rotation = utils.to_degrees(utils.get_angle([end, direction])) + 90,\n                        loc = displaced_coords(disp, direction, end, 'end');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.to_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                return arrowheads;\n            });\n    arrowheads.enter().append('path')\n        .classed('arrowhead', true);\n    // update arrowheads\n    arrowheads.attr('d', function(d) {\n        return ('M' + [-d.size.width / 2, 0] +\n                ' L' + [0, d.size.height] +\n                ' L' + [d.size.width / 2, 0] + ' Z');\n    }).attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')rotate(' + d.rotation + ')';\n    }).style('fill', function(d) {\n        if (should_color) {\n            if (d.show_arrowhead_flux) {\n                // show the flux\n                var f = d.data;\n                return f===null ? no_data_color : scale.reaction_color(f);\n            } else {\n                // if the arrowhead is not filled because it is reversed\n                return '#FFFFFF';\n            }\n        }\n        // default fill color\n        return null;\n    }).style('stroke', function(d) {\n        if (should_color) {\n            // show the flux color in the stroke whether or not the fill is present\n            var f = d.data;\n            return f===null ? no_data_color : scale.reaction_color(f);\n        }\n        // default stroke color\n        return null;\n    });\n    // remove\n    arrowheads.exit().remove();\n\n    // new stoichiometry labels\n    var stoichiometry_labels = update_selection.select('.stoichiometry-labels')\n            .selectAll('.stoichiometry-label')\n            .data(function (d) {\n                var labels = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2,\n                    disp_factor = 1.5;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return labels;\n\n                if (start.node_type=='metabolite' && (Math.abs(d.from_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b1 === null) ? end : b1;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, start));\n                    var loc = displaced_coords(disp, start, direction, 'start');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.from_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                if (end.node_type=='metabolite' && (Math.abs(d.to_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b2 === null) ? start : b2;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, end));\n                    var loc = displaced_coords(disp, direction, end, 'end');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.to_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                return labels;\n            });\n\n    // add labels\n    stoichiometry_labels.enter()\n        .append('text')\n        .attr('class', 'stoichiometry-label')\n        .attr('text-anchor', 'middle');\n    // update stoichiometry_labels\n    stoichiometry_labels\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .text(function(d) {\n            return d.coefficient;\n        })\n        .style('fill', function (d) {\n            if (should_color) {\n                // show the flux color\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            // default segment color\n            return null;\n        });\n    // remove\n    stoichiometry_labels.exit().remove();\n\n    this.callback_manager.run('update_segment', this, update_selection);\n}\n\nfunction create_bezier(enter_selection) {\n    var g = enter_selection.append('g')\n            .attr('id', function(d) { return d.bezier_id; })\n            .attr('class', function(d) { return 'bezier'; });\n    g.append('path')\n        .attr('class', 'connect-line');\n    g.append('circle')\n        .attr('class', function(d) { return 'bezier-circle '+d.bezier; })\n        .style('stroke-width', String(1)+'px')\n        .attr('r', String(7)+'px');\n\n    this.callback_manager.run('create_bezier', this, enter_selection);\n}\n\nfunction update_bezier(update_selection, show_beziers, drag_behavior,\n                       mouseover, mouseout, drawn_nodes, drawn_reactions) {\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n\n    if (!show_beziers) {\n        update_selection.attr('visibility', 'hidden');\n        return;\n    } else {\n        update_selection.attr('visibility', 'visible');\n    }\n\n    // hide secondary\n    update_selection\n        .style('visibility', function(d) {\n            var seg_data = drawn_reactions[d.reaction_id].segments[d.segment_id],\n                start = drawn_nodes[seg_data.from_node_id],\n                end = drawn_nodes[seg_data.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        });\n\n    // draw bezier points\n    update_selection.select('.bezier-circle')\n        .call(this.behavior.turn_off_drag)\n        .call(drag_behavior)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .attr('transform', function(d) {\n            if (d.x==null || d.y==null) return '';\n            return 'translate('+d.x+','+d.y+')';\n        });\n\n    // update bezier line\n    update_selection\n        .select('.connect-line')\n        .attr('d', function(d) {\n            var node,\n                segment_d = drawn_reactions[d.reaction_id].segments[d.segment_id];\n            node = (d.bezier=='b1' ?\n                    drawn_nodes[segment_d.from_node_id] :\n                    drawn_nodes[segment_d.to_node_id]);\n            if (d.x==null || d.y==null || node.x==null || node.y==null)\n                return '';\n            return 'M'+d.x+', '+d.y+' '+(node.x)+','+(node.y);\n        });\n\n    this.callback_manager.run('update_bezier', this, update_selection);\n}\n\nfunction create_node(enter_selection, drawn_nodes, drawn_reactions) {\n    /** Run on enter selection for nodes.\n\n     Arguments\n     ---------\n\n     enter_selection: The D3.js enter selection.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     drawn_reactions: The reactions object (e.g. Map.reactions).\n\n     */\n\n    // create nodes\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'node')\n            .attr('id', function(d) { return 'n'+d.node_id; });\n\n    // create metabolite circle and label\n    g.append('circle')\n        .attr('class', function(d) {\n            var c = 'node-circle';\n            if (d.node_type!==null)\n                c += (' ' + d.node_type + '-circle');\n            return c;\n        });\n    // labels\n    var metabolite_groups = g.filter(function(d) {\n        return d.node_type=='metabolite';\n    });\n    metabolite_groups.append('text')\n        .attr('class', 'node-label label');\n    metabolite_groups.append('title'); // tooltip\n\n    this.callback_manager.run('create_node', this, enter_selection);\n}\n\nfunction update_node(update_selection, scale, has_data_on_nodes,\n                     mousedown_fn, click_fn, mouseover_fn, mouseout_fn,\n                     drag_behavior, label_drag_behavior) {\n    /** Run on the update selection for nodes.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     has_data_on_nodes: Boolean to determine whether data needs to be drawn.\n\n     mousedown_fn: A function to call on mousedown for a node.\n\n     click_fn: A function to call on click for a node.\n\n     mouseover_fn: A function to call on mouseover for a node.\n\n     mouseout_fn: A function to call on mouseout for a node.\n\n     drag_behavior: The D3.js drag behavior object for the nodes.\n\n     label_drag_behavior: The D3.js drag behavior object for the node labels.\n\n     */\n\n    // update circle and label location\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        marker_r = this.settings.get_option('marker_radius'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        metabolite_data_styles = this.settings.get_option('metabolite_styles'),\n        no_data_style = { color: this.settings.get_option('metabolite_no_data_color'),\n                          size: this.settings.get_option('metabolite_no_data_size') };\n\n\n    var mg = update_selection\n            .select('.node-circle')\n            .attr('transform', function(d) {\n                return 'translate('+d.x+','+d.y+')';\n            })\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('r', function(d) {\n                if (d.node_type == 'metabolite') {\n                    var should_scale = (has_data_on_nodes &&\n                                        metabolite_data_styles.indexOf('size') != -1);\n                    if (should_scale) {\n                        var f = d.data;\n                        return f===null ? no_data_style['size'] : scale.metabolite_size(f);\n                    } else {\n                        return d.node_is_primary ? primary_r : secondary_r;\n                    }\n                }\n                // midmarkers and multimarkers\n                return marker_r;\n            })\n            .style('fill', function(d) {\n                if (d.node_type=='metabolite') {\n                    var should_color_data = (has_data_on_nodes &&\n                                             metabolite_data_styles.indexOf('color') != -1);\n                    if (should_color_data) {\n                        var f = d.data;\n                        return f===null ? no_data_style['color'] : scale.metabolite_color(f);\n                    } else {\n                        return null;\n                    }\n                }\n                // midmarkers and multimarkers\n                return null;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(drag_behavior)\n            .on('mousedown', mousedown_fn)\n            .on('click', click_fn)\n            .on('mouseover', mouseover_fn)\n            .on('mouseout', mouseout_fn);\n\n    // update node label visibility\n    var node_label = update_selection\n            .select('.node-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        node_label\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('transform', function(d) {\n                return 'translate('+d.label_x+','+d.label_y+')';\n            })\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_nodes && metabolite_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(label_drag_behavior);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n\n    this.callback_manager.run('update_node', this, update_selection);\n}\n\nfunction create_text_label(enter_selection) {\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'l'+d.text_label_id; })\n        .attr('class', 'text-label')\n        .append('text')\n        .attr('class', 'label');\n\n    this.callback_manager.run('create_text_label', this, enter_selection);\n}\n\nfunction update_text_label(update_selection) {\n    var mousedown_fn = this.behavior.text_label_mousedown,\n        click_fn = this.behavior.text_label_click,\n        drag_behavior = this.behavior.selectable_drag,\n        turn_off_drag = this.behavior.turn_off_drag;\n\n    update_selection\n        .select('.label')\n        .text(function(d) { return d.text; })\n        .attr('transform', function(d) { return 'translate('+d.x+','+d.y+')';})\n        .on('mousedown', mousedown_fn)\n        .on('click', click_fn)\n        .call(turn_off_drag)\n        .call(drag_behavior);\n\n    this.callback_manager.run('update_text_label', this, update_selection);\n}\n\nfunction displaced_coords(reaction_arrow_displacement, start, end, displace) {\n    utils.check_undefined(arguments, ['reaction_arrow_displacement', 'start', 'end', 'displace']);\n\n    var length = reaction_arrow_displacement,\n        hyp = utils.distance(start, end),\n        new_x, new_y;\n    if (!length || !hyp) console.error('Bad value');\n    if (displace=='start') {\n        new_x = start.x + length * (end.x - start.x) / hyp,\n        new_y = start.y + length * (end.y - start.y) / hyp;\n    } else if (displace=='end') {\n        new_x = end.x - length * (end.x - start.x) / hyp,\n        new_y = end.y - length * (end.y - start.y) / hyp;\n    } else { console.error('bad displace value: ' + displace); }\n    return {x: new_x, y: new_y};\n}\n","/** KeyManager\n\n Manage key listeners and events.\n\n Arguments\n ---------\n\n assigned_keys (default: {}): An object defining keys to bind.\n\n input_list (default: []): A list of inputs that will override keyboard\n shortcuts when in focus.\n\n selection (default: global): A node to bind the events to.\n\n ctrl_equals_cmd (default: false): If true, then control and command have the\n same effect.\n\n */\n\n\nvar utils = require('./utils');\nvar Mousetrap = require('mousetrap');\nvar _ = require('underscore');\n\n\nvar KeyManager = utils.make_class();\n// instance methods\nKeyManager.prototype = {\n    init: init,\n    update: update,\n    toggle: toggle,\n    add_escape_listener: add_escape_listener,\n    add_enter_listener: add_enter_listener,\n    add_key_listener: add_key_listener\n};\nmodule.exports = KeyManager;\n\n\n// instance methods\nfunction init(assigned_keys, input_list, selection, ctrl_equals_cmd) {\n    // default Arguments\n    this.assigned_keys = assigned_keys || {};\n    this.input_list = input_list || [];\n    this.mousetrap = selection ? new Mousetrap(selection) : new Mousetrap;\n    this.ctrl_equals_cmd = (!_.isBoolean(ctrl_equals_cmd)) ? false : ctrl_equals_cmd;\n\n    // Fix mousetrap behavior; by default, it ignore shortcuts when inputs are\n    // in focus.\n    // TODO NOT WORKING https://craig.is/killing/mice\n    this.mousetrap.stopCallback = function() { return false; };\n\n    this.enabled = true;\n    this.update();\n}\n\n\nfunction _add_cmd(key, ctrl_equals_cmd) {\n    /** If ctrl_equals_cmd is true and key has ctrl+ in it, return an array with\n     ctrl+ and meta+ variations.\n\n     */\n    if (!ctrl_equals_cmd) return key;\n    var replaced = key.replace('ctrl+', 'meta+');\n    if (replaced === key) return key;\n    else return [key, replaced];\n}\n\n\nfunction update() {\n    /** Updated key bindings if attributes have changed.\n\n     */\n    this.mousetrap.reset();\n    if (!this.enabled) return;\n\n    // loop through keys\n    for (var key_id in this.assigned_keys) {\n        var assigned_key = this.assigned_keys[key_id];\n\n        // OK if this is missing\n        if (!assigned_key.key) continue;\n\n        var key_to_bind = _add_cmd(assigned_key.key, this.ctrl_equals_cmd);\n        // remember the input_list\n        assigned_key.input_list = this.input_list;\n        this.mousetrap.bind(key_to_bind, function(e) {\n            // check inputs\n            var input_blocking = false;\n            if (this.ignore_with_input) {\n                for (var i = 0, l = this.input_list.length; i < l; i++) {\n                    if (this.input_list[i].is_visible()) {\n                        input_blocking = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!input_blocking) {\n                if (this.fn) this.fn.call(this.target);\n                else console.warn('No function for key: ' + this.key);\n                e.preventDefault();\n            }\n        }.bind(assigned_key), 'keydown');\n    }\n}\n\n\nfunction toggle(on_off) {\n    /** Turn the key manager on or off.\n\n     */\n    if (_.isUndefined(on_off)) on_off = !this.enabled;\n    this.enabled = on_off;\n    this.update();\n}\n\n\nfunction add_enter_listener(callback, one_time) {\n    /** Call the callback when the enter key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener(callback, 'enter', one_time);\n}\n\n\nfunction add_escape_listener(callback, one_time) {\n    /** Call the callback when the escape key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener(callback, 'escape', one_time);\n}\n\n\nfunction add_key_listener(callback, key_name, one_time) {\n    /** Call the callback when the key is pressed, then unregisters the\n     listener. Returns a function that will unbind the event.\n\n     */\n\n    if (_.isUndefined(one_time)) one_time = false;\n\n    // unbind function ready to go\n    var unbind = this.mousetrap.unbind.bind(this.mousetrap, key_name);\n\n    this.mousetrap.bind(key_name, function(e) {\n        console.log('key_listener', key_name, one_time);\n        e.preventDefault();\n        callback();\n        if (one_time) unbind();\n    });\n\n    return unbind;\n}\n","/** Map\n\n Defines the metabolic map data, and manages drawing and building.\n\n Arguments\n ---------\n\n svg: The parent SVG container for the map.\n\n css:\n\n selection: A d3 selection for a node to place the map inside.\n\n selection:\n\n zoom_container:\n\n settings:\n\n cobra_model:\n\n canvas_size_and_loc:\n\n enable_search:\n\n map_name: (Optional, Default: 'new map')\n\n map_id: (Optional, Default: A string of random characters.)\n\n map_description: (Optional, Default: '')\n\n Callbacks\n ---------\n\n map.callback_manager.run('set_status', null, status);\n map.callback_manager.run('toggle_beziers', null, beziers_enabled);\n map.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n map.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n map.callback_manager.run('deselect_nodes');\n map.callback_manager.run('select_text_label');\n map.callback_manager.run('before_svg_export');\n map.callback_manager.run('after_svg_export');\n map.callback_manager.run('before_convert_map');\n map.callback_manager.run('after_convert_map');\n this.callback_manager.run('calc_data_stats__reaction', null, changed);\n this.callback_manager.run('calc_data_stats__metabolite', null, changed);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar Draw = require('./Draw');\nvar Behavior = require('./Behavior');\nvar Scale = require('./Scale');\nvar build = require('./build');\nvar UndoStack = require('./UndoStack');\nvar CallbackManager = require('./CallbackManager');\nvar KeyManager = require('./KeyManager');\nvar Canvas = require('./Canvas');\nvar data_styles = require('./data_styles');\nvar SearchIndex = require('./SearchIndex');\n\nvar bacon = require('baconjs');\nvar _ = require('underscore');\n\n\nvar Map = utils.make_class();\n// class methods\nMap.from_data = from_data;\n// instance methods\nMap.prototype = {\n    // setup\n    init: init,\n    // more setup\n    setup_containers: setup_containers,\n    reset_containers: reset_containers,\n    // appearance\n    set_status: set_status,\n    clear_map: clear_map,\n    // selection\n    select_all: select_all,\n    select_none: select_none,\n    invert_selection: invert_selection,\n    select_selectable: select_selectable,\n    select_metabolite_with_id: select_metabolite_with_id,\n    select_single_node: select_single_node,\n    deselect_nodes: deselect_nodes,\n    select_text_label: select_text_label,\n    deselect_text_labels: deselect_text_labels,\n    // build\n    new_reaction_from_scratch: new_reaction_from_scratch,\n    extend_nodes: extend_nodes,\n    extend_reactions: extend_reactions,\n    new_reaction_for_metabolite: new_reaction_for_metabolite,\n    cycle_primary_node: cycle_primary_node,\n    toggle_selected_node_primary: toggle_selected_node_primary,\n    new_text_label: new_text_label,\n    edit_text_label: edit_text_label,\n    // delete\n    delete_selected: delete_selected,\n    delete_selectable: delete_selectable,\n    delete_node_data: delete_node_data,\n    delete_segment_data: delete_segment_data,\n    delete_reaction_data: delete_reaction_data,\n    delete_text_label_data: delete_text_label_data,\n    // find\n    get_selected_node_ids: get_selected_node_ids,\n    get_selected_nodes: get_selected_nodes,\n    get_selected_text_label_ids: get_selected_text_label_ids,\n    get_selected_text_labels: get_selected_text_labels,\n    segments_and_reactions_for_nodes: segments_and_reactions_for_nodes,\n    // draw\n    draw_everything: draw_everything,\n    // draw reactions\n    draw_all_reactions: draw_all_reactions,\n    draw_these_reactions: draw_these_reactions,\n    clear_deleted_reactions: clear_deleted_reactions,\n    // draw nodes\n    draw_all_nodes: draw_all_nodes,\n    draw_these_nodes: draw_these_nodes,\n    clear_deleted_nodes: clear_deleted_nodes,\n    // draw text_labels\n    draw_all_text_labels: draw_all_text_labels,\n    draw_these_text_labels: draw_these_text_labels,\n    clear_deleted_text_labels: clear_deleted_text_labels,\n    // draw beziers\n    draw_all_beziers: draw_all_beziers,\n    draw_these_beziers: draw_these_beziers,\n    clear_deleted_beziers: clear_deleted_beziers,\n    toggle_beziers: toggle_beziers,\n    hide_beziers: hide_beziers,\n    show_beziers: show_beziers,\n    // data\n    has_cobra_model: has_cobra_model,\n    apply_reaction_data_to_map: apply_reaction_data_to_map,\n    apply_metabolite_data_to_map: apply_metabolite_data_to_map,\n    apply_gene_data_to_map: apply_gene_data_to_map,\n    // data statistics\n    get_data_statistics: get_data_statistics,\n    calc_data_stats: calc_data_stats,\n    // zoom\n    zoom_extent_nodes: zoom_extent_nodes,\n    zoom_extent_canvas: zoom_extent_canvas,\n    _zoom_extent: _zoom_extent,\n    get_size: get_size,\n    zoom_to_reaction: zoom_to_reaction,\n    zoom_to_node: zoom_to_node,\n    zoom_to_text_label: zoom_to_text_label,\n    highlight_reaction: highlight_reaction,\n    highlight_node: highlight_node,\n    highlight_text_label: highlight_text_label,\n    highlight: highlight,\n    // io\n    save: save,\n    map_for_export: map_for_export,\n    save_svg: save_svg,\n    convert_map: convert_map\n};\nmodule.exports = Map;\n\n\n// -------------------------------------------------------------------------\n// setup\n\nfunction init(svg, css, selection, zoom_container, settings,\n              cobra_model, canvas_size_and_loc, enable_search,\n              map_name, map_id, map_description) {\n    if (canvas_size_and_loc===null) {\n        var size = zoom_container.get_size();\n        canvas_size_and_loc = {x: -size.width, y: -size.height,\n                               width: size.width*3, height: size.height*3};\n    }\n\n    if (map_name === undefined || map_name === null || map_name == '')\n        map_name = 'new_map';\n    else\n        map_name = String(map_name);\n    if (map_id === undefined || map_id === null || map_id == '')\n        map_id = utils.generate_map_id();\n    else\n        map_id = String(map_id);\n    if (map_description === undefined || map_description === null)\n        map_description = '';\n    else\n        map_description = String(map_description);\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // set up the defs\n    this.svg = svg;\n    this.defs = utils.setup_defs(svg, css);\n\n    // make the canvas\n    this.canvas = new Canvas(selection, canvas_size_and_loc);\n\n    this.setup_containers(selection);\n    this.sel = selection;\n    this.zoom_container = zoom_container;\n\n    this.settings = settings;\n\n    // set the model AFTER loading the datasets\n    this.cobra_model = cobra_model;\n\n    this.largest_ids = { reactions: -1,\n                         nodes: -1,\n                         segments: -1,\n                         text_labels: -1 };\n\n    // make the scales\n    this.scale = new Scale();\n    // initialize stats\n    this.calc_data_stats('reaction');\n    this.calc_data_stats('metabolite');\n    this.scale.connect_to_settings(this.settings, this,\n                                   get_data_statistics.bind(this));\n\n    // make the undo/redo stack\n    this.undo_stack = new UndoStack();\n\n    // make a behavior object\n    this.behavior = new Behavior(this, this.undo_stack);\n\n    // draw manager\n    this.draw = new Draw(this.behavior, this.settings);\n\n    // make a key manager\n    this.key_manager = new KeyManager();\n    this.key_manager.ctrl_equals_cmd = true;\n\n    // make the search index\n    this.enable_search = enable_search;\n    this.search_index = new SearchIndex();\n\n    // map properties\n    this.map_name = map_name;\n    this.map_id = map_id;\n    this.map_description = map_description;\n\n    // deal with the window\n    var window_translate = {'x': 0, 'y': 0},\n        window_scale = 1;\n\n    // hide beziers\n    this.beziers_enabled = false;\n\n    // data\n    this.has_data_on_reactions = false;\n    this.has_data_on_nodes = false;\n\n    this.nodes = {};\n    this.reactions = {};\n    this.beziers = {};\n    this.text_labels = {};\n\n    // update data with null to populate data-specific attributes\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n\n    // rotation mode off\n    this.rotation_on = false;\n};\n\n// -------------------------------------------------------------------------\n// Import\n\nfunction from_data(map_data, svg, css, selection, zoom_container, settings,\n                   cobra_model, enable_search) {\n    /** Load a json map and add necessary fields for rendering.\n\n     */\n\n    var canvas = map_data[1].canvas,\n        map_name = map_data[0].map_name,\n        map_id = map_data[0].map_id,\n        map_description = (map_data[0].map_description.replace(/(\\nLast Modified.*)+$/g, '')\n                           + '\\nLast Modified ' + Date(Date.now()).toString()),\n        map = new Map(svg, css, selection, zoom_container, settings,\n                      cobra_model, canvas, enable_search,\n                      map_name, map_id, map_description);\n\n    map.reactions = map_data[1].reactions;\n    map.nodes = map_data[1].nodes;\n    map.text_labels = map_data[1].text_labels;\n\n    for (var n_id in map.nodes) {\n        var node = map.nodes[n_id];\n\n        // clear all the connected segments\n        node.connected_segments = [];\n\n        //  populate the nodes search index.\n        if (enable_search) {\n            if (node.node_type!='metabolite') continue;\n            map.search_index.insert('n'+n_id, { 'name': node.bigg_id,\n                                                'data': { type: 'metabolite',\n                                                          node_id: n_id }});\n            map.search_index.insert('n_name'+n_id, { 'name': node.name,\n                                                     'data': { type: 'metabolite',\n                                                               node_id: n_id }});\n        }\n    }\n\n    // Propagate coefficients and reversibility, build the connected\n    // segments, add bezier points, and populate the reaction search index.\n    for (var r_id in map.reactions) {\n        var reaction = map.reactions[r_id];\n\n        // reaction search index\n        if (enable_search) {\n            map.search_index.insert('r' + r_id,\n                                    { 'name': reaction.bigg_id,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            map.search_index.insert('r_name' + r_id,\n                                    { 'name': reaction.name,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                map.search_index.insert('r' + r_id + '_g' + g_id,\n                                        { 'name': gene.bigg_id,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n                map.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                        { 'name': gene.name,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n            }\n        }\n\n        // keep track of any bad segments\n        var segments_to_delete = [];\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id];\n\n            // propagate reversibility\n            segment.reversibility = reaction.reversibility;\n\n            // if there is an error with to_ or from_ nodes, remove this segment\n            if (!(segment.from_node_id in map.nodes) || !(segment.to_node_id in map.nodes)) {\n                console.warn('Bad node references in segment ' + s_id + '. Deleting segment.');\n                segments_to_delete.push(s_id);\n                continue\n            }\n\n            var from_node = map.nodes[segment.from_node_id],\n                to_node = map.nodes[segment.to_node_id];\n\n            // propagate coefficients\n            reaction.metabolites.forEach(function(met) {\n                if (met.bigg_id==from_node.bigg_id) {\n                    segment.from_node_coefficient = met.coefficient;\n                } else if (met.bigg_id==to_node.bigg_id) {\n                    segment.to_node_coefficient = met.coefficient;\n                }\n            });\n\n            // build connected segments\n            [from_node, to_node].forEach(function(node) {\n                node.connected_segments.push({ segment_id: s_id,\n                                               reaction_id: r_id });\n            });\n\n            // If the metabolite has no bezier points, then add them.\n            var start = map.nodes[segment.from_node_id],\n                end = map.nodes[segment.to_node_id];\n            if (start['node_type']=='metabolite' || end['node_type']=='metabolite') {\n                var midpoint = utils.c_plus_c(start, utils.c_times_scalar(utils.c_minus_c(end, start), 0.5));\n                if (segment.b1 === null) segment.b1 = midpoint;\n                if (segment.b2 === null) segment.b2 = midpoint;\n            }\n\n        }\n        // delete the bad segments\n        segments_to_delete.forEach(function(s_id) {\n            delete reaction.segments[s_id];\n        });\n    }\n\n    // add text_labels to the search index\n    if (enable_search) {\n        for (var label_id in map.text_labels) {\n            var label = map.text_labels[label_id];\n            map.search_index.insert('l'+label_id, { 'name': label.text,\n                                                    'data': { type: 'text_label',\n                                                              text_label_id: label_id }});\n        }\n    }\n\n    // populate the beziers\n    map.beziers = build.new_beziers_for_reactions(map.reactions);\n\n    // get largest ids for adding new reactions, nodes, text labels, and\n    // segments\n    map.largest_ids.reactions = get_largest_id(map.reactions);\n    map.largest_ids.nodes = get_largest_id(map.nodes);\n    map.largest_ids.text_labels = get_largest_id(map.text_labels);\n\n    var largest_segment_id = 0;\n    for (var id in map.reactions) {\n        largest_segment_id = get_largest_id(map.reactions[id].segments,\n                                            largest_segment_id);\n    }\n    map.largest_ids.segments = largest_segment_id;\n\n    // update data with null to populate data-specific attributes\n    map.apply_reaction_data_to_map(null);\n    map.apply_metabolite_data_to_map(null);\n    map.apply_gene_data_to_map(null);\n\n    return map;\n\n    // definitions\n    function get_largest_id(obj, current_largest) {\n        /** Return the largest integer key in obj, or current_largest, whichever is bigger. */\n        if (current_largest===undefined) current_largest = 0;\n        if (obj===undefined) return current_largest;\n        return Math.max.apply(null, Object.keys(obj).map(function(x) {\n            return parseInt(x);\n        }).concat([current_largest]));\n    }\n}\n\n// ---------------------------------------------------------------------\n// more setup\n\nfunction setup_containers(sel) {\n    sel.append('g')\n        .attr('id', 'reactions');\n    sel.append('g')\n        .attr('id', 'nodes');\n    sel.append('g')\n        .attr('id', 'beziers');\n    sel.append('g')\n        .attr('id', 'text-labels');\n}\nfunction reset_containers() {\n    this.sel.select('#reactions')\n        .selectAll('.reaction')\n        .remove();\n    this.sel.select('#nodes')\n        .selectAll('.node')\n        .remove();\n    this.sel.select('#beziers')\n        .selectAll('.bezier')\n        .remove();\n    this.sel.select('#text-labels')\n        .selectAll('.text-label')\n        .remove();\n}\n\n// -------------------------------------------------------------------------\n// Appearance\n\nfunction set_status(status, time) {\n    /** Set the status of the map, with an optional expiration\n     time. Rendering the status is taken care of by the Builder.\n\n     Arguments\n     ---------\n\n     status: The status string.\n\n     time: An optional time, in ms, after which the status is set to ''.\n\n     */\n\n    this.callback_manager.run('set_status', null, status);\n    // clear any other timers on the status bar\n    clearTimeout(this._status_timer);\n    this._status_timer = null;\n\n    if (time!==undefined) {\n        this._status_timer = setTimeout(function() {\n            this.callback_manager.run('set_status', null, '');\n        }.bind(this), time);\n    }\n}\nfunction clear_map() {\n    this.reactions = {};\n    this.beziers = {};\n    this.nodes = {};\n    this.text_labels = {};\n    this.map_name = 'new_map';\n    this.map_id = utils.generate_map_id();\n    this.map_description = '';\n    // reaction_data onto existing map reactions\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n    this.draw_everything();\n}\nfunction has_cobra_model() {\n    return (this.cobra_model !== null);\n}\nfunction draw_everything() {\n    /** Draw the all reactions, nodes, & text labels.\n\n     */\n    this.draw_all_reactions(true, true); // also draw beziers\n    this.draw_all_nodes(true);\n    this.draw_all_text_labels();\n}\n\nfunction draw_all_reactions(draw_beziers, clear_deleted) {\n    /** Draw all reactions, and clear deleted reactions.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n    if (clear_deleted===undefined) clear_deleted = true;\n\n    // Draw all reactions.\n    var reaction_ids = [];\n    for (var reaction_id in this.reactions) {\n        reaction_ids.push(reaction_id);\n    }\n    // If draw_beziers is true, just draw them all, rather than deciding\n    // which ones to draw.\n    this.draw_these_reactions(reaction_ids, false);\n    if (draw_beziers && this.beziers_enabled)\n        this.draw_all_beziers();\n\n    // Clear all deleted reactions.\n    if (clear_deleted)\n        this.clear_deleted_reactions(draw_beziers);\n}\n\nfunction draw_these_reactions(reaction_ids, draw_beziers) {\n    /** Draw specific reactions.\n\n     Does nothing with exit selection. Use clear_deleted_reactions to remove\n     reactions from the DOM.\n\n     Arguments\n     ---------\n\n     reactions_ids: An array of reaction_ids to update.\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // find reactions for reaction_ids\n    var reaction_subset = utils.object_slice_for_ids_ref(this.reactions,\n                                                         reaction_ids);\n\n    // function to update reactions\n    var update_fn = function(sel) {\n        return this.draw.update_reaction(sel, this.scale, this.cobra_model,\n                                         this.nodes, this.defs,\n                                         this.has_data_on_reactions);\n    }.bind(this);\n\n    // draw the reactions\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', reaction_subset,\n                         'reaction_id', this.draw.create_reaction.bind(this.draw),\n                         update_fn);\n\n    if (draw_beziers) {\n        // particular beziers to draw\n        var bezier_ids = build.bezier_ids_for_reaction_ids(reaction_subset);\n        this.draw_these_beziers(bezier_ids);\n    }\n}\n\nfunction clear_deleted_reactions(draw_beziers) {\n    /** Remove any reactions that are not in *this.reactions*.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also clear deleted\n     bezier control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // remove deleted reactions and segments\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', this.reactions, 'reaction_id',\n                         null,\n                         clear_deleted_segments,\n                         function(sel) { sel.remove(); });\n\n    if (draw_beziers==true)\n        this.clear_deleted_beziers();\n\n    // definitions\n    function clear_deleted_segments(update_selection) {\n        // draw segments\n        utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                                   null,\n                                   null,\n                                   function(sel) { sel.remove(); });\n    };\n}\n\nfunction draw_all_nodes(clear_deleted) {\n    /** Draw all nodes, and clear deleted nodes.\n\n     Arguments\n     ---------\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (clear_deleted === undefined) clear_deleted = true;\n\n    var node_ids = [];\n    for (var node_id in this.nodes) {\n        node_ids.push(node_id);\n    }\n    this.draw_these_nodes(node_ids);\n\n    // clear the deleted nodes\n    if (clear_deleted)\n        this.clear_deleted_nodes();\n}\n\nfunction draw_these_nodes(node_ids) {\n    /** Draw specific nodes.\n\n     Does nothing with exit selection. Use clear_deleted_nodes to remove\n     nodes from the DOM.\n\n     Arguments\n     ---------\n\n     nodes_ids: An array of node_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var node_subset = utils.object_slice_for_ids_ref(this.nodes, node_ids);\n\n    // functions to create and update nodes\n    var create_fn = function(sel) {\n        return this.draw.create_node(sel,\n                                     this.nodes,\n                                     this.reactions);\n    }.bind(this),\n        update_fn = function(sel) {\n            return this.draw.update_node(sel,\n                                         this.scale,\n                                         this.has_data_on_nodes,\n                                         this.behavior.selectable_mousedown,\n                                         this.behavior.selectable_click,\n                                         this.behavior.node_mouseover,\n                                         this.behavior.node_mouseout,\n                                         this.behavior.selectable_drag,\n                                         this.behavior.node_label_drag);\n        }.bind(this);\n\n    // draw the nodes\n    utils.draw_an_object(this.sel, '#nodes', '.node', node_subset, 'node_id',\n                         create_fn, update_fn);\n}\n\nfunction clear_deleted_nodes() {\n    /** Remove any nodes that are not in *this.nodes*.\n\n     */\n    // run remove for exit selection\n    utils.draw_an_object(this.sel, '#nodes', '.node', this.nodes, 'node_id',\n                         null, null, function(sel) { sel.remove(); });\n}\n\nfunction draw_all_text_labels() {\n    // Draw all text_labels.\n    var text_label_ids = [];\n    for (var text_label_id in this.text_labels) {\n        text_label_ids.push(text_label_id);\n    }\n    this.draw_these_text_labels(text_label_ids);\n\n    // Clear all deleted text_labels.\n    this.clear_deleted_text_labels();\n}\n\nfunction draw_these_text_labels(text_label_ids) {\n    /** Draw specific text_labels.\n\n     Does nothing with exit selection. Use clear_deleted_text_labels to remove\n     text_labels from the DOM.\n\n     Arguments\n     ---------\n\n     text_labels_ids: An array of text_label_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var text_label_subset = utils.object_slice_for_ids_ref(this.text_labels, text_label_ids);\n\n    // function to update text_labels\n    var update_fn = function(sel) {\n        return this.draw.update_text_label(sel, this.behavior);;\n    }.bind(this);\n\n    // draw the text_labels\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         text_label_subset, 'text_label_id',\n                         this.draw.create_text_label.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_text_labels() {\n    /** Remove any text_labels that are not in *this.text_labels*.\n\n     */\n    // clear deleted\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         this.text_labels, 'text_label_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction draw_all_beziers() {\n    /** Draw all beziers, and clear deleted reactions.\n\n     */\n    var bezier_ids = [];\n    for (var bezier_id in this.beziers) {\n        bezier_ids.push(bezier_id);\n    }\n    this.draw_these_beziers(bezier_ids);\n\n    // clear delete beziers\n    this.clear_deleted_beziers();\n}\n\nfunction draw_these_beziers(bezier_ids) {\n    /** Draw specific beziers.\n\n     Does nothing with exit selection. Use clear_deleted_beziers to remove\n     beziers from the DOM.\n\n     Arguments\n     ---------\n\n     beziers_ids: An array of bezier_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var bezier_subset = utils.object_slice_for_ids_ref(this.beziers, bezier_ids);\n\n    // function to update beziers\n    var update_fn = function(sel) {\n        return this.draw.update_bezier(sel,\n                                       this.beziers_enabled,\n                                       this.behavior.bezier_drag,\n                                       this.behavior.bezier_mouseover,\n                                       this.behavior.bezier_mouseout,\n                                       this.nodes,\n                                       this.reactions);\n    }.bind(this);\n\n    // draw the beziers\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', bezier_subset,\n                         'bezier_id', this.draw.create_bezier.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_beziers() {\n    /** Remove any beziers that are not in *this.beziers*.\n\n     */\n    // remove deleted\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', this.beziers,\n                         'bezier_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction show_beziers() {\n    this.toggle_beziers(true);\n}\n\nfunction hide_beziers() {\n    this.toggle_beziers(false);\n}\n\nfunction toggle_beziers(on_off) {\n    if (on_off===undefined) this.beziers_enabled = !this.beziers_enabled;\n    else this.beziers_enabled = on_off;\n    this.draw_all_beziers();\n    this.callback_manager.run('toggle_beziers', null, this.beziers_enabled);\n}\n\nfunction apply_reaction_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style');\n    var has_data = data_styles.apply_reaction_data_to_reactions(this.reactions, data,\n                                                                styles, compare_style);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\nfunction apply_metabolite_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('metabolite_styles'),\n        compare_style = this.settings.get_option('metabolite_compare_style');\n\n    var has_data = data_styles.apply_metabolite_data_to_nodes(this.nodes, data,\n                                                              styles, compare_style);\n    this.has_data_on_nodes = has_data;\n\n    return this.calc_data_stats('metabolite');\n}\n\nfunction apply_gene_data_to_map(gene_data_obj) {\n    /** Returns True if the scale has changed.\n\n     Arguments\n     ---------\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { rule: 'rule_string', genes: { gene_id: value } } }\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        and_method_in_gene_reaction_rule = this.settings.get_option('and_method_in_gene_reaction_rule');\n\n    var has_data = data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                                            styles, identifiers_on_map,\n                                                            compare_style,\n                                                            and_method_in_gene_reaction_rule);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\n// ------------------------------------------------\n// Data domains\nfunction get_data_statistics() {\n    return this.data_statistics;\n}\n\nfunction calc_data_stats(type) {\n    /** Returns True if the stats have changed.\n\n     Arguments\n     ---------\n\n     type: Either 'metabolite' or 'reaction'\n\n     */\n\n    if (['reaction', 'metabolite'].indexOf(type) == -1)\n        throw new Error('Bad type ' + type);\n\n    // make the data structure\n    if (!('data_statistics' in this)) {\n        this.data_statistics = {};\n        this.data_statistics[type] = {};\n    } else if (!(type in this.data_statistics)) {\n        this.data_statistics[type] = {};\n    }\n\n    var same = true;\n    // default min and max\n    var vals = [];\n    if (type == 'metabolite') {\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            // check number\n            if (node.data !== null)\n                vals.push(node.data);\n        }\n    } else if (type == 'reaction') {\n        for (var reaction_id in this.reactions) {\n            var reaction = this.reactions[reaction_id];\n            // check number\n            if (reaction.data !== null)\n                vals.push(reaction.data);\n        }\n    }\n\n    // calculate these statistics\n    var quartiles = utils.quartiles(vals),\n        funcs = [['min', on_array(Math.min)],\n                 ['max', on_array(Math.max)],\n                 ['mean', utils.mean],\n                 ['Q1', function() { return quartiles[0]; }],\n                 ['median', function() { return quartiles[1]; }],\n                 ['Q3', function() { return quartiles[2]; }]];\n    funcs.forEach(function(ar) {\n        var new_val, name = ar[0];\n        if (vals.length == 0) {\n            new_val = null;\n        } else {\n            var fn = ar[1];\n            new_val = fn(vals);\n        }\n        if (new_val != this.data_statistics[type][name])\n            same = false;\n        this.data_statistics[type][name] = new_val;\n    }.bind(this));\n\n    if (type == 'reaction')\n        this.callback_manager.run('calc_data_stats__reaction', null, !same);\n    else\n        this.callback_manager.run('calc_data_stats__metabolite', null, !same);\n    return !same;\n\n    // definitions\n    function on_array(fn) {\n        return function (array) { return fn.apply(null, array); };\n    }\n}\n\n// ---------------------------------------------------------------------\n// Node interaction\n\nfunction get_coords_for_node(node_id) {\n    var node = this.nodes[node_id],\n        coords = {'x': node.x, 'y': node.y};\n    return coords;\n}\nfunction get_selected_node_ids() {\n    var selected_node_ids = [];\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) { selected_node_ids.push(d.node_id); });\n    return selected_node_ids;\n}\nfunction get_selected_nodes() {\n    var selected_nodes = {},\n        self = this;\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_nodes[d.node_id] = this.nodes[d.node_id];\n        }.bind(this));\n    return selected_nodes;\n}\nfunction get_selected_text_label_ids() {\n    var selected_text_label_ids = [];\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) { selected_text_label_ids.push(d.text_label_id); });\n    return selected_text_label_ids;\n}\nfunction get_selected_text_labels() {\n    var selected_text_labels = {},\n        self = this;\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_text_labels[d.text_label_id] = this.text_labels[d.text_label_id];\n        }.bind(this));\n    return selected_text_labels;\n}\n\nfunction select_all() {\n    /** Select all nodes and text labels.\n\n     */\n    this.sel.selectAll('#nodes,#text-labels')\n        .selectAll('.node,.text-label')\n        .classed('selected', true);\n}\n\nfunction select_none() {\n    /** Deselect all nodes and text labels.\n\n     */\n    this.sel.selectAll('.selected')\n        .classed('selected', false);\n}\n\nfunction invert_selection() {\n    /** Invert selection of nodes and text labels.\n\n     */\n    var selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label');\n    selection.classed('selected', function() {\n        return !d3.select(this).classed('selected');\n    });\n}\n\nfunction select_metabolite_with_id(node_id) {\n    /** Select a metabolite with the given id, and turn off the reaction\n     target.\n\n     */\n    // deselect all text labels\n    this.deselect_text_labels();\n\n    var node_selection = this.sel.select('#nodes').selectAll('.node'),\n        coords,\n        selected_node;\n    node_selection.classed('selected', function(d) {\n        var selected = String(d.node_id) == String(node_id);\n        if (selected) {\n            selected_node = d;\n            coords = { x: d.x, y: d.y };\n        }\n        return selected;\n    });\n    this.sel.selectAll('.start-reaction-target').style('visibility', 'hidden');\n    this.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n}\n\nfunction select_selectable(node, d, shift_key_on) {\n    /** Select a metabolite or text label, and manage the shift key. */\n    shift_key_on = _.isUndefined(shift_key_on) ? false : shift_key_on;\n    var classable_selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label'),\n        classable_node;\n    if (d3.select(node).attr('class').indexOf('text-label') == -1) {\n        // node\n        classable_node = node.parentNode;\n    } else {\n        // text-label\n        classable_node = node;\n    }\n    // toggle selection\n    if (shift_key_on) {\n        // toggle this node\n        d3.select(classable_node)\n            .classed('selected', !d3.select(classable_node).classed('selected'));\n    } else {\n        // unselect all other nodes, and select this one\n        classable_selection.classed('selected', false);\n        d3.select(classable_node).classed('selected', true);\n    }\n    // run the select_metabolite callback\n    var selected_nodes = this.sel.select('#nodes').selectAll('.selected'),\n        node_count = 0,\n        coords,\n        selected_node;\n    selected_nodes.each(function(d) {\n        selected_node = d;\n        coords = { x: d.x, y: d.y };\n        node_count++;\n    });\n    this.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n}\n\nfunction select_single_node() {\n    /** Unselect all but one selected node, and return the node.\n\n     If no nodes are selected, return null.\n\n     */\n    var out = null,\n        self = this,\n        node_selection = this.sel.select('#nodes').selectAll('.selected');\n    node_selection.classed('selected', function(d, i) {\n        if (i==0) {\n            out = d;\n            return true;\n        } else {\n            return false;\n        }\n    });\n    return out;\n}\nfunction deselect_nodes() {\n    var node_selection = this.sel.select('#nodes').selectAll('.node');\n    node_selection.classed('selected', false);\n    this.callback_manager.run('deselect_nodes');\n}\nfunction select_text_label(sel, d) {\n    // deselect all nodes\n    this.deselect_nodes();\n    // find the new selection\n    // Ignore shift key and only allow single selection for now\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', function(p) { return d === p; });\n    var selected_text_labels = this.sel.select('#text-labels').selectAll('.selected'),\n        coords;\n    selected_text_labels.each(function(d) {\n        coords = { x: d.x, y: d.y };\n    });\n    this.callback_manager.run('select_text_label');\n}\n\nfunction deselect_text_labels() {\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', false);\n}\n\n// ---------------------------------------------------------------------\n// Delete\n\nfunction delete_selected() {\n    /** Delete the selected nodes and associated segments and reactions, and selected labels.\n\n     Undoable.\n\n     */\n    var selected_nodes = this.get_selected_nodes(),\n        selected_text_labels = this.get_selected_text_labels();\n    if (Object.keys(selected_nodes).length >= 1 ||\n        Object.keys(selected_text_labels).length >= 1)\n        this.delete_selectable(selected_nodes, selected_text_labels, true);\n}\n\nfunction delete_selectable(selected_nodes, selected_text_labels, should_draw) {\n    /** Delete the nodes and associated segments and reactions. Undoable.\n\n     Arguments\n     ---------\n\n     selected_nodes: An object that is a subset of map.nodes.\n\n     selected_text_labels: An object that is a subset of map.text_labels.\n\n     should_draw: A boolean argument to determine whether to draw the changes to the map.\n\n     */\n\n    var out = this.segments_and_reactions_for_nodes(selected_nodes),\n        segment_objs_w_segments = out.segment_objs_w_segments, // TODO repeated values here\n        reactions = out.reactions;\n\n    // copy nodes to undelete\n    var saved_nodes = utils.clone(selected_nodes),\n        saved_segment_objs_w_segments = utils.clone(segment_objs_w_segments),\n        saved_reactions = utils.clone(reactions),\n        saved_text_labels = utils.clone(selected_text_labels),\n        delete_and_draw = function(nodes, reactions, segment_objs,\n                                   selected_text_labels) {\n            // delete nodes, segments, and reactions with no segments\n            this.delete_node_data(Object.keys(selected_nodes));\n            this.delete_segment_data(segment_objs); // also deletes beziers\n            this.delete_reaction_data(Object.keys(reactions));\n            this.delete_text_label_data(Object.keys(selected_text_labels));\n\n            // apply the reaction and node data\n            var changed_r_scale = false,\n                changed_m_scale = false;\n            if (this.has_data_on_reactions)\n                changed_r_scale = this.calc_data_stats('reaction');\n            if (this.has_data_on_nodes)\n                changed_m_scale = this.calc_data_stats('metabolite');\n\n            // redraw\n            if (should_draw) {\n                if (changed_r_scale)\n                    this.draw_all_reactions(true, true);\n                else\n                    this.clear_deleted_reactions(); // also clears segments and beziers\n                if (changed_m_scale)\n                    this.draw_all_nodes(true);\n                else\n                    this.clear_deleted_nodes();\n                this.clear_deleted_text_labels();\n            }\n        }.bind(this);\n\n    // delete\n    delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                    selected_text_labels);\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // redraw the saved nodes, reactions, and segments\n\n        this.extend_nodes(saved_nodes);\n        this.extend_reactions(saved_reactions);\n        var reaction_ids_to_draw = Object.keys(saved_reactions);\n        for (var segment_id in saved_segment_objs_w_segments) {\n            var segment_obj = saved_segment_objs_w_segments[segment_id];\n\n            var segment = segment_obj.segment;\n            this.reactions[segment_obj.reaction_id]\n                .segments[segment_obj.segment_id] = segment;\n\n            // updated connected nodes\n            [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n                // not necessary for the deleted nodes\n                if (node_id in saved_nodes) return;\n                var node = this.nodes[node_id];\n                node.connected_segments.push({ reaction_id: segment_obj.reaction_id,\n                                               segment_id: segment_obj.segment_id });\n            }.bind(this));\n\n            // extend the beziers\n            var seg_id = segment_obj.segment_id,\n                r_id = segment_obj.reaction_id,\n                seg_o = {};\n            seg_o[seg_id] = segment_obj.segment;\n            utils.extend(this.beziers, build.new_beziers_for_segments(seg_o, r_id));\n\n            if (reaction_ids_to_draw.indexOf(segment_obj.reaction_id)==-1)\n                reaction_ids_to_draw.push(segment_obj.reaction_id);\n        }\n\n        // apply the reaction and node data\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(reaction_ids_to_draw);\n        } else {\n            if (should_draw) this.draw_these_reactions(reaction_ids_to_draw);\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (should_draw) {\n                if (scale_changed) this.draw_all_nodes(false);\n                else this.draw_these_nodes(Object.keys(saved_nodes));\n            }\n        } else {\n            if (should_draw) this.draw_these_nodes(Object.keys(saved_nodes));\n        }\n\n        // redraw the saved text_labels\n        utils.extend(this.text_labels, saved_text_labels);\n        if (should_draw) this.draw_these_text_labels(Object.keys(saved_text_labels));\n        // copy text_labels to re-delete\n        selected_text_labels = utils.clone(saved_text_labels);\n\n        // copy nodes to re-delete\n        selected_nodes = utils.clone(saved_nodes);\n        segment_objs_w_segments = utils.clone(saved_segment_objs_w_segments);\n        reactions = utils.clone(saved_reactions);\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                        selected_text_labels);\n    }.bind(this));\n}\n\nfunction delete_node_data(node_ids) {\n    /** Delete nodes, and remove from search index.\n     */\n    node_ids.forEach(function(node_id) {\n        if (this.enable_search && this.nodes[node_id].node_type=='metabolite') {\n            var found = (this.search_index.remove('n' + node_id)\n                         && this.search_index.remove('n_name' + node_id));\n            if (!found)\n                console.warn('Could not find deleted metabolite in search index');\n        }\n        delete this.nodes[node_id];\n    }.bind(this));\n}\n\nfunction delete_segment_data(segment_objs) {\n    /** Delete segments, update connected_segments in nodes, and delete\n     bezier points.\n\n     segment_objs: Object with values like { reaction_id: '123', segment_id: '456' }\n\n     */\n    for (var segment_id in segment_objs) {\n        var segment_obj = segment_objs[segment_id];\n        var reaction = this.reactions[segment_obj.reaction_id];\n\n        // segment already deleted\n        if (!(segment_obj.segment_id in reaction.segments)) return;\n\n        var segment = reaction.segments[segment_obj.segment_id];\n        // updated connected nodes\n        [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n            if (!(node_id in this.nodes)) return;\n            var node = this.nodes[node_id];\n            node.connected_segments = node.connected_segments.filter(function(so) {\n                return so.segment_id != segment_obj.segment_id;\n            });\n        }.bind(this));\n\n        // remove beziers\n        ['b1', 'b2'].forEach(function(bez) {\n            var bez_id = build.bezier_id_for_segment_id(segment_obj.segment_id, bez);\n            delete this.beziers[bez_id];\n        }.bind(this));\n\n        delete reaction.segments[segment_obj.segment_id];\n    }\n}\nfunction delete_reaction_data(reaction_ids) {\n    /** Delete reactions, segments, and beziers, and remove reaction from\n     search index.\n\n     */\n    reaction_ids.forEach(function(reaction_id) {\n        // remove beziers\n        var reaction = this.reactions[reaction_id];\n        for (var segment_id in reaction.segments) {\n            ['b1', 'b2'].forEach(function(bez) {\n                var bez_id = build.bezier_id_for_segment_id(segment_id, bez);\n                delete this.beziers[bez_id];\n            }.bind(this));\n        }\n        // delete reaction\n        delete this.reactions[reaction_id];\n        // remove from search index\n        var found = (this.search_index.remove('r' + reaction_id)\n                     && this.search_index.remove('r_name' + reaction_id));\n        if (!found)\n            console.warn('Could not find deleted reaction ' +\n                         reaction_id + ' in search index');\n        for (var g_id in reaction.genes) {\n            var found = (this.search_index.remove('r' + reaction_id + '_g' + g_id)\n                         && this.search_index.remove('r' + reaction_id + '_g_name' + g_id));\n            if (!found)\n                console.warn('Could not find deleted gene ' +\n                             g_id + ' in search index');\n        }\n    }.bind(this));\n}\nfunction delete_text_label_data(text_label_ids) {\n    /** delete text labels for an array of ids\n     */\n    text_label_ids.forEach(function(text_label_id) {\n        // delete label\n        delete this.text_labels[text_label_id];\n        // remove from search index\n        var found = this.search_index.remove('l'+text_label_id);\n        if (!found)\n            console.warn('Could not find deleted text label in search index');\n    }.bind(this));\n}\n\n// ---------------------------------------------------------------------\n// Building\n\nfunction new_reaction_from_scratch(starting_reaction, coords, direction) {\n    /** Draw a reaction on a blank canvas.\n\n     starting_reaction: bigg_id for a reaction to draw.\n     coords: coordinates to start drawing\n\n     */\n\n    // If there is no cobra model, error\n    if (!this.cobra_model) return console.error('No CobraModel. Cannot build new reaction');\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = utils.clone(this.cobra_model.reactions[starting_reaction]);\n\n    // create the first node\n    for (var metabolite_id in cobra_reaction.metabolites) {\n        var coefficient = cobra_reaction.metabolites[metabolite_id],\n            metabolite = this.cobra_model.metabolites[metabolite_id];\n        if (coefficient < 0) {\n            var selected_node_id = String(++this.largest_ids.nodes),\n                label_d = { x: 30, y: 10 },\n                selected_node = { connected_segments: [],\n                                  x: coords.x,\n                                  y: coords.y,\n                                  node_is_primary: true,\n                                  label_x: coords.x + label_d.x,\n                                  label_y: coords.y + label_d.y,\n                                  name: metabolite.name,\n                                  bigg_id: metabolite_id,\n                                  node_type: 'metabolite' },\n                new_nodes = {};\n            new_nodes[selected_node_id] = selected_node;\n            break;\n        }\n    }\n\n    // draw\n    extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes);\n\n    // draw the reaction\n    var out = this.new_reaction_for_metabolite(starting_reaction,\n                                               selected_node_id,\n                                               direction, false),\n        reaction_redo = out.redo,\n        reaction_undo = out.undo;\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // first undo the reaction\n        reaction_undo();\n        // get the nodes to delete\n        this.delete_node_data(Object.keys(new_nodes));\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        // draw\n        this.clear_deleted_nodes();\n        // deselect\n        this.deselect_nodes();\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n        // now redo the reaction\n        reaction_redo();\n    }.bind(this));\n\n    return null;\n\n    // definitions\n    function extend_and_draw_metabolite(new_nodes, selected_node_id) {\n        this.extend_nodes(new_nodes);\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.apply_metabolite_data_to_nodes(new_nodes);\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes([selected_node_id]);\n        } else {\n            this.draw_these_nodes([selected_node_id]);\n        }\n    }\n}\n\nfunction extend_nodes(new_nodes) {\n    /** Add new nodes to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_type != 'metabolite')\n                continue;\n            this.search_index.insert('n' + node_id,\n                                     { 'name': node.bigg_id,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n            this.search_index.insert('n_name' + node_id,\n                                     { 'name': node.name,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n        }\n    }\n    utils.extend(this.nodes, new_nodes);\n}\nfunction extend_reactions(new_reactions) {\n    /** Add new reactions to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var r_id in new_reactions) {\n            var reaction = new_reactions[r_id];\n            this.search_index.insert('r' + r_id, { 'name': reaction.bigg_id,\n                                                   'data': { type: 'reaction',\n                                                             reaction_id: r_id }});\n            this.search_index.insert('r_name' + r_id, { 'name': reaction.name,\n                                                        'data': { type: 'reaction',\n                                                                  reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                this.search_index.insert('r' + r_id + '_g' + g_id,\n                                         { 'name': gene.bigg_id,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n                this.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                         { 'name': gene.name,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n            }\n        }\n    }\n    utils.extend(this.reactions, new_reactions);\n}\n\nfunction new_reaction_for_metabolite(reaction_bigg_id, selected_node_id,\n                                     direction, apply_undo_redo) {\n    /** Build a new reaction starting with selected_met.\n\n     Undoable\n\n     Arguments\n     ---------\n\n     reaction_bigg_id: The BiGG ID of the reaction to draw.\n\n     selected_node_id: The ID of the node to begin drawing with.\n\n     direction: The direction to draw in.\n\n     apply_undo_redo: (Optional, Default: true) If true, then add to the\n     undo stack. Otherwise, just return the undo and redo functions.\n\n     Returns\n     -------\n\n     { undo: undo_function,\n     redo: redo_function }\n\n     */\n\n    // default args\n    if (apply_undo_redo === undefined) apply_undo_redo = true;\n\n    // get the metabolite node\n    var selected_node = this.nodes[selected_node_id];\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = this.cobra_model.reactions[reaction_bigg_id];\n\n    // build the new reaction\n    var out = build.new_reaction(reaction_bigg_id, cobra_reaction,\n                                 this.cobra_model.metabolites,\n                                 selected_node_id,\n                                 utils.clone(selected_node),\n                                 this.largest_ids,\n                                 this.cobra_model.cofactors,\n                                 direction),\n        new_nodes = out.new_nodes,\n        new_reactions = out.new_reactions,\n        new_beziers = out.new_beziers;\n\n    // draw\n    extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                          new_beziers, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes),\n        saved_reactions = utils.clone(new_reactions),\n        saved_beziers = utils.clone(new_beziers);\n\n    // add to undo/redo stack\n    var undo_fn = function() {\n        // undo\n        // get the nodes to delete\n        delete new_nodes[selected_node_id];\n        this.delete_node_data(Object.keys(new_nodes));\n        this.delete_reaction_data(Object.keys(new_reactions)); // also deletes beziers\n        select_metabolite_with_id.apply(this, [selected_node_id]);\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        new_reactions = utils.clone(saved_reactions);\n        new_beziers = utils.clone(saved_beziers);\n        // draw\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, true);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.clear_deleted_reactions(true); // also clears segments and beziers\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(true);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.clear_deleted_nodes();\n        }\n    }.bind(this),\n        redo_fn = function () {\n            // redo\n            // clone the nodes and reactions, to redo this action later\n            extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                                  new_beziers, selected_node_id]);\n        }.bind(this);\n\n    if (apply_undo_redo)\n        this.undo_stack.push(undo_fn, redo_fn);\n\n    return { undo: undo_fn,\n             redo: redo_fn };\n\n    // definitions\n    function extend_and_draw_reaction(new_nodes, new_reactions, new_beziers,\n                                      selected_node_id) {\n        this.extend_reactions(new_reactions);\n        utils.extend(this.beziers, new_beziers);\n        // remove the selected node so it can be updated\n        this.delete_node_data([selected_node_id]); // TODO this is a hack. fix\n        this.extend_nodes(new_nodes);\n\n        // apply the reaction and node data to the scales\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.draw_these_reactions(Object.keys(new_reactions));\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.draw_these_nodes(Object.keys(new_nodes));\n        }\n\n        // select new primary metabolite\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_is_primary && node_id!=selected_node_id) {\n                this.select_metabolite_with_id(node_id);\n                var new_coords = { x: node.x, y: node.y };\n                if (this.zoom_container)\n                    this.zoom_container.translate_off_screen(new_coords);\n            }\n        }\n    }\n\n}\nfunction cycle_primary_node() {\n    var selected_nodes = this.get_selected_nodes();\n    // get the first node\n    var node_id = Object.keys(selected_nodes)[0],\n        node = selected_nodes[node_id],\n        reactions = this.reactions,\n        nodes = this.nodes;\n    // make the other reactants or products secondary\n    // 1. Get the connected anchor nodes for the node\n    var connected_anchor_ids = [],\n        reactions_to_draw;\n    nodes[node_id].connected_segments.forEach(function(segment_info) {\n        reactions_to_draw = [segment_info.reaction_id];\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        connected_anchor_ids.push(segment.from_node_id==node_id ?\n                                  segment.to_node_id : segment.from_node_id);\n    });\n    // can only be connected to one anchor\n    if (connected_anchor_ids.length != 1) {\n        console.error('Only connected nodes with a single reaction can be selected');\n        return;\n    }\n    var connected_anchor_id = connected_anchor_ids[0];\n    // 2. find nodes connected to the anchor that are metabolites\n    var related_node_ids = [node_id];\n    var segments = [];\n    nodes[connected_anchor_id].connected_segments.forEach(function(segment_info) { // deterministic order\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        var conn_met_id = segment.from_node_id == connected_anchor_id ? segment.to_node_id : segment.from_node_id,\n            conn_node = nodes[conn_met_id];\n        if (conn_node.node_type == 'metabolite' && conn_met_id != node_id) {\n            related_node_ids.push(String(conn_met_id));\n        }\n    });\n    // 3. make sure they only have 1 reaction connection, and check if\n    // they match the other selected nodes\n    for (var i=0; i<related_node_ids.length; i++) {\n        if (nodes[related_node_ids[i]].connected_segments.length > 1) {\n            console.error('Only connected nodes with a single reaction can be selected');\n            return;\n        }\n    }\n    for (var a_selected_node_id in selected_nodes) {\n        if (a_selected_node_id!=node_id && related_node_ids.indexOf(a_selected_node_id) == -1) {\n            console.warn('Selected nodes are not on the same reaction');\n            return;\n        }\n    }\n    // 4. change the primary node, and change coords, label coords, and beziers\n    var nodes_to_draw = [],\n        last_i = related_node_ids.length - 1,\n        last_node = nodes[related_node_ids[last_i]],\n        last_is_primary = last_node.node_is_primary,\n        last_coords = { x: last_node.x, y: last_node.y,\n                        label_x: last_node.label_x, label_y: last_node.label_y };\n    if (last_node.connected_segments.length > 1)\n        console.warn('Too many connected segments for node ' + last_node.node_id);\n    var last_segment_info = last_node.connected_segments[0], // guaranteed above to have only one\n        last_segment;\n    try {\n        last_segment = reactions[last_segment_info.reaction_id].segments[last_segment_info.segment_id];\n        if (last_segment === undefined) throw new Error('undefined segment');\n    } catch (e) {\n        console.error('Could not find connected segment ' + last_segment_info.segment_id);\n        return;\n    }\n    var last_bezier = { b1: last_segment.b1, b2: last_segment.b2 },\n        primary_node_id;\n    related_node_ids.forEach(function(related_node_id) {\n        var node = nodes[related_node_id],\n            this_is_primary = node.node_is_primary,\n            these_coords = { x: node.x, y: node.y,\n                             label_x: node.label_x, label_y: node.label_y },\n            this_segment_info = node.connected_segments[0],\n            this_segment = reactions[this_segment_info.reaction_id].segments[this_segment_info.segment_id],\n            this_bezier = { b1: this_segment.b1, b2: this_segment.b2 };\n        node.node_is_primary = last_is_primary;\n        node.x = last_coords.x; node.y = last_coords.y;\n        node.label_x = last_coords.label_x; node.label_y = last_coords.label_y;\n        this_segment.b1 = last_bezier.b1; this_segment.b2 = last_bezier.b2;\n        last_is_primary = this_is_primary;\n        last_coords = these_coords;\n        last_bezier = this_bezier;\n        if (node.node_is_primary) primary_node_id = related_node_id;\n        nodes_to_draw.push(related_node_id);\n    });\n    // 5. cycle the connected_segments array so the next time, it cycles differently\n    var old_connected_segments = nodes[connected_anchor_id].connected_segments,\n        last_i = old_connected_segments.length - 1,\n        new_connected_segments = [old_connected_segments[last_i]];\n    old_connected_segments.forEach(function(segment, i) {\n        if (last_i==i) return;\n        new_connected_segments.push(segment);\n    });\n    nodes[connected_anchor_id].connected_segments = new_connected_segments;\n    // 6. draw the nodes\n    this.draw_these_nodes(nodes_to_draw);\n    this.draw_these_reactions(reactions_to_draw);\n    // 7. select the primary node\n    this.select_metabolite_with_id(primary_node_id);\n    return;\n}\n\nfunction toggle_selected_node_primary() {\n    /** Toggle the primary/secondary status of each selected node.\n\n     Undoable.\n\n     */\n    var selected_node_ids = this.get_selected_node_ids(),\n        go = function(ids) {\n            var nodes_to_draw = {},\n                hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n            ids.forEach(function(id) {\n                if (!(id in this.nodes)) {\n                    console.warn('Could not find node: ' + id);\n                    return;\n                }\n                var node = this.nodes[id];\n                if (node.node_type == 'metabolite') {\n                    node.node_is_primary = !node.node_is_primary;\n                    nodes_to_draw[id] = node;\n                }\n            }.bind(this));\n            // draw the nodes\n            this.draw_these_nodes(Object.keys(nodes_to_draw));\n            // draw associated reactions\n            if (hide_secondary_metabolites) {\n                var out = this.segments_and_reactions_for_nodes(nodes_to_draw),\n                    reaction_ids_to_draw_o = {};\n                for (var id in out.segment_objs_w_segments) {\n                    var r_id = out.segment_objs_w_segments[id].reaction_id;\n                    reaction_ids_to_draw_o[r_id] = true;\n                }\n                this.draw_these_reactions(Object.keys(reaction_ids_to_draw_o));\n            }\n        }.bind(this);\n\n    // go\n    go(selected_node_ids);\n\n    // add to the undo stack\n    this.undo_stack.push(function () {\n        go(selected_node_ids);\n    }, function () {\n        go(selected_node_ids);\n    });\n}\n\nfunction segments_and_reactions_for_nodes(nodes) {\n    /** Get segments and reactions that should be deleted with node deletions\n\n     */\n    var segment_objs_w_segments = {},\n        these_reactions = {},\n        segment_ids_for_reactions = {},\n        reactions = this.reactions;\n    // for each node\n    for (var node_id in nodes) {\n        var node = nodes[node_id];\n        // find associated segments and reactions\n        node.connected_segments.forEach(function(segment_obj) {\n            var segment;\n            try {\n                segment = reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segments for node');\n                return;\n            }\n            var segment_obj_w_segment = utils.clone(segment_obj);\n            segment_obj_w_segment['segment'] = utils.clone(segment);\n            segment_objs_w_segments[segment_obj.segment_id] = segment_obj_w_segment;\n            if (!(segment_obj.reaction_id in segment_ids_for_reactions))\n                segment_ids_for_reactions[segment_obj.reaction_id] = [];\n            segment_ids_for_reactions[segment_obj.reaction_id].push(segment_obj.segment_id);\n        });\n    }\n    // find the reactions that should be deleted because they have no segments left\n    for (var reaction_id in segment_ids_for_reactions) {\n        var reaction = reactions[reaction_id],\n            these_ids = segment_ids_for_reactions[reaction_id],\n            has = true;\n        for (var segment_id in reaction.segments) {\n            if (these_ids.indexOf(segment_id)==-1) has = false;\n        }\n        if (has) these_reactions[reaction_id] = reaction;\n    }\n    return { segment_objs_w_segments: segment_objs_w_segments, reactions: these_reactions };\n}\n\nfunction new_text_label(coords, text) {\n    // make an label\n    var out = build.new_text_label(this.largest_ids, text, coords);\n    this.text_labels[out.id] = out.label;\n    var sel = this.draw_these_text_labels([out.id]);\n    // add to the search index\n    this.search_index.insert('l' + out.id, { 'name': text,\n                                             'data': { type: 'text_label',\n                                                       text_label_id: out.id }});\n    return out.id;\n}\n\nfunction edit_text_label(text_label_id, new_value, should_draw) {\n    // save old value\n    var saved_value = this.text_labels[text_label_id].text,\n        edit_and_draw = function(new_val, should_draw) {\n            // set the new value\n            this.text_labels[text_label_id].text = new_val;\n            if (should_draw) this.draw_these_text_labels([text_label_id]);\n            // update in the search index\n            var record_id = 'l' + text_label_id,\n                found = this.search_index.remove(record_id);\n            if (!found)\n                console.warn('Could not find modified text label in search index');\n            this.search_index.insert(record_id, { 'name': new_val,\n                                                  'data': { type: 'text_label',\n                                                            text_label_id: text_label_id }});\n        }.bind(this);\n\n    // edit the label\n    edit_and_draw(new_value, should_draw);\n\n    // add to undo stack\n    this.undo_stack.push(function() {\n        edit_and_draw(saved_value, should_draw);\n    }, function () {\n        edit_and_draw(new_value, should_draw);\n    });\n}\n\n// -------------------------------------------------------------------------\n// Zoom\n\nfunction zoom_extent_nodes(margin) {\n    /** Zoom to fit all the nodes.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'nodes');\n}\nfunction zoom_extent_canvas(margin) {\n    /** Zoom to fit the canvas.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'canvas');\n}\nfunction _zoom_extent(margin, mode) {\n    /** Zoom to fit the canvas or all the nodes. Returns error if one is\n     raised.\n\n     Arguments\n     ---------\n\n     margin: optional argument to set the margins.\n\n     mode: Values are 'nodes', 'canvas'.\n\n     */\n\n    // optional args\n    if (margin===undefined) margin = (mode=='nodes' ? 0.2 : 0);\n    if (mode===undefined) mode = 'canvas';\n\n    var new_zoom, new_pos,\n        size = this.get_size();\n    // scale margin to window size\n    margin = margin * size.height;\n\n    if (mode=='nodes') {\n        // get the extent of the nodes\n        var min = { x: null, y: null }, // TODO make infinity?\n            max = { x: null, y: null };\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            if (min.x===null) min.x = node.x;\n            if (min.y===null) min.y = node.y;\n            if (max.x===null) max.x = node.x;\n            if (max.y===null) max.y = node.y;\n\n            min.x = Math.min(min.x, node.x);\n            min.y = Math.min(min.y, node.y);\n            max.x = Math.max(max.x, node.x);\n            max.y = Math.max(max.y, node.y);\n        }\n        // set the zoom\n        new_zoom = Math.min((size.width - margin*2) / (max.x - min.x),\n                            (size.height - margin*2) / (max.y - min.y));\n        new_pos = { x: - (min.x * new_zoom) + margin + ((size.width - margin*2 - (max.x - min.x)*new_zoom) / 2),\n                    y: - (min.y * new_zoom) + margin + ((size.height - margin*2 - (max.y - min.y)*new_zoom) / 2) };\n    } else if (mode=='canvas') {\n        // center the canvas\n        new_zoom =  Math.min((size.width - margin*2) / (this.canvas.width),\n                             (size.height - margin*2) / (this.canvas.height));\n        new_pos = { x: - (this.canvas.x * new_zoom) + margin + ((size.width - margin*2 - this.canvas.width*new_zoom) / 2),\n                    y: - (this.canvas.y * new_zoom) + margin + ((size.height - margin*2 - this.canvas.height*new_zoom) / 2) };\n    } else {\n        return console.error('Did not recognize mode');\n    }\n    debugger;\n    this.zoom_container.go_to(new_zoom, new_pos);\n    return null;\n}\n\nfunction get_size() {\n    return this.zoom_container.get_size();\n}\n\nfunction zoom_to_reaction(reaction_id) {\n    var reaction = this.reactions[reaction_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - reaction.label_x * new_zoom + size.width/2,\n                    y: - reaction.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_node(node_id) {\n    var node = this.nodes[node_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - node.label_x * new_zoom + size.width/2,\n                    y: - node.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_text_label(text_label_id) {\n    var text_label = this.text_labels[text_label_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - text_label.x * new_zoom + size.width/2,\n                    y: - text_label.y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction highlight_reaction(reaction_id) {\n    this.highlight(this.sel.selectAll('#r'+reaction_id).selectAll('text'));\n}\n\nfunction highlight_node(node_id) {\n    this.highlight(this.sel.selectAll('#n'+node_id).selectAll('text'));\n}\n\nfunction highlight_text_label(text_label_id) {\n    this.highlight(this.sel.selectAll('#l'+text_label_id).selectAll('text'));\n}\n\nfunction highlight(sel) {\n    this.sel.selectAll('.highlight')\n        .classed('highlight', false);\n    if (sel !== null) {\n        sel.classed('highlight', true);\n    }\n}\n\n// -------------------------------------------------------------------------\n// IO\n\nfunction save() {\n    utils.download_json(this.map_for_export(), this.map_name);\n}\n\n\nfunction map_for_export() {\n    var out = [{ \"map_name\": this.map_name,\n                 \"map_id\": this.map_id,\n                 \"map_description\": this.map_description,\n                 \"homepage\": \"https://escher.github.io\",\n                 \"schema\": \"https://escher.github.io/escher/jsonschema/1-0-0#\"\n               },\n               { reactions: utils.clone(this.reactions),\n                 nodes: utils.clone(this.nodes),\n                 text_labels: utils.clone(this.text_labels),\n                 canvas: this.canvas.size_and_location() }\n              ];\n\n    // remove extra data\n    for (var r_id in out[1].reactions) {\n        var reaction = out[1].reactions[r_id],\n            new_reaction = {};\n        ['name', 'bigg_id','reversibility', 'label_x', 'label_y',\n         'gene_reaction_rule', 'genes', 'metabolites'\n        ].forEach(function(attr) {\n            new_reaction[attr] = reaction[attr];\n        });\n        new_reaction['segments'] = {};\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id],\n                new_segment = {};\n            ['from_node_id', 'to_node_id', 'b1', 'b2'\n            ].forEach(function(attr) {\n                new_segment[attr] = segment[attr];\n            });\n            new_reaction['segments'][s_id] = new_segment;\n        }\n        out[1].reactions[r_id] = new_reaction;\n    }\n    for (var n_id in out[1].nodes) {\n        var node = out[1].nodes[n_id],\n            new_node = {},\n            attrs;\n        if (node.node_type == 'metabolite') {\n            attrs = ['node_type', 'x', 'y', 'bigg_id', 'name', 'label_x', 'label_y',\n                     'node_is_primary'];\n        } else {\n            attrs = ['node_type', 'x', 'y'];\n        }\n        attrs.forEach(function(attr) {\n            new_node[attr] = node[attr];\n        });\n        out[1].nodes[n_id] = new_node;\n    }\n    for (var t_id in out[1].text_labels) {\n        var text_label = out[1].text_labels[t_id],\n            new_text_label = {},\n            attrs = [\"x\", \"y\", \"text\"];\n        attrs.forEach(function(attr) {\n            new_text_label[attr] = text_label[attr];\n        });\n        out[1].text_labels[t_id] = new_text_label;\n    }\n    // canvas\n    var canvas_el = out[1].canvas,\n        new_canvas_el = {},\n        attrs = [\"x\", \"y\", \"width\", \"height\"];\n    attrs.forEach(function(attr) {\n        new_canvas_el[attr] = canvas_el[attr];\n    });\n    out[1].canvas = new_canvas_el;\n\n    return out;\n}\n\n\nfunction save_svg() {\n    /** Rescale the canvas and save svg.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_svg_export');\n\n    // turn of zoom and translate so that illustrator likes the map\n    var window_scale = this.zoom_container.window_scale,\n        window_translate = this.zoom_container.window_translate,\n        canvas_size_and_loc = this.canvas.size_and_location(),\n        mouse_node_size_and_trans = {\n            w: this.canvas.mouse_node.attr('width'),\n            h: this.canvas.mouse_node.attr('height'),\n            transform: this.canvas.mouse_node.attr('transform')\n        };\n    this.zoom_container._go_to_svg(1.0, { x: -canvas_size_and_loc.x, y: -canvas_size_and_loc.y }, function() {\n        this.svg.attr('width', canvas_size_and_loc.width);\n        this.svg.attr('height', canvas_size_and_loc.height);\n        this.canvas.mouse_node.attr('width', '0px');\n        this.canvas.mouse_node.attr('height', '0px');\n        this.canvas.mouse_node.attr('transform', null);\n        // hide the segment control points\n        var hidden_sel = this.sel.selectAll('.multimarker-circle,.midmarker-circle,#canvas')\n                .style('visibility', 'hidden');\n\n        // do the epxort\n        utils.download_svg('saved_map', this.svg, true);\n\n        // revert everything\n        this.zoom_container._go_to_svg(window_scale, window_translate, function() {\n            this.svg.attr('width', null);\n            this.svg.attr('height', null);\n            this.canvas.mouse_node.attr('width', mouse_node_size_and_trans.w);\n            this.canvas.mouse_node.attr('height', mouse_node_size_and_trans.h);\n            this.canvas.mouse_node.attr('transform', mouse_node_size_and_trans.transform);\n            // unhide the segment control points\n            hidden_sel.style('visibility', null);\n\n            // run the after callback\n            this.callback_manager.run('after_svg_export');\n        }.bind(this));\n    }.bind(this));\n}\n\n\nfunction convert_map() {\n    /** Assign the descriptive names and gene_reaction_rules from the model\n     to the map.\n\n     If no map is loaded, then throw an Error.\n\n     If some reactions are not in the model, then warn in the status.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_convert_map');\n\n    // check the model\n    if (!this.has_cobra_model()) throw Error('No COBRA model loaded.');\n    var model = this.cobra_model;\n\n    // ids for reactions and metabolites not found in the model\n    var reactions_not_found = {},\n        reaction_attrs = ['name', 'gene_reaction_rule', 'genes'],\n        met_nodes_not_found = {},\n        metabolite_attrs = ['name'],\n        found;\n    // convert reactions\n    for (var reaction_id in this.reactions) {\n        var reaction = this.reactions[reaction_id];\n        found = false;\n        // find in cobra model\n        for (var model_reaction_id in model.reactions) {\n            var model_reaction = model.reactions[model_reaction_id];\n            if (model_reaction.bigg_id == reaction.bigg_id) {\n                reaction_attrs.forEach(function(attr) {\n                    reaction[attr] = model_reaction[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            reactions_not_found[reaction_id] = true;\n    }\n    // convert metabolites\n    for (var node_id in this.nodes) {\n        var node = this.nodes[node_id];\n        // only look at metabolites\n        if (node.node_type != 'metabolite') continue;\n        found = false;\n        // find in cobra model\n        for (var model_metabolite_id in model.metabolites) {\n            var model_metabolite = model.metabolites[model_metabolite_id];\n            if (model_metabolite.bigg_id == node.bigg_id) {\n                metabolite_attrs.forEach(function(attr) {\n                    node[attr] = model_metabolite[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            met_nodes_not_found[node_id] = true;\n    }\n\n    // status\n    var n_reactions_not_found = Object.keys(reactions_not_found).length,\n        n_met_nodes_not_found = Object.keys(met_nodes_not_found).length,\n        status_delay = 3000;\n    if (n_reactions_not_found == 0 &&\n        n_met_nodes_not_found == 0) {\n        this.set_status('Successfully converted attributes.', status_delay);\n    } else if (n_met_nodes_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else if (n_reactions_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_met_nodes_not_found +\n                        ' metabolites in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions and ' + n_met_nodes_not_found + ' metabolites in the model.',\n                        status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    }\n\n    // redraw\n    this.draw_everything();\n\n    // run the after callback\n    this.callback_manager.run('after_convert_map');\n}\n","/** PlacedDiv. A container to position an html div to match the coordinates of a\n SVG element. */\n\nvar utils = require('./utils');\n\n\nvar PlacedDiv = utils.make_class();\n// instance methods\nPlacedDiv.prototype = {\n    init: init,\n    is_visible: is_visible,\n    place: place,\n    hide: hide\n};\nmodule.exports = PlacedDiv;\n\n\n// definitions\nfunction init(div, map, displacement) {\n    // make the input box\n    this.div = div;\n\n    if (displacement===undefined)\n        displacement = {x: 0, y: 0};\n    this.displacement = displacement;\n\n    this.map = map;\n}\n\nfunction is_visible() {\n    return this.div.style('display') != 'none';\n}\n\nfunction place(coords) {\n    /** Position the html div to match the given SVG coordinates.\n\n     */\n    // show the input\n    this.div.style('display', null);\n\n    // move the new input\n    var window_translate = this.map.zoom_container.window_translate,\n        window_scale = this.map.zoom_container.window_scale,\n        map_size = this.map.get_size(),\n        left = Math.max(20,\n                        Math.min(map_size.width - 270,\n                                 (window_scale * coords.x + window_translate.x - this.displacement.x))),\n        top = Math.max(20,\n                       Math.min(map_size.height - 40,\n                                (window_scale * coords.y + window_translate.y - this.displacement.y)));\n    this.div.style('position', 'absolute')\n        .style('display', 'block')\n        .style('left', left+'px')\n        .style('top', top+'px');\n}\n\nfunction hide() {\n    this.div.style('display', 'none');\n}\n","/** A QuickJump menu to move between maps.\n\n Arguments\n ---------\n\n sel: The d3 selection of an html node to place the menu inside.\n\n options: An array of map names to jump to.\n\n load_callback: A callback function that accepts two arguments: map_name,\n and another callback which returns true or false for success or failure\n (callback purgatory).\n\n */\n\nvar utils = require('./utils');\n\n\nvar QuickJump = utils.make_class();\n// instance methods\nQuickJump.prototype = {\n    init: init,\n    reset_selection: reset_selection,\n    replace_state_for_map_name: replace_state_for_map_name\n};\nmodule.exports = QuickJump;\n\n\n// instance methods\nfunction init(sel, load_callback) {\n    // set up the menu\n    var select_sel = sel.append('select')\n            .attr('id', 'quick-jump-menu')\n            .attr('class', 'form-control');\n    this.selector = select_sel;\n\n    // get the options to show\n    var url_comp = utils.parse_url_components(window),\n        current = ('map_name' in url_comp) ? url_comp.map_name : null,\n        quick_jump_path = ('quick_jump_path' in url_comp) ? url_comp.quick_jump_path : null,\n        options = ('quick_jump' in url_comp) ? url_comp.quick_jump : [],\n        default_value = '— Jump to map —',\n        view_options = [default_value].concat(options);\n    if (current !== null) {\n        view_options = view_options.filter(function(o) {\n            return o != current;\n        });\n    }\n\n    select_sel.selectAll('option')\n        .data(view_options)\n        .enter()\n        .append('option')\n        .text(function(d) {\n            // works whether or not a '.' is present\n            return d.split('.').slice(-1)[0];\n        });\n\n    // only show if there are options\n    select_sel.style('display', view_options.length > 1 ? 'block' : 'none');\n\n    // on selection\n    var change_map = function(map_name) {\n        load_callback(map_name, quick_jump_path, function(success) {\n            if (success)\n                this.replace_state_for_map_name(map_name);\n            else\n                this.reset_selection();\n        }.bind(this));\n    }.bind(this);\n\n    select_sel.on('change', function() {\n        // get the new map\n        var map_name = this.options[this.selectedIndex].__data__;\n        change_map(map_name);\n    });\n}\n\nfunction reset_selection() {\n    this.selector.node().selectedIndex = 0;\n}\n\nfunction replace_state_for_map_name(map_name) {\n    /** Just changes the url to match the new map name. Does not actually\n     manage the HTML5 history.\n\n     */\n\n    // update the url with the new map\n    var url = window.location.href\n            .replace(/(map_name=)([^&]+)(&|$)/, '$1' + map_name + '$3');\n    window.history.replaceState('Not implemented', '', url);\n}\n","/** Scale */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Scale = utils.make_class();\nScale.prototype = {\n    init: init,\n    connect_to_settings: connect_to_settings\n};\nmodule.exports = Scale;\n\n\nfunction init() {\n    this.x = d3.scale.linear();\n    this.y = d3.scale.linear();\n    this.x_size = d3.scale.linear();\n    this.y_size = d3.scale.linear();\n    this.size = d3.scale.linear();\n    this.reaction_color = d3.scale.linear().clamp(true);\n    this.reaction_size = d3.scale.linear().clamp(true);\n    this.metabolite_color = d3.scale.linear().clamp(true);\n    this.metabolite_size = d3.scale.linear().clamp(true);\n    this.scale_path = function(path) {\n        var x_fn = this.x, y_fn = this.y;\n        // TODO: scale arrow width\n        var str = d3.format(\".2f\"),\n            path = path.replace(/(M|L)([0-9-.]+),?\\s*([0-9-.]+)/g, function (match, p0, p1, p2) {\n                return p0 + [str(x_fn(parseFloat(p1))), str(y_fn(parseFloat(p2)))].join(', ');\n            }),\n            reg = /C([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)/g;\n        path = path.replace(reg, function (match, p1, p2, p3, p4, p5, p6) {\n            return 'C'+str(x_fn(parseFloat(p1)))+','+\n                str(y_fn(parseFloat(p2)))+' '+\n                str(x_fn(parseFloat(p3)))+','+\n                str(y_fn(parseFloat(p4)))+' '+\n                [str(x_fn(parseFloat(p5)))+','+str(y_fn(parseFloat(p6)))];\n        });\n        return path;\n    }.bind(this);\n    this.scale_decimals = function(path, scale_fn, precision) {\n        var str = d3.format(\".\"+String(precision)+\"f\");\n        path = path.replace(/([0-9.]+)/g, function (match, p1) {\n            return str(scale_fn(parseFloat(p1)));\n        });\n        return path;\n    };\n}\n\nfunction connect_to_settings(settings, map, get_data_statistics) {\n    // domains\n    var update_reaction = function(s) {\n        var out = sort_scale(s, get_data_statistics()['reaction']);\n        this.reaction_color.domain(out.domain);\n        this.reaction_size.domain(out.domain);\n        this.reaction_color.range(out.color_range);\n        this.reaction_size.range(out.size_range);\n    }.bind(this);\n    var update_metabolite = function(s) {\n        var out = sort_scale(s, get_data_statistics()['metabolite']);\n        this.metabolite_color.domain(out.domain);\n        this.metabolite_size.domain(out.domain);\n        this.metabolite_color.range(out.color_range);\n        this.metabolite_size.range(out.size_range);\n    }.bind(this);\n\n    // scale changes\n    settings.streams['reaction_scale'].onValue(update_reaction);\n    settings.streams['metabolite_scale'].onValue(update_metabolite);\n    // stats changes\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) update_reaction(settings.get_option('reaction_scale'));\n    });\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) update_metabolite(settings.get_option('metabolite_scale'));\n    });\n\n    // definitions\n    function sort_scale(scale, stats) {\n        var sorted = scale.map(function(x) {\n            var v;\n            if (x.type in stats)\n                v = stats[x.type];\n            else if (x.type == 'value')\n                v = x.value;\n            else\n                throw new Error('Bad domain type ' + x.type);\n            return { v: v,\n                     color: x.color,\n                     size: x.size };\n        }).sort(function(a, b) {\n            return a.v - b.v;\n        });\n        return { domain: sorted.map(function(x) { return x.v; }),\n                 color_range: sorted.map(function(x) { return x.color; }),\n                 size_range: sorted.map(function(x) { return x.size; }) };\n    }\n}\n","/** ScaleEditor. An interactive UI to edit color and size scales.\n\n Attributes\n ----------\n\n sel: A d3 selection.\n\n type: A type, that should be unique on the page.\n\n settings: The Settings object.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar bacon = require('baconjs');\n\n\nvar ScaleEditor = utils.make_class();\n// instance methods\nScaleEditor.prototype = {\n    init: init,\n    update: update,\n    update_no_data: update_no_data,\n    _data_not_loaded: _data_not_loaded\n};\nmodule.exports = ScaleEditor;\n\n\n// instance methods\nfunction init(sel, type, settings, get_data_statistics) {\n    // sels\n    var grad_id = 'grad' + type + this.unique_string;\n    this.w = 400;\n    this.h = 30;\n    this.x = 20;\n    this.input_width = 90;\n    this.input_height = 24;\n    var b = sel.append('div')\n            .attr('class', 'scale-editor');\n    // no data loaded\n    this.data_not_loaded = b.append('div')\n        .attr('class', 'data-not-loaded')\n        .text((type == 'reaction' ? 'Reaction and gene' : 'Metabolite') + ' data not loaded');\n    // label\n    this.input_label_group = b.append('div')\n        .attr('class', 'input-label-group');\n    // no data\n    var nd = b.append('div')\n            .style('top', this.input_height * 3 + 56 + 10 + 'px')\n            .attr('class', 'no-data');\n    nd.append('span').text('Styles for ' + type + 's with no data')\n        .attr('class', 'no-data-heading');\n    this.no_data_container = nd.append('div');\n    var c = b.append('div')\n            .attr('class', 'centered');\n    this.add_group = c.append('div');\n    this.trash_group = c.append('div')\n        .attr('class', 'trash-container');\n    var svg = c.append('svg')\n            .attr('class', 'scale-svg');\n    this.input_group = c.append('div')\n        .attr('class', 'input-container');\n    this.gradient = svg.append('defs')\n        .append('linearGradient')\n        .attr('id', grad_id);\n    svg.append('rect')\n        .attr('class', 'rect')\n        .attr('fill', 'url(#' + grad_id + ')')\n        .attr('width', this.w + 'px')\n        .attr('height', this.h + 'px')\n        .attr('x', this.x + 'px'),\n    this.pickers_group = svg.append('g');\n\n    // settings\n    this.type = type;\n    this.settings = settings;\n    this.get_data_statistics = get_data_statistics;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    // collect data\n    this.no_data = {};\n    ['color', 'size'].forEach(function(s) {\n        this.no_data[s] = null;\n        this.settings.streams[this.type + '_no_data_' + s].onValue(function(val) {\n            this.no_data[s] = val;\n            this.update_no_data();\n        }.bind(this));\n    }.bind(this));\n\n    this.settings.streams[type + '_scale'].onValue(function(scale) {\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n}\n\nfunction update() {\n    var scale = this.scale,\n        stats = this.get_data_statistics()[this.type],\n        bar_w = 14,\n        bar_h = 35,\n        x_disp = this.x,\n        data_not_loaded = this._data_not_loaded();\n\n    // Must have max and min. Otherwise, assume that no data is loaded.\n    if (data_not_loaded) {\n        scale = [{ type: 'min', 'color': null, 'size': null },\n                 { type: 'max', 'color': null, 'size': null }];\n        stats = { 'min': 0, 'max': 1 };\n    }\n\n    var sc = d3.scale.linear()\n            .domain([0, this.w])\n            .range([stats.min, stats.max]),\n        sc_size = d3.scale.linear()\n            .domain([0, this.w])\n            .range([0, stats.max - stats.min]);\n\n    // ---------------------------------------------------------------------\n    // convenience functions\n    var bring_to_front = function(d, i) {\n        // bring an input set to the front\n        this.input_group.selectAll('.input-set').each(function(d2) {\n            d3.select(this).classed('selected-set', d === d2);\n        });\n    }.bind(this);\n\n    var get_this_val = function(d) {\n        return (d.type == 'value') ? d.value : stats[d.type];\n    };\n\n    var set_scale = function(scale) {\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this);\n\n    // ---------------------------------------------------------------------\n    // make the gradient\n    var sorted_domain = scale.map(function(d) {\n        return { frac: (get_this_val(d) - stats.min) / (stats.max - stats.min),\n                 color: d.color };\n    }).filter(function(d) {\n        return (d.frac >= 0 && d.frac <= 1.0);\n    }).sort(function(a, b) {\n        return a.frac - b.frac;\n    });\n    var stops = this.gradient.selectAll('stop')\n            .data(sorted_domain);\n    stops.enter()\n        .append('stop');\n    stops.attr('offset', function(d) {\n        return d.frac * 100 + '%';\n    }).style('stop-color', function (d) {\n        return d.color === null ? '#F1ECFA' : d.color;\n    });\n    stops.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // no data sign\n\n    this.data_not_loaded.style('visibility', (data_not_loaded ? null : 'hidden'));\n\n    // ---------------------------------------------------------------------\n    // make the pickers\n    var pickers = this.pickers_group\n            .selectAll('.picker')\n            .data(scale);\n    // drag\n    var drag = d3.behavior.drag();\n    drag.on('drag', function(d, i) {\n        // on drag, make it a value type\n        if (['value', 'min', 'max'].indexOf(scale[i].type) === -1) {\n            // get the current value and set it\n            scale[i].value = get_this_val(d);\n            scale[i].type = 'value';\n        }\n        // change the model on drag\n        var new_d = scale[i].value + sc_size(d3.event.dx),\n            buf = sc_size(bar_w + 2);\n        if (new_d > stats.max - buf) new_d = stats.max - buf;\n        if (new_d < stats.min + buf) new_d = stats.min + buf;\n        // round to 2 decimals\n        new_d = Math.floor(new_d * 100.0) / 100.0;\n        scale[i].value = new_d;\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // enter\n    pickers.enter()\n        .append('g')\n        .attr('class', 'picker')\n        .style('cursor', 'pointer')\n        .append('rect');\n    // update\n    pickers.select('rect')\n        .attr('x', function(d, i) {\n            var val = get_this_val(d),\n                buf = bar_w + 2;\n            if (d.type == 'value' && val <= stats.min)\n                return sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            if (d.type == 'value' && val >= stats.max)\n                return sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            return sc.invert(val) - (bar_w / 2) + x_disp;\n        })\n        .attr('width', bar_w + 'px')\n        .attr('height', bar_h + 'px')\n        .call(drag)\n        .on('mousedown', bring_to_front);\n    // exit\n    pickers.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the delete buttons\n    var trashes = this.trash_group.selectAll('span')\n            .data(scale);\n    // enter\n    trashes.enter()\n        .append('span');\n    // update\n    trashes.attr('class', function(d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return null;\n        return 'trash glyphicon glyphicon-trash';\n    }).style('left', function(d) {\n        return sc.invert(get_this_val(d)) - (bar_w / 2) + x_disp + 'px';\n    }).on('click', function (d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return;\n        scale = scale.slice(0, i).concat(scale.slice(i + 1));\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // exit\n    trashes.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the add button\n    var add = this.add_group.selectAll('.add')\n            .data(['add']);\n    // enter\n    add.enter()\n        .append('span')\n        .attr('class', 'add glyphicon glyphicon-plus');\n    // update\n    add.on('click', function (d) {\n        if (data_not_loaded) return;\n\n        var new_d = (stats.max + stats.min) / 2,\n            buf = sc_size(bar_w + 2),\n            last_ind = 0;\n        // try to make the new point not overlap\n        for (var j = 0, l = scale.length; j < l; j++) {\n            var th = get_this_val(scale[j]);\n            if (Math.abs(th - new_d) < buf) {\n                new_d = new_d + buf;\n                if (new_d > stats.max - buf) new_d = stats.max - buf;\n                if (new_d < stats.min + buf) new_d = stats.min + buf;\n            }\n            if (new_d > th)\n                last_ind = j;\n        }\n        // add\n        scale.push({ type: 'value',\n                     value: new_d,\n                     color: scale[last_ind].color,\n                     size: scale[last_ind].size });\n        set_scale(scale);\n    }.bind(this));\n    // exit\n    add.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // input labels\n    var labels = this.input_label_group.selectAll('.row-label')\n            .data(['Value:', 'Color:', 'Size:']);\n    // enter\n    labels.enter().append('div')\n        .attr('class', 'row-label')\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px');\n    // update\n    labels\n        .style('top', function(d, i) {\n            return 56 + (i * this.input_height) + 'px';\n        }.bind(this))\n        .text(function(d) { return d; });\n    // exit\n    labels.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // inputs\n    var inputs = this.input_group.selectAll('.input-set')\n            .data(scale);\n\n    // enter\n    var i = inputs.enter()\n            .append('div')\n            .attr('class', 'input-set');\n    i.append('input')\n        .attr('class', 'domain-input')\n        .style('width', this.input_width + 'px');\n    // type picker\n    i.append('select')\n        .attr('class', 'domain-type-picker'),\n    // color input\n    i.append('input')\n        .attr('class', 'color-input')\n        .style('width', this.input_width + 'px');\n    i.append('input')\n        .attr('type', 'color')\n        .style('visibility', function() {\n            // hide the input if the HTML5 color picker is not supported\n            return (this.type == 'text') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    i.append('input')\n        .attr('class', 'size-input')\n        .style('width', this.input_width + 'px');\n\n    // update\n    inputs.style('height', this.input_height * 3 + 'px')\n        .style('width', this.input_width + 'px')\n        .style('left', function(d) {\n            var val = get_this_val(d),\n                buf = bar_w + 2,\n                l;\n            if (d.type == 'value' && val <= stats.min)\n                l = sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            else if (d.type == 'value' && val >= stats.max)\n                l = sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            else\n                l = sc.invert(val) - (bar_w / 2) + x_disp;\n            // don't go over the right edge of the bar\n            if (l + this.input_width > this.w + this.x)\n                l = l - this.input_width + (bar_w / 2);\n            return l + 'px';\n        }.bind(this))\n        .on('mousedown', bring_to_front);\n\n    var format = d3.format('.4g');\n    inputs.select('.domain-input')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            if (d.type == 'value') {\n                this.value = get_this_val(d);\n                this.disabled = false;\n            } else {\n                this.value = d.type + ' (' + format(get_this_val(d)) + ')';\n                this.disabled = true;\n            }\n        }).on('change', function(d, i) {\n            var buf = sc_size(bar_w + 2),\n                new_d = parseFloat(this.value);\n            scale[i].value = new_d;\n            set_scale(scale);\n        });\n    // update type picker\n    var select = inputs.select('.domain-type-picker'),\n        // get the function types, except min and max\n        stat_types = (['value'].concat(Object.keys(stats))\n                      .filter(function(x) {\n                          return x != 'min' && x != 'max';\n                      })),\n        opts = select.selectAll('option').data(stat_types);\n    opts.enter().append('option');\n    opts.attr('value', function(d) { return d; })\n        .text(function(d) { return d; });\n    opts.exit().remove();\n    select.style('visibility', function(d) {\n        return (d.type == 'min' || d.type == 'max') ? 'hidden' : null;\n    })\n        .style('left', (this.input_width - 20) + 'px')\n        .style('width', '20px')\n        .each(function (d, i) {\n            var sind = 0;\n            d3.select(this).selectAll('option').each(function(_, i) {\n                if (this.value == d.type)\n                    sind = i;\n            });\n            this.selectedIndex = sind;\n        }).on('change', function(d, i) {\n            // set the value to the current location\n            if (this.value == 'value')\n                scale[i].value = stats[d.type];\n            // switch to the new type\n            scale[i].type = this.value;\n            // reload\n            set_scale(scale);\n        });\n    // update color input\n    inputs.select('.color-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.color-picker')\n        .style('left', (this.input_width - this.input_height) + 'px')\n        .style('top', this.input_height + 'px')\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '#dddddd' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.size-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height * 2 + 'px')\n        .each(function (d, i) {\n            this.value = (d.size === null ? '' : d.size);\n            this.disabled = (d.size === null);\n        }).on('change', function(d, i) {\n            scale[i].size = parseFloat(this.value);\n            set_scale(scale);\n        });\n\n    // exit\n    inputs.exit().remove();\n}\n\nfunction update_no_data() {\n    var no_data = this.no_data,\n        data_not_loaded = this._data_not_loaded(),\n        label_w = 40;\n\n    var ins = this.no_data_container\n            .selectAll('.input-group')\n            .data([['color', 'Color:'], ['size', 'Size:']]);\n    // enter\n    var t = ins.enter().append('div')\n            .attr('class', 'input-group');\n    t.append('span');\n    t.append('input');\n    t.append('input')\n        .attr('type', 'color')\n        .style('visibility', function(d) {\n            // hide the input if the HTML5 color picker is not supported,\n            // or if this is a size box\n            return (this.type == 'text' || d[0] != 'color') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    // update\n    ins.select('span')\n        .text(function(d) { return d[1]; })\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this));\n    var get_o = function(kind) {\n        return this.settings.get_option(this.type + '_no_data_' + kind);\n    }.bind(this);\n    ins.select('input')\n        .style('left', function(d, i) {\n            return (label_w + (label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this))\n        .style('height', this.input_height + 'px')\n        .style('width', this.input_width + 'px')\n        .each(function(d) {\n            // initial value\n            this.value = data_not_loaded ? '' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d) {\n            var val = d3.event.target.value;\n            if (d[0] == 'size')\n                val = parseFloat(val);\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    ins.select('.color-picker')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width) * (i + 1) - this.input_height) + 'px';\n        }.bind(this))\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = data_not_loaded ? '#dddddd' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d, i) {\n            var val = d3.event.target.value;\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    // exit\n    ins.exit().remove();\n}\n\nfunction _data_not_loaded() {\n    var stats = this.get_data_statistics()[this.type];\n    return (stats.max === null || stats.min === null);\n}\n","/** SearchBar */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar SearchBar = utils.make_class();\n// instance methods\nSearchBar.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    update: update,\n    next: next,\n    previous: previous\n};\nmodule.exports = SearchBar;\n\n\n// instance methods\nfunction init(sel, search_index, map) {\n    var container = sel.attr('class', 'search-container')\n            .style('display', 'none');\n    this.input = container.append('input')\n        .attr('class', 'search-bar');\n    var group = container.append('div').attr('class', 'btn-group btn-group-sm');\n    group.append('button')\n        .attr(\"class\", \"btn btn-default\")\n        .on('click', this.previous.bind(this))\n        .append('span').attr('class', \"glyphicon glyphicon-chevron-left\");\n    group.append('button')\n        .attr(\"class\", \"btn btn-default\")\n        .on('click', this.next.bind(this))\n        .append('span').attr('class', \"glyphicon glyphicon-chevron-right\");\n    this.counter = container.append('div')\n        .attr('class', 'search-counter');\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default close-button\")\n        .on('click', function() {\n            this.toggle(false);\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    this.callback_manager = new CallbackManager();\n\n    this.selection = container;\n    this.map = map;\n    this.search_index = search_index;\n\n    this.current = 1;\n    this.results = null;\n\n    var on_input_fn = function(input) {\n        this.current = 1;\n        this.results = this.search_index.find(input.value);\n        this.update();\n    }.bind(this, this.input.node());\n    this.input.on('input', utils.debounce(on_input_fn, 200));\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n\n    if (this.is_active) {\n        this.selection.style('display', null);\n        this.counter.text(\"\");\n        this.input.node().value = \"\";\n        this.input.node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.toggle(false);\n            }.bind(this), true);\n        // enter key\n        this.clear_enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.next();\n            }.bind(this), false);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        this.map.highlight(null);\n        this.selection.style(\"display\", \"none\");\n        this.results = null;\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_enter) this.clear_enter();\n        this.clear_enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction update() {\n    if (this.results == null) {\n        this.counter.text(\"\");\n        this.map.highlight(null);\n    } else if (this.results.length == 0) {\n        this.counter.text(\"0 / 0\");\n        this.map.highlight(null);\n    } else {\n        this.counter.text(this.current + \" / \" + this.results.length);\n        var r = this.results[this.current - 1];\n        if (r.type=='reaction') {\n            this.map.zoom_to_reaction(r.reaction_id);\n            this.map.highlight_reaction(r.reaction_id);\n        } else if (r.type=='metabolite') {\n            this.map.zoom_to_node(r.node_id);\n            this.map.highlight_node(r.node_id);\n        } else if (r.type=='text_label') {\n            this.map.zoom_to_text_label(r.text_label_id);\n            this.map.highlight_text_label(r.text_label_id);\n        } else {\n            throw new Error('Bad search index data type: ' + r.type);\n        }\n    }\n}\nfunction next() {\n    if (this.results == null) return;\n    if (this.current==this.results.length)\n        this.current = 1;\n    else\n        this.current += 1;\n    this.update();\n}\nfunction previous() {\n    if (this.results == null) return;\n    if (this.current==1)\n        this.current = this.results.length;\n    else\n        this.current -= 1;\n    this.update();\n}\n","/** SearchIndex. Define an index for searching for reaction and metabolites in\n the map.\n\n The index is stored in SearchIndex.index, an object of id/record pairs.\n\n */\n\nvar utils = require('./utils');\n\n\nvar SearchIndex = utils.make_class();\nSearchIndex.prototype = {\n    init: init,\n    insert: insert,\n    remove: remove,\n    find: find\n};\nmodule.exports = SearchIndex;\n\n\n// definitions\nfunction init() {\n    this.index = {};\n}\n\n\nfunction insert(id, record, overwrite, check_record) {\n    /** Insert a record into the index.\n\n     id: A unique string id.\n\n     record: Records have the form:\n\n     { 'name': '',\n     'data': {} }\n\n     Search is performed on substrings of the name.\n\n     overwrite: (Default false) For faster performance, make overwrite true,\n     and records will be inserted without checking for an existing record.\n\n     check_record: (Default false) For faster performance, make check_record\n     false. If true, records will be checked to make sure they have name and\n     data attributes.\n\n     Returns undefined.\n\n     */\n    if (!overwrite && (id in this.index))\n        throw new Error(\"id is already in the index\");\n    if (check_record && !(('name' in record) && ('data' in record)))\n        throw new Error(\"malformed record\");\n    this.index[id] = record;\n}\n\n\nfunction remove(record_id) {\n    /** Remove the matching record.\n\n     Returns true is a record is found, or false if no match is found.\n\n     */\n    if (record_id in this.index) {\n        delete this.index[record_id];\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction find(substring) {\n    /** Find a record that matches the substring.\n\n     Returns an array of data from matching records.\n\n     */\n\n    var re = RegExp(substring, \"i\"), // ignore case\n        matches = [];\n    for (var id in this.index) {\n        var record = this.index[id];\n        if (re.exec(record.name))\n            matches.push(record.data);\n    }\n    return matches;\n\n}\n","/** Settings. A class to manage settings for a Map.\n\n Arguments\n ---------\n\n set_option: A function, fn(key), that returns the option value for the\n key.\n\n get_option: A function, fn(key, value), that sets the option for the key\n and value.\n\n conditional_options: The options to that are conditionally accepted when\n changed. Changes can be abandoned by calling abandon_changes(), or accepted\n by calling accept_changes().\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\nvar bacon = require('baconjs');\n\n\nvar Settings = utils.make_class();\n// instance methods\nSettings.prototype = {\n    init: init,\n    set_conditional: set_conditional,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes\n};\nmodule.exports = Settings;\n\n\n// instance methods\nfunction init(set_option, get_option, conditional_options) {\n    this.set_option = set_option;\n    this.get_option = get_option;\n\n    // manage accepting/abandoning changes\n    this.status_bus = new bacon.Bus();\n\n    // force an update of ui components\n    this.force_update_bus = new bacon.Bus();\n\n    // modify bacon.observable\n    bacon.Observable.prototype.convert_to_conditional_stream = _convert_to_conditional_stream;\n    bacon.Observable.prototype.force_update_with_bus = _force_update_with_bus;\n\n    // create the options\n    this.busses = {};\n    this.streams = {};\n    for (var i = 0, l = conditional_options.length; i < l; i++) {\n        var name = conditional_options[i],\n            out = _create_conditional_setting(name, get_option(name), set_option,\n                                              this.status_bus, this.force_update_bus);\n        this.busses[name] = out.bus;\n        this.streams[name] = out.stream;\n    }\n}\n\nfunction _convert_to_conditional_stream(status_stream) {\n    /** Hold on to event when hold_property is true, and only keep them\n     if accept_property is true (when hold_property becomes false).\n\n     */\n\n    // true if hold is pressed\n    var is_not_hold_event = status_stream\n            .map(function(x) { return x=='hold'; })\n            .not()\n            .toProperty(true),\n        is_not_first_clear = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && (x=='accepted' || x=='rejected'));\n            }).not(),\n        is_not_first_hold = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && x=='hold');\n            }).not(),\n        combined = bacon.combineAsArray(this, status_stream),\n        held = combined\n            .scan([], function(c, x) {\n                if (x[1]=='hold') {\n                    c.push(x[0]);\n                    return c;\n                } else if (x[1]=='accept') {\n                    return c;\n                } else if (x[1]=='reject') {\n                    return [];\n                } else if (x[1]=='rejected' || x[1]=='accepted') {\n                    return [x[0]];\n                } else {\n                    throw Error('bad status ' + x[1]);\n                }\n            })\n    // don't pass in events until the end of a hold\n            .filter(is_not_hold_event)\n    // ignore the event when clear is passed\n            .filter(is_not_first_clear)\n    // ignore the event when hold is passed\n            .filter(is_not_first_hold)\n            .flatMap(function(ar) {\n                return bacon.fromArray(ar);\n            }),\n        unheld = this.filter(is_not_hold_event);\n    return unheld.merge(held);\n}\n\nfunction _force_update_with_bus(bus) {\n    return bacon\n        .combineAsArray(this, bus.toProperty(false))\n        .map(function(t) {\n            return t[0];\n        });\n}\n\nfunction _create_conditional_setting(name, initial_value, set_option,\n                                     status_bus, force_update_bus) {\n    // set up the bus\n    var bus = new bacon.Bus();\n    // make the event stream\n    var stream = bus\n    // conditionally accept changes\n            .convert_to_conditional_stream(status_bus)\n    // force updates\n            .force_update_with_bus(force_update_bus);\n\n    // get the latest\n    stream.onValue(function(v) {\n        set_option(name, v);\n    });\n\n    // push the initial value\n    bus.push(initial_value);\n\n    return { bus: bus, stream: stream };\n}\n\nfunction set_conditional(name, value) {\n    /** Set the value of a conditional setting, one that will only be\n     accepted if this.accept_changes() is called.\n\n     Arguments\n     ---------\n\n     name: The option name\n\n     value: The new value\n\n     */\n\n    if (!(name in this.busses))\n        throw new Error('Invalid setting name');\n    this.busses[name].push(value);\n}\n\nfunction hold_changes() {\n    this.status_bus.push('hold');\n}\n\nfunction abandon_changes() {\n    this.status_bus.push('reject');\n    this.status_bus.push('rejected');\n    this.force_update_bus.push(true);\n}\n\nfunction accept_changes() {\n    this.status_bus.push('accept');\n    this.status_bus.push('accepted');\n}\n","/** SettingsMenu */\n\n'strict mode';\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar ScaleEditor = require('./ScaleEditor');\n\n\nvar SettingsMenu = utils.make_class();\n// instance methods\nSettingsMenu.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes,\n    style_gui: style_gui,\n    view_gui: view_gui\n};\nmodule.exports = SettingsMenu;\n\n\n// instance methods\nfunction init(sel, settings, map, toggle_abs_and_apply_data) {\n    this.sel = sel;\n    this.settings = settings;\n    this.draw = false;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    var background = sel.append('div')\n            .attr('class', 'settings-box-background')\n            .style('display', 'none'),\n        container = background.append('div')\n            .attr('class', 'settings-box-container')\n            .style('display', 'none');\n\n    // done button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button\")\n        .on('click', function() {\n            this.accept_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-ok\");\n    // quit button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button settings-button-close\")\n        .on('click', function() {\n            this.abandon_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    var box = container.append('div')\n            .attr('class', 'settings-box');\n\n    // Tip\n    box.append('div')\n        .text('Tip: Hover over an option to see more details about it.')\n        .classed('settings-tip', true);\n    box.append('hr');\n\n    // view and build\n    box.append('div').text('View and build options')\n        .attr('class', 'settings-section-heading-large');\n    this.view_gui(box.append('div'));\n\n    // reactions\n    box.append('hr');\n    box.append('div')\n        .text('Reactions').attr('class', 'settings-section-heading-large');\n    var rse = new ScaleEditor(box.append('div'), 'reaction', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) {\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n    box.append('div')\n        .text('Reaction or Gene data').attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'reaction', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('reaction', on_off);\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n\n    // metabolite data\n    box.append('hr');\n    box.append('div').text('Metabolites')\n        .attr('class', 'settings-section-heading-large');\n    var mse = new ScaleEditor(box.append('div'), 'metabolite', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) {\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n    box.append('div').text('Metabolite data')\n        .attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'metabolite', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('metabolite', on_off);\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n\n    this.callback_manager = new CallbackManager();\n\n    this.map = map;\n    this.selection = container;\n    this.background = background;\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) on_off = !this.is_visible();\n\n    if (on_off) {\n        // hold changes until accepting/abandoning\n        this.hold_changes();\n        // show the menu\n        this.selection.style(\"display\", \"inline-block\");\n        this.background.style(\"display\", \"block\");\n        this.selection.select('input').node().focus();\n        // escape key\n        this.clear_escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.abandon_changes();\n            }.bind(this), true);\n        // enter key\n        this.clear_enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.accept_changes();\n            }.bind(this), true);\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        // draw on finish\n        if (this.draw) this.map.draw_everything();\n        // hide the menu\n        this.selection.style(\"display\", \"none\");\n        this.background.style(\"display\", \"none\");\n        if (this.clear_escape) this.clear_escape();\n        this.clear_escape = null;\n        if (this.clear_enter) this.clear_enter();\n        this.clear_enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction hold_changes() {\n    this.settings.hold_changes();\n}\nfunction abandon_changes() {\n    this.draw = false;\n    this.settings.abandon_changes();\n    this.toggle(false);\n}\nfunction accept_changes() {\n    this.sel.selectAll('input').each(function (s) {\n        this.blur();\n    });\n    this.draw = true;\n    this.settings.accept_changes();\n    this.toggle(false);\n}\n\nfunction style_gui(sel, type, abs_callback) {\n    /** A UI to edit style.\n\n     */\n\n    var t = sel.append('table').attr('class', 'settings-table'),\n        settings = this.settings;\n\n    // styles\n    t.append('tr').call(function(r) {\n        r.append('td').text('Options:')\n            .attr('class', 'options-label')\n            .attr('title', ('Options for ' + type + ' data.'));\n        var cell = r.append('td');\n\n        var styles = [['Absolute value', 'abs',\n                       ('If checked, use the absolute value when ' +\n                        'calculating colors and sizes of ' + type + 's on the map')],\n                      ['Size', 'size',\n                       ('If checked, then size the ' +\n                        (type == 'metabolite' ? 'radius of metabolite circles ' : 'thickness of reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Color', 'color',\n                       ('If checked, then color the ' +\n                        (type == 'metabolite' ? 'metabolite circles ' : 'reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Text (Show data in label)', 'text',\n                       ('If checked, then show data values in the ' + type + ' ' +\n                        'labels')]],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var streams = [],\n            get_styles = function() {\n                var styles = [];\n                cell.selectAll('input')\n                    .each(function(d) { if (this.checked) styles.push(d[1]); });\n                return styles;\n            };\n        s.append('input').attr('type', 'checkbox')\n            .on('change', function(d) {\n                settings.set_conditional(type + '_styles', get_styles());\n                if (d[1] == 'abs')\n                    abs_callback(this.checked);\n            }).each(function(d) {\n                // subscribe to changes in the model\n                settings.streams[type + '_styles'].onValue(function(ar) {\n                    // check the box if the style is present\n                    this.checked = (ar.indexOf(d[1]) != -1);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; })\n            .attr('title', function(d) { return d[2]; });\n    });\n\n    // compare_style\n    t.append('tr').call(function(r) {\n        r.append('td')\n            .text('Comparison:')\n            .attr('class', 'options-label')\n            .attr('title', ('The function that will be used to compare ' +\n                            'datasets, when paired data is loaded'));\n        var cell = r.append('td')\n                .attr('title', ('The function that will be used to compare ' +\n                                'datasets, when paired data is loaded'));;\n\n        var styles = [['Fold Change', 'fold'],\n                      ['Log2(Fold Change)', 'log2_fold'],\n                      ['Difference', 'diff']],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the radio\n        s.append('input').attr('type', 'radio')\n            .attr('name', type + '_compare_style' + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(type + '_compare_style', this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[type + '_compare_style'].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    // gene-specific settings\n    if (type=='reaction') {\n        var t = sel.append('table').attr('class', 'settings-table')\n                .attr('title', ('The function that will be used to evaluate ' +\n                                'AND connections in gene reaction rules (AND ' +\n                                'connections generally connect components of ' +\n                                'an enzyme complex)'));\n\n        // and_method_in_gene_reaction_rule\n        t.append('tr').call(function(r) {\n            r.append('td')\n                .text('Method for evaluating AND:')\n                .attr('class', 'options-label-wide');\n            var cell = r.append('td');\n\n            var styles = [['Mean', 'mean'], ['Min', 'min']],\n                style_cells = cell.selectAll('.option-group')\n                    .data(styles),\n                s = style_cells.enter()\n                    .append('label')\n                    .attr('class', 'option-group');\n\n            // make the radio\n            var name = 'and_method_in_gene_reaction_rule';\n            s.append('input').attr('type', 'radio')\n                .attr('name', name + this.unique_string)\n                .attr('value', function(d) { return d[1]; })\n                .on('change', function() {\n                    if (this.checked)\n                        settings.set_conditional(name, this.value);\n                })\n                .each(function() {\n                    // subscribe to changes in the model\n                    settings.streams[name].onValue(function(value) {\n                        // check the box for the new value\n                        this.checked = (this.value == value);\n                    }.bind(this));\n                });\n            s.append('span')\n                .text(function(d) { return d[0]; });\n        }.bind(this));\n\n    }\n}\n\nfunction view_gui(s, option_name, string, options) {\n\n    // columns\n    var settings = this.settings;\n\n    var t = s.append('table').attr('class', 'settings-table');\n    t.append('tr').call(function(r) {\n        // identifiers\n        r.attr('title', ('The identifiers that are show in the reaction, ' +\n                         'gene, and metabolite labels on the map.'));\n        r.append('td').text('Identifiers:')\n            .attr('class', 'options-label');\n        var cell = r.append('td');\n\n        var options = [['ID\\'s', 'bigg_id'], ['Descriptive names', 'name']],\n            style_cells = cell.selectAll('.option-group')\n                .data(options),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var name = 'identifiers_on_map';\n        s.append('input').attr('type', 'radio')\n            .attr('name', name + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(name, this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[name].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span').text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    var boolean_options = [\n        ['scroll_behavior', 'Scroll to zoom (instead of scroll to pan)',\n         ('If checked, then the scroll wheel and trackpad will control zoom ' +\n          'rather than pan.'), {'zoom': true, 'pan': false}],\n        ['use_3d_transform', 'Responsive pan and zoom (best for latest Chrome, Firefox, and IE)',\n         ('Depending on your browser, this option may help or hurt ' +\n          'performance when panning and zooming.')],\n        ['hide_secondary_metabolites', 'Hide secondary metabolites',\n         ('If checked, then only the primary metabolites ' +\n          'will be displayed.')],\n        ['show_gene_reaction_rules', 'Show gene reaction rules',\n         ('If checked, then gene reaction rules will be displayed ' +\n          'below each reaction label. (Gene reaction rules are always ' +\n          'shown when gene data is loaded.)')],\n        ['hide_all_labels', 'Hide reaction, gene, and metabolite labels',\n         ('If checked, hide all reaction, gene, and metabolite labels')],\n        ['allow_building_duplicate_reactions', 'Allow duplicate reactions',\n         ('If checked, then allow duplicate reactions during model building.')],\n        ['highlight_missing', 'Highlight reactions not in model',\n         ('If checked, then highlight in red all the ' +\n          'reactions on the map that are not present in ' +\n          'the loaded model.')],\n    ];\n\n    var opts = s.append('div').attr('class', 'settings-container')\n            .selectAll('.option-group')\n            .data(boolean_options);\n    // enter\n    var e = opts.enter()\n            .append('label')\n            .attr('class', 'option-group full-line');\n    e.append('input').attr('type', 'checkbox');\n    e.append('span');\n    // update\n    opts.attr('title', function(d) { return d[2]; });\n    opts.select('input')\n        .on('change', function(d) {\n            if (d.length >= 4) { // not a boolean setting\n                for (var key in d[3]) {\n                    if (d[3][key] == this.checked) {\n                        settings.set_conditional(d[0], key);\n                        break;\n                    }\n                }\n            } else { // boolean setting\n                settings.set_conditional(d[0], this.checked);\n            }\n        })\n        .each(function(d) {\n            settings.streams[d[0]].onValue(function(value) {\n                if (d.length >= 4) { // not a boolean setting\n                    this.checked = d[3][value];\n                } else { // boolean setting\n                    this.checked = value;\n                }\n            }.bind(this));\n        });\n    opts.select('span')\n        .text(function(d) { return d[1]; });\n    // exit\n    opts.exit().remove();\n\n    // message about text performance\n    s.append('div')\n        .style('margin-top', '16px')\n        .classed('settings-tip', true)\n        .text('Tip: To increase map performance, turn off text boxes (i.e. labels and gene reaction rules).');\n}\n","/** TextEditInput */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar build = require('./build');\n\n\nvar TextEditInput = utils.make_class();\n// instance methods\nTextEditInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    show: show,\n    hide: hide,\n    _accept_changes: _accept_changes,\n    _add_and_edit: _add_and_edit\n};\nmodule.exports = TextEditInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container) {\n    var div = selection.append('div')\n            .attr('id', 'text-edit-input');\n    this.placed_div = PlacedDiv(div, map);\n    this.placed_div.hide();\n    this.input = div.append('input');\n\n    this.map = map;\n    this.setup_map_callbacks(map);\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('edit_text_label.text_edit_input', function(target, coords) {\n        this.show(target, coords);\n    }.bind(this));\n\n    // new text_label\n    map.callback_manager.set('new_text_label.text_edit_input', function(coords) {\n        if (this.active_target !== null)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n        this._add_and_edit(coords);\n    }.bind(this));\n\n    map.callback_manager.set('hide_text_label_editor.text_edit_input', function() {\n        this.hide();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n    zoom_container.callback_manager.set('go_to.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction show(target, coords) {\n    // save any existing edit\n    if (this.active_target) {\n        this._accept_changes(this.active_target.target);\n    }\n\n    // set the current target\n    this.active_target = { target: target,\n                           coords: coords };\n\n    // set the new value\n    target.each(function(d) {\n        this.input.node().value = d.text;\n    }.bind(this));\n\n    // place the input\n    this.placed_div.place(coords);\n    this.input.node().focus();\n\n    // escape key\n    this.clear_escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this), true);\n    // enter key\n    this.clear_enter = this.map.key_manager\n        .add_enter_listener(function(target) {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this, target), true);\n}\n\nfunction hide() {\n    // hide the input\n    this.placed_div.hide();\n\n    // clear the value\n    this.input.attr('value', '');\n    this.active_target = null;\n\n    // clear escape\n    if (this.clear_escape) this.clear_escape();\n    this.clear_escape = null;\n    // clear enter\n    if (this.clear_enter) this.clear_enter();\n    this.clear_enter = null;\n    // turn off click listener\n    // this.map.sel.on('click.', null);\n}\n\nfunction _accept_changes(target) {\n    if (this.input.node().value == '') {\n        // delete the label\n        target.each(function(d) {\n            var selected = {};\n            selected[d.text_label_id] = this.map.text_labels[d.text_label_id];\n            this.map.delete_selectable({}, selected, true);\n        }.bind(this));\n    } else {\n        // set the text\n        var text_label_ids = [];\n        target.each(function(d) {\n            this.map.edit_text_label(d.text_label_id, this.input.node().value, true);\n            text_label_ids.push(d.text_label_id);\n        }.bind(this));\n    }\n}\n\nfunction _add_and_edit(coords) {\n    // make an empty label\n    var text_label_id = this.map.new_text_label(coords, '');\n    // apply the cursor to the new label\n    var sel = this.map.sel.select('#text-labels').selectAll('.text-label')\n            .filter(function(d) { return d.text_label_id == text_label_id; });\n    sel.select('text').classed('edit-text-cursor', true);\n    this.show(sel, coords);\n}\n","/** UndoStack. A constructor that can be used to store undo info. */\n\nvar utils = require('./utils');\n\n\nvar UndoStack = utils.make_class();\nUndoStack.prototype = {\n    init: init,\n    push: push,\n    undo: undo,\n    redo: redo\n};\nmodule.exports = UndoStack;\n\n\n// definitions\nfunction init() {\n    var stack_size = 40;\n    this.stack = Array(stack_size);\n    this.current = -1;\n    this.oldest = -1;\n    this.newest = -1;\n    this.end_of_stack = true;\n    this.top_of_stack = true;\n}\n\n\nfunction _incr(a, l) {\n    return a + 1 > l - 1 ? 0 : a + 1;\n}\n\n\nfunction _decr(a, l) {\n    return a - 1 < 0 ? l - 1 : a -  1;\n}\n\n\nfunction push(undo_fn, redo_fn) {\n    this.current = _incr(this.current, this.stack.length);\n    // change the oldest\n    if (this.end_of_stack)\n        this.oldest = this.current;\n    else if (this.oldest == this.current)\n        this.oldest = _incr(this.oldest, this.stack.length);\n    this.stack[this.current] = { undo: undo_fn, redo: redo_fn };\n    this.newest = this.current;\n\n    // top of the stack\n    this.top_of_stack = true;\n    this.end_of_stack = false;\n}\n\n\nfunction undo() {\n    // check that we haven't reached the end\n    if (this.end_of_stack) return console.warn('End of stack.');\n    // run the lastest stack function\n    this.stack[this.current].undo();\n    if (this.current == this.oldest) {\n        // if the next index is less than the oldest, then the stack is dead\n        this.end_of_stack = true;\n    } else {\n        // reference the next fn\n        this.current = _decr(this.current, this.stack.length);\n    }\n\n    // not at the top of the stack\n    this.top_of_stack = false;\n}\n\n\nfunction redo() {\n    // check that we haven't reached the end\n    if (this.top_of_stack) return console.warn('Top of stack.');\n\n    if (!this.end_of_stack)\n        this.current = _incr(this.current, this.stack.length);\n    this.stack[this.current].redo();\n\n    // if at top of stack\n    if (this.current == this.newest)\n        this.top_of_stack = true;\n\n    // not at the end of the stack\n    this.end_of_stack = false;\n}\n","/** ZoomContainer\n *\n *\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\nvar _ = require('underscore');\n\n\nvar ZoomContainer = utils.make_class();\nZoomContainer.prototype = {\n    init: init,\n    set_scroll_behavior: set_scroll_behavior,\n    set_use_3d_transform: set_use_3d_transform,\n    _update_scroll: _update_scroll,\n    toggle_pan_drag: toggle_pan_drag,\n    go_to: go_to,\n    _go_to_3d: _go_to_3d,\n    _clear_3d: _clear_3d,\n    _go_to_svg: _go_to_svg,\n    zoom_by: zoom_by,\n    zoom_in: zoom_in,\n    zoom_out: zoom_out,\n    get_size: get_size,\n    translate_off_screen: translate_off_screen\n};\nmodule.exports = ZoomContainer;\n\n\n// definitions\nfunction init(selection, scroll_behavior, use_3d_transform, fill_screen) {\n    /** Make a container that will manage panning and zooming. Creates a new\n     SVG element, with a parent div for CSS3 3D transforms.\n\n     Arguments\n     ---------\n\n     selection: A d3 selection of a HTML node to put the zoom container\n     in. Should have a defined width and height.\n\n     scroll_behavior: Either 'zoom' or 'pan'.\n\n     use_3d_transform: If true, then use CSS3 3D transform to speed up pan\n     and zoom.\n\n     fill_screen: If true, then apply styles to body and selection that fill\n     the screen. The styled classes are \"fill-screen-body\" and\n     \"fill-screen-div\".\n\n     */\n\n    // set the selection class\n    selection.classed('escher-container', true);\n\n    // fill screen classes\n    if (fill_screen) {\n        d3.select(\"body\").classed('fill-screen-body', true);\n        selection.classed('fill-screen-div', true);\n    }\n\n    // make the svg\n    var zoom_container = selection.append('div')\n            .attr('class', 'escher-zoom-container');\n\n    var css3_transform_container = zoom_container.append('div')\n            .attr('class', 'escher-3d-transform-container');\n\n    var svg = css3_transform_container.append('svg')\n            .attr(\"class\", \"escher-svg\")\n            .attr('xmlns', \"http://www.w3.org/2000/svg\");\n\n    // set up the zoom container\n    svg.select(\".zoom-g\").remove();\n    var zoomed_sel = svg.append(\"g\")\n            .attr(\"class\", \"zoom-g\");\n\n    // attributes\n    this.selection = selection;\n    this.zoom_container = zoom_container;\n    this.css3_transform_container = css3_transform_container;\n    this.svg = svg;\n    this.zoomed_sel = zoomed_sel;\n    this.window_translate = {x: 0, y: 0};\n    this.window_scale = 1.0;\n\n    this._scroll_behavior = scroll_behavior;\n    this._use_3d_transform = use_3d_transform;\n    this._pan_drag_on = true;\n    this._zoom_behavior = null;\n    this._zoom_timeout = null;\n    this._svg_scale = this.window_scale;\n    this._svg_translate = this.window_translate;\n    // this._last_svg_ms = null;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // update the scroll behavior\n    this._update_scroll();\n}\n\nfunction set_scroll_behavior(scroll_behavior) {\n    /** Set up pan or zoom on scroll.\n     *\n     * Arguments\n     * ---------\n     *\n     * scroll_behavior: 'none', 'pan' or 'zoom'.\n     *\n     */\n\n    this._scroll_behavior = scroll_behavior;\n    this._update_scroll();\n}\n\nfunction set_use_3d_transform(use_3d_transform) {\n    /** Set the option use_3d_transform */\n    this._use_3d_transform = use_3d_transform;\n}\n\nfunction toggle_pan_drag(on_off) {\n    /** Toggle the zoom drag and the cursor UI for it. */\n\n    if (_.isUndefined(on_off)) {\n        this._pan_drag_on = !this._pan_drag_on;\n    } else {\n        this._pan_drag_on = on_off;\n    }\n\n    if (this._pan_drag_on) {\n        // turn on the hand\n        this.zoomed_sel\n            .classed('cursor-grab', true).classed('cursor-grabbing', false);\n        this.zoomed_sel\n            .on('mousedown.cursor', function(sel) {\n                sel.classed('cursor-grab', false).classed('cursor-grabbing', true);\n            }.bind(null, this.zoomed_sel))\n            .on('mouseup.cursor', function(sel) {\n                sel.classed('cursor-grab', true).classed('cursor-grabbing', false);\n            }.bind(null, this.zoomed_sel));\n    } else {\n        // turn off the hand\n        this.zoomed_sel.style('cursor', null)\n            .classed('cursor-grab', false)\n            .classed('cursor-grabbing', false);\n        this.zoomed_sel.on('mousedown.cursor', null);\n        this.zoomed_sel.on('mouseup.cursor', null);\n    }\n\n    // update the behaviors\n    this._update_scroll();\n}\n\nfunction _update_scroll() {\n    /** Update the pan and zoom behaviors. The behaviors are applied to the\n     * css3_transform_container node.\n     *\n     */\n\n    if (!_.contains(['zoom', 'pan', 'none'], this._scroll_behavior)) {\n        throw Error('Bad value for scroll_behavior: ' + this._scroll_behavior);\n    }\n\n    // clear all behaviors\n    this.zoom_container.on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n        .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n        .on(\"wheel.zoom\", null) // disables newer versions of Firefox\n        .on('dblclick.zoom', null)\n        .on('mousewheel.escher', null) // pan scroll behaviors\n        .on('DOMMouseScroll.escher', null)\n        .on('wheel.escher', null)\n        .on(\"mousedown.zoom\", null) // drag behaviors\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    // This handles dragging to pan, and touch events (in any scroll mode). It\n    // also handles scrolling to zoom (only 'zoom' mode). It also raises an\n    // exception in node, so catch that during testing. This may be a bug with\n    // d3 related to d3 using the global this.document. TODO look into this.\n    try {\n        this._zoom_behavior = d3.behavior.zoom()\n            .on(\"zoom\", function() {\n                this.go_to(d3.event.scale, {x: d3.event.translate[0], y: d3.event.translate[1]});\n            }.bind(this));\n    } catch (err) {\n        console.log('Not in a browser, so d3.behavior.zoom does not work.');\n        this._zoom_behavior = null;\n        return;\n    }\n\n    // set current location\n    this._zoom_behavior.scale(this.window_scale);\n    this._zoom_behavior.translate([this.window_translate.x,\n                                   this.window_translate.y]);\n\n    // set it up\n    this.zoom_container.call(this._zoom_behavior);\n\n    // always turn off double-clicking to zoom\n    this.zoom_container.on('dblclick.zoom', null);\n\n    // if panning is off, then turn off these listeners\n    if (!this._pan_drag_on) {\n        this.zoom_container.on(\"mousedown.zoom\", null)\n            .on(\"touchstart.zoom\", null)\n            .on(\"touchmove.zoom\", null)\n            .on(\"touchend.zoom\", null);\n    }\n\n    // if scroll to zoom is off, then turn off these listeners\n    if (this._scroll_behavior !== 'zoom') {\n        this.zoom_container\n            .on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n            .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n            .on(\"wheel.zoom\", null); // disables newer versions of Firefox\n    }\n\n    // add listeners for scrolling to pan\n    if (this._scroll_behavior === 'pan') {\n        // Add the wheel listener\n        var wheel_fn = function() {\n            var ev = d3.event,\n                sensitivity = 0.5;\n            // stop scroll in parent elements\n            ev.stopPropagation();\n            ev.preventDefault();\n            ev.returnValue = false;\n            // change the location\n            var get_directional_disp = function(wheel_delta, delta) {\n                var the_delt = _.isUndefined(wheel_delta) ? delta : -wheel_delta / 1.5;\n                return the_delt * sensitivity;\n            };\n            var new_translate = {\n                x: this.window_translate.x - get_directional_disp(ev.wheelDeltaX, ev.deltaX),\n                y: this.window_translate.y - get_directional_disp(ev.wheelDeltaY, ev.deltaY)\n            };\n            this.go_to(this.window_scale, new_translate);\n        }.bind(this);\n\n        // apply it\n        this.zoom_container.on('mousewheel.escher', wheel_fn);\n        this.zoom_container.on('DOMMouseScroll.escher', wheel_fn);\n        this.zoom_container.on('wheel.escher', wheel_fn);\n    }\n}\n\n// functions to scale and translate\nfunction go_to(scale, translate) {\n    /** Zoom the container to a specified location.\n\n     Arguments\n     ---------\n\n     scale: The scale, between 0 and 1.\n\n     translate: The location, of the form {x: 2.0, y: 3.0}.\n\n     */\n\n    utils.check_undefined(arguments, ['scale', 'translate']);\n\n    var use_3d_transform = this._use_3d_transform;\n\n    // check inputs\n    if (!scale) throw new Error('Bad scale value');\n    if (!translate || !('x' in translate) || !('y' in translate) ||\n        isNaN(translate.x) || isNaN(translate.y))\n        return console.error('Bad translate value');\n\n    // save inputs\n    this.window_scale = scale;\n    this.window_translate = translate;\n\n    // save to zoom behavior\n    if (!_.isNull(this._zoom_behavior)) {\n        this._zoom_behavior.scale(scale);\n        var translate_array = [translate.x, translate.y];\n        this._zoom_behavior.translate(translate_array);\n    }\n\n    if (use_3d_transform) { // 3d tranform\n        // cancel all timeouts\n        if (!_.isNull(this._zoom_timeout))\n            clearTimeout(this._zoom_timeout);\n\n        // set the 3d transform\n        this._go_to_3d(scale, translate,\n                       this._svg_scale, this._svg_translate);\n\n        // if another go_to does not happen within the delay time, then\n        // redraw the svg\n        this._zoom_timeout = _.delay(function() {\n            // redraw the svg\n            this._go_to_svg(scale, translate);\n        }.bind(this), 100); // between 100 and 600 seems to be usable\n\n    } else { // no 3d transform\n        this._go_to_svg(scale, translate);\n    }\n\n    this.callback_manager.run('go_to');\n}\n\nfunction _go_to_3d(scale, translate, svg_scale, svg_translate) {\n    /** Zoom & pan the CSS 3D transform container */\n    var n_scale = scale / svg_scale,\n        n_translate = utils.c_minus_c(\n            translate,\n            utils.c_times_scalar(svg_translate, n_scale)\n        ),\n        tranform = ('translate(' + n_translate.x + 'px,' + n_translate.y + 'px) ' +\n                    'scale(' + n_scale + ')');\n    this.css3_transform_container.style('transform', tranform);\n    this.css3_transform_container.style('-webkit-transform', tranform);\n    this.css3_transform_container.style('transform-origin', '0 0');\n    this.css3_transform_container.style('-webkit-transform-origin', '0 0');\n}\n\nfunction _clear_3d() {\n    this.css3_transform_container.style('transform', null);\n    this.css3_transform_container.style('-webkit-transform', null);\n    this.css3_transform_container.style('transform-origin', null);\n    this.css3_transform_container.style('-webkit-transform-origin', null);\n}\n\nfunction _go_to_svg(scale, translate, callback) {\n    /** Zoom & pan the svg element.\n\n     Also runs the svg_start and svg_finish callbacks.\n\n     Arguments\n     ---------\n\n     scale: The scale, between 0 and 1.\n\n     translate: The location, of the form {x: 2.0, y: 3.0}.\n\n     callback: (optional) A callback to run after scaling.\n\n     */\n\n    this.callback_manager.run('svg_start');\n\n    // defer to update callbacks\n    _.defer(function() {\n\n        // start time\n        // var start = new Date().getTime();\n\n        // reset the 3d transform\n        this._clear_3d();\n\n        // redraw the svg\n        this.zoomed_sel\n            .attr('transform',\n                  'translate(' + translate.x + ',' + translate.y + ') ' +\n                  'scale(' + scale + ')');\n        // save svg location\n        this._svg_scale = this.window_scale;\n        this._svg_translate = this.window_translate;\n\n        _.defer(function() {\n            // defer for callback after draw\n            this.callback_manager.run('svg_finish');\n\n            if (!_.isUndefined(callback)) callback();\n\n            // wait a few ms to get a reliable end time\n            // _.delay(function() {\n            //     // end time\n            //     var t = new Date().getTime() - start;\n            //     this._last_svg_ms = t;\n            // }.bind(this), 20);\n        }.bind(this));\n    }.bind(this));\n}\n\nfunction zoom_by(amount) {\n    /** Zoom by a specified multiplier.\n     *\n     * Arguments\n     * ---------\n     *\n     * amount: A multiplier for the zoom. Greater than 1 zooms in and less\n     * than 1 zooms out.\n     *\n     */\n    var size = this.get_size(),\n        shift = { x: size.width/2 - ((size.width/2 - this.window_translate.x) * amount +\n                                     this.window_translate.x),\n                  y: size.height/2 - ((size.height/2 - this.window_translate.y) * amount +\n                                      this.window_translate.y) };\n    this.go_to(this.window_scale * amount,\n               utils.c_plus_c(this.window_translate, shift));\n}\n\nfunction zoom_in() {\n    /** Zoom in by the default amount with the default options. */\n    this.zoom_by(1.5);\n}\n\nfunction zoom_out() {\n    /** Zoom out by the default amount with the default options. */\n    this.zoom_by(0.667);\n}\n\nfunction get_size() {\n    /** Return the size of the zoom container as coordinates.\n     *\n     * e.g. {x: 2, y: 3}\n     *\n     */\n    return { width: parseInt(this.selection.style('width'), 10),\n             height: parseInt(this.selection.style('height'), 10) };\n}\n\nfunction translate_off_screen(coords) {\n    /** Shift window if new reaction will draw off the screen */\n\n    // TODO BUG not accounting for scale correctly\n\n    var margin = 120, // pixels\n        size = this.get_size(),\n        current = {'x': {'min': - this.window_translate.x / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.x / this.window_scale +\n                         (size.width-margin) / this.window_scale },\n                   'y': {'min': - this.window_translate.y / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.y / this.window_scale +\n                         (size.height-margin) / this.window_scale } };\n    if (coords.x < current.x.min) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.x > current.x.max) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n    if (coords.y < current.y.min) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.y > current.y.max) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n}\n","/** build */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    new_reaction: new_reaction,\n    rotate_nodes: rotate_nodes,\n    move_node_and_dependents: move_node_and_dependents,\n    new_text_label: new_text_label,\n    bezier_id_for_segment_id: bezier_id_for_segment_id,\n    bezier_ids_for_reaction_ids: bezier_ids_for_reaction_ids,\n    new_beziers_for_segments: new_beziers_for_segments,\n    new_beziers_for_reactions: new_beziers_for_reactions\n};\n\n\n// definitions\nfunction new_reaction(bigg_id, cobra_reaction, cobra_metabolites,\n                      selected_node_id, selected_node,\n                      largest_ids, cofactors, angle) {\n    /** New reaction.\n\n     angle: clockwise from 'right', in degrees\n\n     */\n\n    // rotate the new reaction around the selected metabolite\n    // convert to radians\n    angle = Math.PI / 180 * angle;\n\n    // generate a new integer id\n    var new_reaction_id = String(++largest_ids.reactions);\n\n    // calculate coordinates of reaction\n    var selected_node_coords = { x: selected_node.x,\n                                 y: selected_node.y };\n\n    // rotate main axis around angle with distance\n    var reaction_length = 300,\n        main_axis = [ selected_node_coords,\n                      utils.c_plus_c(selected_node_coords,\n                                     {'x': reaction_length, 'y': 0}) ],\n        center = { 'x': (main_axis[0].x + main_axis[1].x)/2,\n                   'y': (main_axis[0].y + main_axis[1].y)/2 };\n\n    // relative label location\n    var label_d;\n    if (Math.abs(angle) < Math.PI/4 ||\n        Math.abs(angle - Math.PI) < Math.PI/4 ) {\n            label_d = { x: -50, y: -40 };\n        } else {\n            label_d = { x: 30, y: 10 };\n        }\n\n    // relative anchor node distance\n    var anchor_distance = 20;\n\n    // new reaction structure\n    var new_reaction = utils.clone(cobra_reaction);\n    utils.extend(new_reaction,\n                 { label_x: center.x + label_d.x,\n                   label_y: center.y + label_d.y,\n                   segments: {} });\n\n    // set primary metabolites and count reactants/products\n\n    // look for the selected metabolite, and record the indices\n    var reactant_ranks = [], product_ranks = [],\n        reactant_count = 0, product_count = 0,\n        reaction_is_reversed = false;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        // make the metabolites into objects\n        var metabolite = cobra_metabolites[met_bigg_id],\n            coefficient = new_reaction.metabolites[met_bigg_id],\n            formula = metabolite.formula,\n            new_metabolite = { coefficient: coefficient,\n                               bigg_id: met_bigg_id,\n                               name: metabolite.name };\n        if (coefficient < 0) {\n            new_metabolite.index = reactant_count;\n            // score the metabolites. Infinity == selected, >= 1 == carbon containing\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                reactant_ranks.push([new_metabolite.index, Infinity]);\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                reactant_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            reactant_count++;\n        } else {\n            new_metabolite.index = product_count;\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                product_ranks.push([new_metabolite.index, Infinity]);\n                reaction_is_reversed = true;\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                product_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            product_count++;\n        }\n        new_reaction.metabolites[met_bigg_id] = new_metabolite;\n    }\n\n    // get the rank with the highest score\n    var max_rank = function(old, current) { return current[1] > old[1] ? current : old; },\n        primary_reactant_index = reactant_ranks.reduce(max_rank, [0,0])[0],\n        primary_product_index = product_ranks.reduce(max_rank, [0,0])[0];\n\n    // set primary metabolites, and keep track of the total counts\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id];\n        if (metabolite.coefficient < 0) {\n            if (metabolite.index==primary_reactant_index) metabolite.is_primary = true;\n            metabolite.count = reactant_count + 1;\n        } else {\n            if (metabolite.index==primary_product_index) metabolite.is_primary = true;\n            metabolite.count = product_count + 1;\n        }\n    }\n\n    // generate anchor nodes\n    var new_anchors = {},\n        anchors = [ { node_type: 'anchor_reactants',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? 1 : -1), y: 0 } },\n                    { node_type: 'center',\n                      dis: { x: 0, y: 0 } },\n                    { node_type: 'anchor_products',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? -1 : 1), y: 0 } } ],\n        anchor_ids = {};\n    anchors.map(function(n) {\n        var new_id = String(++largest_ids.nodes),\n            general_node_type = (n.node_type=='center' ? 'midmarker' : 'multimarker');\n        new_anchors[new_id] = { node_type: general_node_type,\n                                x: center.x + n.dis.x,\n                                y: center.y + n.dis.y,\n                                connected_segments: [],\n                                name: null,\n                                bigg_id: null,\n                                label_x: null,\n                                label_y: null,\n                                node_is_primary: null };\n        anchor_ids[n.node_type] = new_id;\n    });\n\n    // add the segments, outside to inside\n    var new_anchor_groups = [ [ anchor_ids['anchor_reactants'], anchor_ids['center'] ],\n                              [ anchor_ids['anchor_products'],  anchor_ids['center'] ] ];\n    new_anchor_groups.map(function(l) {\n        var from_id = l[0], to_id = l[1],\n            new_segment_id = String(++largest_ids.segments);\n        new_reaction.segments[new_segment_id] =  { b1: null,\n                                                   b2: null,\n                                                   from_node_id: from_id,\n                                                   to_node_id: to_id,\n                                                   from_node_coefficient: null,\n                                                   to_node_coefficient: null,\n                                                   reversibility: new_reaction.reversibility,\n                                                   data: new_reaction.data,\n                                                   reverse_flux: new_reaction.reverse_flux };\n        new_anchors[from_id].connected_segments.push({ segment_id: new_segment_id,\n                                                       reaction_id: new_reaction_id });\n        new_anchors[to_id].connected_segments.push({ segment_id: new_segment_id,\n                                                     reaction_id: new_reaction_id });\n    });\n\n    // Add the metabolites, keeping track of total reactants and products.\n    var new_nodes = new_anchors;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id],\n            primary_index, from_node_id;\n        if (metabolite.coefficient < 0) {\n            // metabolite.count = reactant_count + 1;\n            primary_index = primary_reactant_index;\n            from_node_id = anchor_ids['anchor_reactants'];\n        } else {\n            // metabolite.count = product_count + 1;\n            primary_index = primary_product_index;\n            from_node_id = anchor_ids['anchor_products'];\n        }\n\n        // calculate coordinates of metabolite components\n        var met_loc = calculate_new_metabolite_coordinates(metabolite,\n                                                           primary_index,\n                                                           main_axis,\n                                                           center,\n                                                           reaction_length,\n                                                           reaction_is_reversed);\n\n        // if this is the existing metabolite\n        if (selected_node.bigg_id==metabolite.bigg_id) {\n            var new_segment_id = String(++largest_ids.segments);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: selected_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // update the existing node\n            selected_node.connected_segments.push({ segment_id: new_segment_id,\n                                                    reaction_id: new_reaction_id });\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        } else {\n            // save new metabolite\n            var new_segment_id = String(++largest_ids.segments),\n                new_node_id = String(++largest_ids.nodes);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: new_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // save new node\n            new_nodes[new_node_id] = { connected_segments: [{ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id }],\n                                       x: met_loc.circle.x,\n                                       y: met_loc.circle.y,\n                                       node_is_primary: Boolean(metabolite.is_primary),\n                                       label_x: met_loc.circle.x + label_d.x,\n                                       label_y: met_loc.circle.y + label_d.y,\n                                       name: metabolite.name,\n                                       bigg_id: metabolite.bigg_id,\n                                       node_type: 'metabolite' };\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        }\n    }\n\n    // now take out the extra reaction details\n    var metabolites_array = []\n    for (var bigg_id in new_reaction.metabolites) {\n        metabolites_array.push({'bigg_id': bigg_id,\n                                'coefficient': new_reaction.metabolites[bigg_id].coefficient});\n    }\n    new_reaction.metabolites = metabolites_array;\n\n    // new_reactions object\n    var new_reactions = {};\n    new_reactions[new_reaction_id] = new_reaction;\n\n    // new_beziers object\n    var new_beziers = new_beziers_for_reactions(new_reactions);\n\n    // add the selected node for rotation, and return it as a new (updated) node\n    new_nodes[selected_node_id] = selected_node;\n    rotate_nodes(new_nodes, new_reactions, new_beziers,\n                 angle, selected_node_coords);\n\n    return { new_reactions: new_reactions,\n             new_beziers: new_beziers,\n             new_nodes: new_nodes };\n}\n\nfunction rotate_nodes(selected_nodes, reactions, beziers, angle, center) {\n    /** Rotate the nodes around center.\n\n     selected_nodes: Nodes to rotate.\n     reactions: Only updates beziers for these reactions.\n     beziers: Also update the bezier points.\n     angle: Angle to rotate in radians.\n     center: Point to rotate around.\n\n     */\n\n    // functions\n    var rotate_around = function(coord) {\n        if (coord === null)\n            return null;\n        return utils.rotate_coords(coord, angle, center);\n    };\n\n    // recalculate: node\n    var updated_node_ids = [], updated_reaction_ids = [];\n    for (var node_id in selected_nodes) {\n        var node = selected_nodes[node_id],\n            // rotation distance\n            displacement = rotate_around({ x: node.x, y: node.y }),\n            // move the node\n            updated = move_node_and_labels(node, reactions,\n                                           displacement);\n        // move the bezier points\n        node.connected_segments.map(function(segment_obj) {\n            var reaction = reactions[segment_obj.reaction_id];\n            // If the reaction was not passed in the reactions argument, then ignore\n            if (reaction === undefined) return;\n\n            // rotate the beziers\n            var segment_id = segment_obj.segment_id,\n                segment = reaction.segments[segment_id];\n            if (segment.to_node_id==node_id && segment.b2) {\n                var displacement = rotate_around(segment.b2),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b2');\n                segment.b2 = utils.c_plus_c(segment.b2, displacement);\n                beziers[bez_id].x = segment.b2.x;\n                beziers[bez_id].y = segment.b2.y;\n            } else if (segment.from_node_id==node_id && segment.b1) {\n                var displacement = rotate_around(segment.b1),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b1');\n                segment.b1 = utils.c_plus_c(segment.b1, displacement);\n                beziers[bez_id].x = segment.b1.x;\n                beziers[bez_id].y = segment.b1.y;\n            }\n        });\n\n        updated_reaction_ids = utils.unique_concat([updated_reaction_ids,\n                                                    updated.reaction_ids]);\n        updated_node_ids.push(node_id);\n    }\n\n    return { node_ids: updated_node_ids,\n             reaction_ids: updated_reaction_ids };\n}\n\nfunction move_node_and_dependents(node, node_id, reactions, beziers, displacement) {\n    /** Move the node and its labels and beziers.\n\n     */\n    var updated = move_node_and_labels(node, reactions, displacement);\n\n    // move beziers\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // If the reaction was not passed in the reactions argument, then ignore\n        if (reaction === undefined) return;\n\n        // update beziers\n        var segment_id = segment_obj.segment_id,\n            segment = reaction.segments[segment_id];\n        [['b1', 'from_node_id'], ['b2', 'to_node_id']].forEach(function(c) {\n            var bez = c[0],\n                node = c[1];\n            if (segment[node]==node_id && segment[bez]) {\n                segment[bez] = utils.c_plus_c(segment[bez], displacement);\n                var tbez = beziers[bezier_id_for_segment_id(segment_id, bez)];\n                tbez.x = segment[bez].x;\n                tbez.y = segment[bez].y;\n            }\n        });\n\n        // add to list of updated reaction ids if it isn't already there\n        if (updated.reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated.reaction_ids.push(segment_obj.reaction_id);\n        }\n    });\n    return updated;\n}\n\nfunction move_node_and_labels(node, reactions, displacement) {\n    node.x = node.x + displacement.x;\n    node.y = node.y + displacement.y;\n\n    // recalculate: node label\n    node.label_x = node.label_x + displacement.x;\n    node.label_y = node.label_y + displacement.y;\n\n    // recalculate: reaction label\n    var updated_reaction_ids = [];\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // add to list of updated reaction ids if it isn't already there\n        if (updated_reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated_reaction_ids.push(segment_obj.reaction_id);\n\n            // update reaction label (but only once per reaction\n            if (node.node_type == 'midmarker') {\n                reaction.label_x = reaction.label_x + displacement.x;\n                reaction.label_y = reaction.label_y + displacement.y;\n            }\n        }\n    });\n    return { reaction_ids: updated_reaction_ids };\n}\n\nfunction calculate_new_metabolite_coordinates(met, primary_index, main_axis, center, dis, is_reversed) {\n    /** Calculate metabolite coordinates for a new reaction metabolite.\n\n     */\n    // new local coordinate system\n    var displacement = main_axis[0],\n        main_axis = [utils.c_minus_c(main_axis[0], displacement),\n                     utils.c_minus_c(main_axis[1], displacement)],\n        center = utils.c_minus_c(center, displacement);\n\n    // Curve parameters\n    var w = 80,  // distance between reactants and between products\n        b1_strength = 0.4,\n        b2_strength = 0.25,\n        w2 = w*0.7,\n        secondary_dis = 40,\n        num_slots = Math.min(2, met.count - 1);\n\n    // size and spacing for primary and secondary metabolites\n    var ds, draw_at_index, r;\n    if (met.is_primary) { // primary\n        ds = 20;\n    } else { // secondary\n        ds = 10;\n        // don't use center slot\n        if (met.index > primary_index) draw_at_index = met.index - 1;\n        else draw_at_index = met.index;\n    }\n\n    var de = dis - ds, // distance between ends of line axis\n        reaction_axis = [{'x': ds, 'y': 0},\n                         {'x': de, 'y': 0}];\n\n    // Define line parameters and axis.\n    // Begin with unrotated coordinate system. +y = Down, +x = Right.\n    var end, circle, b1, b2;\n    // reactants\n    if (((met.coefficient < 0) != is_reversed) && met.is_primary) { // Ali == BADASS\n        end = {'x': reaction_axis[0].x,\n               'y': reaction_axis[0].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + (end.x)*(1-b2_strength),\n              'y': center.y*b2_strength + (end.y)*(1-b2_strength)},\n        circle = {'x': main_axis[0].x,\n                  'y': main_axis[0].y};\n    } else if ((met.coefficient < 0) != is_reversed) {\n        end = {'x': reaction_axis[0].x + secondary_dis,\n               'y': reaction_axis[0].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength},\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[0].x + secondary_dis,\n                  'y': main_axis[0].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    } else if (((met.coefficient > 0) != is_reversed) && met.is_primary) {        // products\n        end = {'x': reaction_axis[1].x,\n               'y': reaction_axis[1].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x,\n                  'y': main_axis[1].y};\n    } else if ((met.coefficient > 0) != is_reversed) {\n        end = {'x': reaction_axis[1].x - secondary_dis,\n               'y': reaction_axis[1].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x - secondary_dis,\n                  'y': main_axis[1].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    }\n    var loc = {};\n    loc.b1 = utils.c_plus_c(displacement, b1);\n    loc.b2 = utils.c_plus_c(displacement, b2);\n    loc.circle = utils.c_plus_c(displacement, circle);\n    return loc;\n}\n\nfunction new_text_label(largest_ids, text, coords) {\n    var new_id = String(++largest_ids.text_labels),\n        new_label = { text: text,\n                      x: coords.x,\n                      y: coords.y };\n    return {id: new_id, label: new_label};\n}\n\nfunction bezier_id_for_segment_id(segment_id, bez) {\n    return segment_id+'_'+bez;\n}\n\nfunction bezier_ids_for_reaction_ids(reactions) {\n    /** Return an array of beziers ids for the array of reaction ids.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. a subset of *escher.Map.reactions*.\n\n     */\n    var bezier_ids = [];\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n\n            ['b1', 'b2'].forEach(function(bez) {\n                var seg_bez = segment[bez];\n                if (seg_bez !== null) {\n                    bezier_ids.push(bezier_id_for_segment_id(segment_id, bez));\n                }\n            });\n        }\n    }\n    return bezier_ids;\n}\n\nfunction new_beziers_for_segments(segments, reaction_id) {\n    /** Return an object containing beziers for the segments object.\n\n     Arguments\n     ---------\n\n     segments: A segments object, e.g. *escher.Map.segments*.\n\n     reaction_id: The reaction id for the segments.\n\n     */\n    var beziers = {};\n    for (var segment_id in segments) {\n        var segment = segments[segment_id];\n\n        ['b1', 'b2'].forEach(function(bez) {\n            var seg_bez = segment[bez];\n            if (seg_bez !== null) {\n                var bezier_id = bezier_id_for_segment_id(segment_id, bez);\n                beziers[bezier_id] = {\n                    bezier: bez,\n                    x: seg_bez.x,\n                    y: seg_bez.y,\n                    reaction_id: reaction_id,\n                    segment_id: segment_id\n                };\n            }\n        });\n    }\n    return beziers;\n}\n\nfunction new_beziers_for_reactions(reactions) {\n    /** Return an object containing beziers for the reactions object.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. *escher.Map.reactions*.\n\n     */\n    var beziers = {};\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        var these = new_beziers_for_segments(reaction.segments, reaction_id);\n        utils.extend(beziers, these);\n    }\n    return beziers;\n}\n","/**\n * @license\n *\n * complete.ly 1.0.0\n * MIT Licensing\n * Copyright (c) 2013 Lorenzo Puccetti\n *\n * This Software shall be used for doing good things, not bad things.\n *\n * Modified by Zachary King (c) 2014.\n *\n **/\n\nvar utils = require('./utils');\n\nmodule.exports = function(container, config) {\n    document = utils.get_document(container);\n    window = utils.get_window(container);\n\n    config = config || {};\n    config.fontSize =                       config.fontSize   || '13px';\n    config.fontFamily =                     config.fontFamily || 'sans-serif';\n    config.promptInnerHTML =                config.promptInnerHTML || '';\n    config.color =                          config.color || '#333';\n    config.hintColor =                      config.hintColor || '#aaa';\n    config.backgroundColor =                config.backgroundColor || '#fff';\n    config.dropDownBorderColor =            config.dropDownBorderColor || '#aaa';\n    config.dropDownZIndex =                 config.dropDownZIndex || '100'; // to ensure we are in front of everybody\n    config.dropDownOnHoverBackgroundColor = config.dropDownOnHoverBackgroundColor || '#ddd';\n\n    var txtInput = document.createElement('input');\n    txtInput.type ='text';\n    txtInput.spellcheck = false;\n    txtInput.style.fontSize =        config.fontSize;\n    txtInput.style.fontFamily =      config.fontFamily;\n    txtInput.style.color =           config.color;\n    txtInput.style.backgroundColor = config.backgroundColor;\n    txtInput.style.width = '100%';\n    txtInput.style.outline = '0';\n    txtInput.style.border =  '0';\n    txtInput.style.margin =  '0';\n    txtInput.style.padding = '0';\n\n    var txtHint = txtInput.cloneNode();\n    txtHint.disabled='';\n    txtHint.style.position = 'absolute';\n    txtHint.style.top =  '0';\n    txtHint.style.left = '0';\n    txtHint.style.borderColor = 'transparent';\n    txtHint.style.boxShadow =   'none';\n    txtHint.style.color = config.hintColor;\n\n    txtInput.style.backgroundColor ='transparent';\n    txtInput.style.verticalAlign = 'top';\n    txtInput.style.position = 'relative';\n\n    var wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.outline = '0';\n    wrapper.style.border =  '0';\n    wrapper.style.margin =  '0';\n    wrapper.style.padding = '0';\n\n    var prompt = document.createElement('div');\n    prompt.style.position = 'absolute';\n    prompt.style.outline = '0';\n    prompt.style.margin =  '0';\n    prompt.style.padding = '0';\n    prompt.style.border =  '0';\n    prompt.style.fontSize =   config.fontSize;\n    prompt.style.fontFamily = config.fontFamily;\n    prompt.style.color =           config.color;\n    prompt.style.backgroundColor = config.backgroundColor;\n    prompt.style.top = '0';\n    prompt.style.left = '0';\n    prompt.style.overflow = 'hidden';\n    prompt.innerHTML = config.promptInnerHTML;\n    prompt.style.background = 'transparent';\n    if (document.body === undefined) {\n        throw 'document.body is undefined. The library was wired up incorrectly.';\n    }\n    document.body.appendChild(prompt);\n    var w = prompt.getBoundingClientRect().right; // works out the width of the prompt.\n    wrapper.appendChild(prompt);\n    prompt.style.visibility = 'visible';\n    prompt.style.left = '-'+w+'px';\n    wrapper.style.marginLeft= w+'px';\n\n    wrapper.appendChild(txtHint);\n    wrapper.appendChild(txtInput);\n\n    var dropDown = document.createElement('div');\n    dropDown.style.position = 'absolute';\n    dropDown.style.visibility = 'hidden';\n    dropDown.style.outline = '0';\n    dropDown.style.margin =  '0';\n    dropDown.style.padding = '0';\n    dropDown.style.textAlign = 'left';\n    dropDown.style.fontSize =   config.fontSize;\n    dropDown.style.fontFamily = config.fontFamily;\n    dropDown.style.backgroundColor = config.backgroundColor;\n    dropDown.style.zIndex = config.dropDownZIndex;\n    dropDown.style.cursor = 'default';\n    dropDown.style.borderStyle = 'solid';\n    dropDown.style.borderWidth = '1px';\n    dropDown.style.borderColor = config.dropDownBorderColor;\n    dropDown.style.overflowX= 'hidden';\n    dropDown.style.whiteSpace = 'pre';\n    dropDown.style.overflowY = 'scroll';\n\n    var createDropDownController = function(elem) {\n        var rows = [];\n        var ix = 0;\n        var oldIndex = -1;\n        var current_row = null;\n\n        var onMouseOver =  function() { this.style.outline = '1px solid #ddd'; }\n        var onMouseOut =   function() { this.style.outline = '0'; }\n        var onDblClick =  function(e) {\n            e.preventDefault();\n            p.onmouseselection(this.id);\n        }\n\n        var p = {\n            hide :  function() { elem.style.visibility = 'hidden'; },\n            refresh : function(token, options) {\n                elem.style.visibility = 'hidden';\n                ix = 0;\n                elem.innerHTML ='';\n                var vph = (window.innerHeight || document.documentElement.clientHeight);\n                var rect = elem.parentNode.getBoundingClientRect();\n                var distanceToTop = rect.top - 6;                        // heuristic give 6px\n                var distanceToBottom = vph - rect.bottom -6;  // distance from the browser border.\n\n                rows = [];\n                for (var i = 0; i < options.length; i++) {\n                    // ignore case\n                    var found = options[i].matches.filter(function(match) {\n                        return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                    });\n                    if (found.length == 0)\n                        continue;\n                    var divRow = document.createElement('div');\n                    divRow.style.color = config.color;\n                    divRow.onmouseover = onMouseOver;\n                    divRow.onmouseout =  onMouseOut;\n                    // prevent selection for double click\n                    divRow.onmousedown = function(e) { e.preventDefault(); };\n                    divRow.ondblclick = onDblClick;\n                    divRow.__hint = found[0];\n                    divRow.id = options[i].id;\n                    divRow.innerHTML = options[i].html;\n                    rows.push(divRow);\n                    elem.appendChild(divRow);\n                    if (rows.length >= rs.display_limit)\n                        break;\n                }\n                if (rows.length===0) {\n                    return; // nothing to show.\n                }\n                p.highlight(0);\n\n                // Heuristic (only when the distance to the to top is 4\n                // times more than distance to the bottom\n                if (distanceToTop > distanceToBottom*3) {\n                    // we display the dropDown on the top of the input text\n                    elem.style.maxHeight =  distanceToTop+'px';\n                    elem.style.top ='';\n                    elem.style.bottom ='100%';\n                } else {\n                    elem.style.top = '100%';\n                    elem.style.bottom = '';\n                    elem.style.maxHeight =  distanceToBottom+'px';\n                }\n                elem.style.visibility = 'visible';\n            },\n            highlight : function(index) {\n                if (oldIndex !=-1 && rows[oldIndex]) {\n                    rows[oldIndex].style.backgroundColor = config.backgroundColor;\n                }\n                rows[index].style.backgroundColor = config.dropDownOnHoverBackgroundColor; // <-- should be config\n                oldIndex = index;\n                current_row = rows[index];\n            },\n            // moves the selection either up or down (unless it's not\n            // possible) step is either +1 or -1.\n            move : function(step) {\n                // nothing to move if there is no dropDown. (this happens if\n                // the user hits escape and then down or up)\n                if (elem.style.visibility === 'hidden')\n                    return '';\n                // No circular scrolling\n                if (ix+step === -1 || ix+step === rows.length)\n                    return rows[ix].__hint;\n                ix+=step;\n                p.highlight(ix);\n                return rows[ix].__hint;\n            },\n            onmouseselection : function() {},\n            get_current_row: function () {\n                return current_row;\n            }\n        };\n        return p;\n    }\n\n    var dropDownController = createDropDownController(dropDown);\n\n    dropDownController.onmouseselection = function(id) {\n        rs.onEnter(id)\n        rs.input.focus();\n    }\n\n    wrapper.appendChild(dropDown);\n    container.appendChild(wrapper);\n\n    var spacer,\n        // This will contain the leftSide part of the textfield (the bit that\n        // was already autocompleted)\n        leftSide;\n\n    function calculateWidthForText(text) {\n        if (spacer === undefined) { // on first call only.\n            spacer = document.createElement('span');\n            spacer.style.visibility = 'hidden';\n            spacer.style.position = 'fixed';\n            spacer.style.outline = '0';\n            spacer.style.margin =  '0';\n            spacer.style.padding = '0';\n            spacer.style.border =  '0';\n            spacer.style.left = '0';\n            spacer.style.whiteSpace = 'pre';\n            spacer.style.fontSize =   config.fontSize;\n            spacer.style.fontFamily = config.fontFamily;\n            spacer.style.fontWeight = 'normal';\n            document.body.appendChild(spacer);\n        }\n\n        // Used to encode an HTML string into a plain text.\n        // taken from http://stackoverflow.com/questions/1219860/javascript-jquery-html-encoding\n        spacer.innerHTML = String(text).replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        return spacer.getBoundingClientRect().right;\n    }\n\n\n    var rs = {\n        get_hint :    function(x) { return x; },\n        display_limit: 100,\n        onArrowDown : function() {},               // defaults to no action.\n        onArrowUp :   function() {},               // defaults to no action.\n        onEnter :     function() {},               // defaults to no action.\n        onTab :       function() {},               // defaults to no action.\n        onChange:     function() { rs.repaint() }, // defaults to repainting.\n        startFrom:    0,\n        options:      [],\n\n        // Only to allow easy access to the HTML elements to the final user\n        // (possibly for minor customizations)\n        wrapper : wrapper,\n        input :  txtInput,\n        hint  :  txtHint,\n        dropDown :  dropDown,\n\n        prompt : prompt,\n        setText : function(text) {\n            txtHint.value = text;\n            txtInput.value = text;\n        },\n        getText : function() {\n            return txtInput.value;\n        },\n        hideDropDown : function() {\n            dropDownController.hide();\n        },\n        repaint : function() {\n            var text = txtInput.value;\n            var startFrom =  rs.startFrom;\n            var options =    rs.options;\n            var optionsLength = options.length;\n\n            // breaking text in leftSide and token.\n            var token = text.substring(startFrom);\n            leftSide =  text.substring(0,startFrom);\n\n            // updating the hint.\n            txtHint.value ='';\n            for (var i = 0; i < optionsLength; i++) {\n                var found = options[i].matches.filter(function(match) {\n                    return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                });\n                if (found.length == 0)\n                    continue;\n                txtHint.value = rs.get_hint(found[0]);\n                break;\n            }\n\n            // moving the dropDown and refreshing it.\n            dropDown.style.left = calculateWidthForText(leftSide)+'px';\n            dropDownController.refresh(token, rs.options);\n        }\n    };\n\n    var registerOnTextChangeOldValue;\n\n    // Register a callback function to detect changes to the content of the\n    // input-type-text.  Those changes are typically followed by user's\n    // action: a key-stroke event but sometimes it might be a mouse click.\n    var registerOnTextChange = function(txt, callback) {\n        registerOnTextChangeOldValue = txt.value;\n        var handler = function() {\n            var value = txt.value;\n            if (registerOnTextChangeOldValue !== value) {\n                registerOnTextChangeOldValue = value;\n                callback(value);\n            }\n        };\n\n        // For user's actions, we listen to both input events and key up events\n        // It appears that input events are not enough so we defensively listen to key up events too.\n        // source: http://help.dottoro.com/ljhxklln.php\n        //\n        // The cost of listening to three sources should be negligible as the handler will invoke callback function\n        // only if the text.value was effectively changed.\n        txt.addEventListener(\"input\",  handler, false);\n        txt.addEventListener('keyup',  handler, false);\n        txt.addEventListener('change', handler, false);\n    };\n\n\n    registerOnTextChange(txtInput,function(text) { // note the function needs to be wrapped as API-users will define their onChange\n        rs.onChange(text);\n        rs.repaint();\n    });\n\n\n    var keyDownHandler = function(e) {\n        e = e || window.event;\n        var keyCode = e.keyCode;\n\n        if (keyCode == 33) { return; } // page up (do nothing)\n        if (keyCode == 34) { return; } // page down (do nothing);\n\n        // right,  end, tab  (autocomplete triggered)\n        if (keyCode == 39 || keyCode == 35 || keyCode == 9) {\n            // for tabs we need to ensure that we override the default\n            // behaviour: move to the next focusable HTML-element\n            if (keyCode == 9) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (txtHint.value.length == 0) {\n                    // tab was called with no action.\n                    rs.onTab();\n                }\n            }\n            // if there is a hint\n            if (txtHint.value.length > 0) {\n                txtInput.value = txtHint.value;\n                var hasTextChanged = registerOnTextChangeOldValue != txtInput.value\n                // avoid dropDown to appear again\n                registerOnTextChangeOldValue = txtInput.value;\n                // for example imagine the array contains the following\n                // words: bee, beef, beetroot. User has hit enter to get\n                // 'bee' it would be prompted with the dropDown again (as\n                // beef and beetroot also match)\n                if (hasTextChanged) {\n                    // force it.\n                    rs.onChange(txtInput.value);\n                }\n            }\n            return;\n        }\n\n        if (keyCode == 13) { // enter\n            // get current\n            var id = dropDownController.get_current_row().id;\n            rs.onEnter(id);\n            return;\n        }\n\n        if (keyCode == 40) { // down\n            var m = dropDownController.move(+1);\n            if (m == '') { rs.onArrowDown(); }\n            txtHint.value = rs.get_hint(m);\n            return;\n        }\n\n        if (keyCode == 38 ) { // up\n            var m = dropDownController.move(-1);\n            if (m == '') { rs.onArrowUp(); }\n            txtHint.value = rs.get_hint(m);\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        // it's important to reset the txtHint on key down. Think: user\n        // presses a letter (e.g. 'x') and never releases. You get\n        // (xxxxxxxxxxxxxxxxx) and you would see still the hint. Reset the\n        // txtHint. (it might be updated onKeyUp).\n        txtHint.value ='';\n    };\n\n    txtInput.addEventListener(\"keydown\",  keyDownHandler, false);\n    return rs;\n};\n","/** data_styles */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    import_and_check: import_and_check,\n    text_for_data: text_for_data,\n    float_for_data: float_for_data,\n    reverse_flux_for_data: reverse_flux_for_data,\n    gene_string_for_data: gene_string_for_data,\n    csv_converter: csv_converter,\n    genes_for_gene_reaction_rule: genes_for_gene_reaction_rule,\n    evaluate_gene_reaction_rule: evaluate_gene_reaction_rule,\n    replace_gene_in_rule: replace_gene_in_rule,\n    apply_reaction_data_to_reactions: apply_reaction_data_to_reactions,\n    apply_metabolite_data_to_nodes: apply_metabolite_data_to_nodes,\n    apply_gene_data_to_reactions: apply_gene_data_to_reactions\n};\n\n\n// globals\nvar RETURN_ARG = function(x) { return x; },\n    ESCAPE_REG = /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\n    EMPTY_LINES = /\\n\\s*\\n/g,\n    TRAILING_NEWLINE = /\\n\\s*(\\)*)\\s*$/,\n    AND_OR = /([\\(\\) ])(?:and|or)([\\)\\( ])/ig,\n    ALL_PARENS = /[\\(\\)]/g,\n    // capture an expression surrounded by whitespace and a set of parentheses\n    EXCESS_PARENS = /\\(\\s*(\\S+)\\s*\\)/g,\n    OR = /\\s+or\\s+/i,\n    AND = /\\s+and\\s+/i,\n    // find ORs\n    OR_EXPRESSION = /(^|\\()(\\s*-?[0-9.]+\\s+(?:or\\s+-?[0-9.]+\\s*)+)(\\)|$)/ig,\n    // find ANDS, respecting order of operations (and before or)\n    AND_EXPRESSION = /(^|\\(|or\\s)(\\s*-?[0-9.]+\\s+(?:and\\s+-?[0-9.]+\\s*)+)(\\sor|\\)|$)/ig;\n\n\nfunction import_and_check(data, name, all_reactions) {\n    /** Convert imported data to a style that can be applied to reactions\n     and nodes.\n\n     Arguments\n     ---------\n\n     data: The data object.\n\n     name: Either 'reaction_data', 'metabolite_data', or 'gene_data'\n\n     all_reactions: Required for name == 'gene_data'. Must include all\n     GPRs for the map and model.\n\n     */\n\n    // check arguments\n    if (data===null)\n        return null;\n    if (['reaction_data', 'metabolite_data', 'gene_data'].indexOf(name) == -1)\n        throw new Error('Invalid name argument: ' + name);\n\n    // make array\n    if (!(data instanceof Array)) {\n        data = [data];\n    }\n    // check data\n    var check = function() {\n        if (data===null)\n            return null;\n        if (data.length==1)\n            return null;\n        if (data.length==2)\n            return null;\n        return console.warn('Bad data style: ' + name);\n    };\n    check();\n    data = utils.array_to_object(data);\n\n    if (name == 'gene_data') {\n        if (all_reactions === undefined)\n            throw new Error('Must pass all_reactions argument for gene_data');\n        data = align_gene_data_to_reactions(data, all_reactions);\n    }\n\n    return data;\n\n    // definitions\n    function align_gene_data_to_reactions(data, reactions) {\n        var aligned = {},\n            null_val = [null];\n        // make an array of nulls as the default\n        for (var first_gene_id in data) {\n            null_val = data[first_gene_id].map(function() { return null; });\n            break;\n        }\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id],\n                bigg_id = reaction.bigg_id,\n                this_gene_data = {};\n\n            reaction.genes.forEach(function(gene) {\n                // check both gene id and gene name\n                ['bigg_id', 'name'].forEach(function(kind) {\n                    var d = data[gene[kind]] || utils.clone(null_val);\n                    // merger with existing data if present\n                    var existing_d = this_gene_data[gene.bigg_id];\n                    if (typeof existing_d === 'undefined') {\n                        this_gene_data[gene.bigg_id] = d;\n                    } else {\n                        for (var i = 0; i < d.length; i++) {\n                            var pnt = d[i];\n                            if (pnt !== null)\n                                existing_d[i] = pnt;\n                        }\n                    }\n                });\n            });\n            aligned[bigg_id] = this_gene_data;\n        }\n        return aligned;\n    }\n}\n\nfunction float_for_data(d, styles, compare_style) {\n    // all null\n    if (d === null)\n        return null;\n\n    // absolute value\n    var take_abs = (styles.indexOf('abs') != -1);\n\n    if (d.length==1) { // 1 set\n        // 1 null\n        var f = _parse_float_or_null(d[0]);\n        if (f === null)\n            return null;\n        return abs(f, take_abs);\n    } else if (d.length==2) { // 2 sets\n        // 2 null\n        var fs = d.map(_parse_float_or_null);\n        if (fs[0] === null || fs[1] === null)\n            return null;\n\n        if (compare_style == 'diff') {\n            return diff(fs[0], fs[1], take_abs);\n        } else if (compare_style == 'fold') {\n            return check_finite(fold(fs[0], fs[1], take_abs));\n        }\n        else if (compare_style == 'log2_fold') {\n            return check_finite(log2_fold(fs[0], fs[1], take_abs));\n        }\n    } else {\n        throw new Error('Data array must be of length 1 or 2');\n    }\n    throw new Error('Bad data compare_style: ' + compare_style);\n\n    // definitions\n    function check_finite(x) {\n        return isFinite(x) ? x : null;\n    }\n    function abs(x, take_abs) {\n        return take_abs ? Math.abs(x) : x;\n    }\n    function diff(x, y, take_abs) {\n        if (take_abs) return Math.abs(y - x);\n        else return y - x;\n    }\n    function fold(x, y, take_abs) {\n        if (x == 0 || y == 0) return null;\n        var fold = (y >= x ? y / x : - x / y);\n        return take_abs ? Math.abs(fold) : fold;\n    }\n    function log2_fold(x, y, take_abs) {\n        if (x == 0) return null;\n        if (y / x < 0) return null;\n        var log = Math.log(y / x) / Math.log(2);\n        return take_abs ? Math.abs(log) : log;\n    }\n}\n\nfunction reverse_flux_for_data(d) {\n    if (d === null || d[0] === null)\n        return false;\n    return (d[0] < 0);\n}\n\nfunction gene_string_for_data(rule, gene_values, genes, styles,\n                              identifiers_on_map, compare_style) {\n    /** Add gene values to the gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: (string) The gene reaction rule.\n\n     gene_values: The values.\n\n     genes: An array of objects specifying the gene bigg_id and name.\n\n     styles: The reaction styles.\n\n     identifiers_on_map: The type of identifiers ('bigg_id' or 'name').\n\n     compare_style: The comparison style.\n\n     Returns\n     -------\n\n     A list of objects with {\n     bigg_id: The bigg ID.\n     name: The name.\n     text: The new string with formatted data values.\n     }\n\n     The text elements should each appear on a new line.\n\n     */\n\n    var out_text = rule,\n        no_data = (gene_values === null),\n        // keep track of bigg_id's or names to remove repeats\n        genes_found = {};\n\n\n    genes.forEach(function(g_obj) {\n        // get id or name\n        var name = g_obj[identifiers_on_map];\n        if (typeof name === 'undefined')\n            throw new Error('Bad value for identifiers_on_map: ' + identifiers_on_map);\n        // remove repeats that may have found their way into genes object\n        if (typeof genes_found[name] !== 'undefined')\n            return;\n        genes_found[name] = true;\n        // generate the string\n        if (no_data) {\n            out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + '\\n'));\n        } else {\n            var d = gene_values[g_obj.bigg_id];\n            if (typeof d === 'undefined') d = null;\n            var f = float_for_data(d, styles, compare_style),\n                format = (f === null ? RETURN_ARG : d3.format('.3g'));\n            if (d.length==1) {\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + ' (' + null_or_d(d[0], format) + ')\\n'));\n            }\n            else if (d.length==2) {\n                // check if they are all text\n                var new_str,\n                    any_num = d.reduce(function(c, x) {\n                        return c || _parse_float_or_null(x) !== null;\n                    }, false);\n                if (any_num) {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ': ' +\n                               null_or_d(f, format) +\n                               ')\\n');\n                } else {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ')\\n');\n                }\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, new_str);\n            }\n        }\n    });\n    // remove emtpy lines\n    out_text = out_text.replace(EMPTY_LINES, '\\n')\n    // remove trailing newline (with or without parens)\n        .replace(TRAILING_NEWLINE, '$1');\n\n    // split by newlines\n    var result = out_text.split('\\n').map(function(text) {\n        for (var i = 0, l = genes.length; i < l; i++) {\n            var gene = genes[i];\n            if (text.indexOf(gene[identifiers_on_map]) != -1) {\n                return { bigg_id: gene.bigg_id, name: gene.name, text: text };\n                continue;\n            }\n        }\n        // not found, then none\n        return { bigg_id: null, name: null, text: text };\n    });\n    return result;\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? 'nd' : format(d);\n    }\n}\n\nfunction text_for_data(d, f) {\n    if (d === null)\n        return null_or_d(null);\n    if (d.length == 1) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g'));\n        return null_or_d(d[0], format);\n    }\n    if (d.length == 2) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g')),\n            t = null_or_d(d[0], format);\n        t += ', ' + null_or_d(d[1], format);\n        t += ': ' + null_or_d(f, format);\n        return t;\n    }\n    return '';\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? '(nd)' : format(d);\n    }\n}\n\nfunction csv_converter(csv_rows) {\n    /** Convert data from a csv file to json-style data.\n\n     File must include a header row.\n\n     */\n    // count rows\n    var c = csv_rows[0].length,\n        converted = [];\n    if (c < 2 || c > 3)\n        throw new Error('CSV file must have 2 or 3 columns');\n    // set up rows\n    for (var i = 1; i < c; i++) {\n        converted[i - 1] = {};\n    }\n    // fill\n    csv_rows.slice(1).forEach(function(row) {\n        for (var i = 1, l = row.length; i < l; i++) {\n            converted[i - 1][row[0]] = row[i];\n        }\n    });\n    return converted;\n}\n\nfunction genes_for_gene_reaction_rule(rule) {\n    /** Find unique genes in gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     Returns\n     -------\n\n     An array of gene strings.\n\n     */\n    var genes = rule\n    // remove ANDs and ORs, surrounded by space or parentheses\n            .replace(AND_OR, '$1$2')\n    // remove parentheses\n            .replace(ALL_PARENS, '')\n    // split on whitespace\n            .split(' ')\n            .filter(function(x) { return x != ''; });\n    // unique strings\n    return utils.unique_strings_array(genes);\n}\n\nfunction evaluate_gene_reaction_rule(rule, gene_values, and_method_in_gene_reaction_rule) {\n    /** Return a value given the rule and gene_values object.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     gene_values: Object with gene_ids for keys and numbers for values.\n\n     and_method_in_gene_reaction_rule: Either 'mean' or 'min'.\n\n     */\n\n    var null_val = [null],\n        l = 1;\n    // make an array of nulls as the default\n    for (var gene_id in gene_values) {\n        null_val = gene_values[gene_id].map(function() { return null; });\n        l = null_val.length;\n        break;\n    }\n\n    if (rule == '') return utils.clone(null_val);\n\n    // for each element in the arrays\n    var out = [];\n    for (var i = 0; i < l; i++) {\n        // get the rule\n        var curr_val = rule;\n\n        // put all the numbers into the expression\n        var all_null = true;\n        for (var gene_id in gene_values) {\n            var f = _parse_float_or_null(gene_values[gene_id][i]);\n            if (f === null) {\n                f = 0;\n            } else {\n                all_null = false;\n            }\n            curr_val = replace_gene_in_rule(curr_val, gene_id, f);\n        }\n        if (all_null) {\n            out.push(null);\n            continue;\n        }\n\n        // recursively evaluate\n        while (true) {\n            // arithemtic expressions\n            var new_curr_val = curr_val;\n\n            // take out excessive parentheses\n            new_curr_val = new_curr_val.replace(EXCESS_PARENS, ' $1 ');\n\n            // or's\n            new_curr_val = new_curr_val.replace(OR_EXPRESSION, function(match, p1, p2, p3) {\n                // sum\n                var nums = p2.split(OR).map(parseFloat),\n                    sum = nums.reduce(function(a, b) { return a + b;});\n                return p1 + sum + p3;\n            });\n            // and's\n            new_curr_val = new_curr_val.replace(AND_EXPRESSION, function(match, p1, p2, p3) {\n                // find min\n                var nums = p2.split(AND).map(parseFloat),\n                    val = (and_method_in_gene_reaction_rule == 'min' ?\n                           Math.min.apply(null, nums) :\n                           nums.reduce(function(a, b) { return a + b; }) / nums.length);\n                return p1 + val + p3;\n            });\n            // break if there is no change\n            if (new_curr_val == curr_val)\n                break;\n            curr_val = new_curr_val;\n        }\n        // strict test for number\n        var num = Number(curr_val);\n        if (isNaN(num)) {\n            console.warn('Could not evaluate ' + rule);\n            out.push(null);\n        } else {\n            out.push(num);\n        }\n    }\n    return out;\n}\n\nfunction replace_gene_in_rule(rule, gene_id, val) {\n    // get the escaped string, with surrounding space or parentheses\n    var space_or_par_start = '(^|[\\\\\\s\\\\\\(\\\\\\)])',\n        space_or_par_finish = '([\\\\\\s\\\\\\(\\\\\\)]|$)',\n        escaped = space_or_par_start + escape_reg_exp(gene_id) + space_or_par_finish;\n    return rule.replace(new RegExp(escaped, 'g'),  '$1' + val + '$2');\n\n    // definitions\n    function escape_reg_exp(string) {\n        return string.replace(ESCAPE_REG, \"\\\\$1\");\n    }\n}\n\nfunction apply_reaction_data_to_reactions(reactions, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var reaction_id, reaction, segment_id, segment;\n\n    if (data === null) {\n        for (reaction_id in reactions) {\n            reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            for (segment_id in reaction.segments) {\n                segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // apply the datasets to the reactions\n    for (reaction_id in reactions) {\n        reaction = reactions[reaction_id];\n        // check bigg_id and name\n        var d = data[reaction.bigg_id] || data[reaction.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        reaction.gene_string = null;\n        // apply to the segments\n        for (segment_id in reaction.segments) {\n            segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n    }\n    return true;\n}\n\nfunction apply_metabolite_data_to_nodes(nodes, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    var node_id;\n\n    if (data === null) {\n        for (node_id in nodes) {\n            nodes[node_id].data = null;\n            nodes[node_id].data_string = '';\n        }\n        return false;\n    }\n\n    // grab the data\n    for (node_id in nodes) {\n        var node = nodes[node_id];\n            // check bigg_id and name\n        var d = data[node.bigg_id] || data[node.name] || null,\n            f = float_for_data(d, styles, compare_style),\n            s = text_for_data(d, f);\n        node.data = f;\n        node.data_string = s;\n    }\n    return true;\n}\n\nfunction apply_gene_data_to_reactions(reactions, gene_data_obj, styles, identifiers_on_map,\n                                      compare_style, and_method_in_gene_reaction_rule) {\n    /** Returns true if data is present\n\n     Arguments\n     ---------\n\n     reactions: The reactions to update.\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { gene_id: value } }\n\n     styles:  Gene styles array.\n\n     identifiers_on_map:\n\n     compare_style:\n\n     and_method_in_gene_reaction_rule:\n\n     */\n\n    if (gene_data_obj === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            reaction.reverse_flux = false;\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // get the null val\n    var null_val = [null];\n    // make an array of nulls as the default\n    for (var reaction_id in gene_data_obj) {\n        for (var gene_id in gene_data_obj[reaction_id]) {\n            null_val = gene_data_obj[reaction_id][gene_id]\n                .map(function() { return null; });\n            break;\n        }\n        break;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            rule = reaction.gene_reaction_rule;\n        // find the data\n        var d, gene_values,\n            r_data = gene_data_obj[reaction.bigg_id];\n        if (typeof r_data !== 'undefined') {\n            gene_values = r_data;\n            d = evaluate_gene_reaction_rule(rule, gene_values,\n                                            and_method_in_gene_reaction_rule);\n        } else {\n            gene_values = {};\n            d = utils.clone(null_val);\n        }\n        var f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n        // always update the gene string\n        reaction.gene_string = gene_string_for_data(rule,\n                                                    gene_values,\n                                                    reaction.genes,\n                                                    styles,\n                                                    identifiers_on_map,\n                                                    compare_style);\n    }\n    return true;\n}\n\nfunction _parse_float_or_null(x) {\n    // strict number casting\n    var f = Number(x);\n    // check for null and '', which haven't been caught yet\n    return (isNaN(f) || parseFloat(x) != f) ? null : f;\n}\n","module.exports = {'version': '1.4.0b1', builder_embed: 'svg.escher-svg .gene-label,svg.escher-svg .label{text-rendering:optimizelegibility;cursor:default}svg.escher-svg #mouse-node{fill:none}svg.escher-svg #canvas{stroke:#ccc;stroke-width:7px;fill:#fff}svg.escher-svg .resize-rect{fill:#000;opacity:0;stroke:none}svg.escher-svg .label{font-family:sans-serif;font-style:italic;font-weight:700;font-size:8px;fill:#000;stroke:none}svg.escher-svg .reaction-label{font-size:30px;fill:#202078;text-rendering:optimizelegibility}svg.escher-svg .node-label{font-size:20px}svg.escher-svg .gene-label{font-size:18px;fill:#202078}svg.escher-svg .text-label .label,svg.escher-svg .text-label-input{font-size:50px}svg.escher-svg .node-circle{stroke-width:2px}svg.escher-svg .midmarker-circle,svg.escher-svg .multimarker-circle{fill:#fff;fill-opacity:.2;stroke:#323232}svg.escher-svg g.selected .node-circle{stroke-width:6px;stroke:#1471c7}svg.escher-svg g.selected .label{fill:#1471c7}svg.escher-svg .metabolite-circle{stroke:#a24510;fill:#e0865b}svg.escher-svg g.selected .metabolite-circle{stroke:#050200}svg.escher-svg .segment{stroke:#334E75;stroke-width:10px;fill:none}svg.escher-svg .arrowhead{fill:#334E75}svg.escher-svg .stoichiometry-label-rect{fill:#fff;opacity:.5}svg.escher-svg .stoichiometry-label{fill:#334E75;font-size:17px}svg.escher-svg .membrane{fill:none;stroke:#fb0}svg.escher-svg .brush .extent{fill-opacity:.1;fill:#000;stroke:#fff;shape-rendering:crispEdges}svg.escher-svg #brush-container .background{fill:none}svg.escher-svg .bezier-circle{fill:#fff}svg.escher-svg .bezier-circle.b1{stroke:red}svg.escher-svg .bezier-circle.b2{stroke:#00f}svg.escher-svg .connect-line{stroke:#c8c8c8}svg.escher-svg .direction-arrow{stroke:#000;stroke-width:1px;fill:#fff;opacity:.3}svg.escher-svg .start-reaction-cursor{cursor:pointer}svg.escher-svg .start-reaction-target{stroke:#646464;fill:none;opacity:.5}svg.escher-svg .rotation-center-line{stroke:red;stroke-width:5px}svg.escher-svg .highlight{fill:#D97000;text-decoration:underline}svg.escher-svg .cursor-grab{cursor:grab;cursor:-webkit-grab}svg.escher-svg .cursor-grabbing{cursor:grabbing;cursor:-webkit-grabbing}svg.escher-svg .edit-text-cursor{cursor:text}'};","/**\n* @license\n*\n* Escher\n* Author: Zachary King\n*\n* The MIT License (MIT)\n*\n* This software is Copyright © 2015 The Regents of the University of\n* California. All Rights Reserved.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n* THE SOFTWARE.\n*/\n\nmodule.exports = {\n    version: require('./inline').version,\n    Builder: require('./Builder'),\n    Map: require('./Map'),\n    Behavior: require('./Behavior'),\n    KeyManager: require('./KeyManager'),\n    DataMenu: require('./DataMenu'),\n    UndoStack: require('./UndoStack'),\n    CobraModel: require('./CobraModel'),\n    utils: require('./utils'),\n    SearchIndex: require('./SearchIndex'),\n    Settings: require('./Settings'),\n    data_styles: require('./data_styles'),\n    ui: require('./ui'),\n    static: require('./static'),\n    ZoomContainer: require('./ZoomContainer')\n};\n","/** static */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    load_map_model_from_url: load_map_model_from_url\n};\n\n\nfunction load_map_model_from_url(map_download_url, model_download_url,\n                                 local_index, options, callback) {\n    var opt = utils.parse_url_components(window, options),\n        to_load = [],\n        load_map = function (fn) { fn(null); },\n        load_model = function (fn) { fn(null); };\n    if (opt.map_name) {\n        var map_path = _get_path('map', opt.map_name,\n                                 local_index, map_download_url);\n        if (map_path) {\n            load_map = function (fn) {\n                d3.json(map_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    if (opt.model_name) {\n        var model_path = _get_path('model', opt.model_name,\n                                   local_index, model_download_url);\n        if (model_path) {\n            load_model = function (fn) {\n                d3.json(model_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    if (opt.hasOwnProperty('enable_editing')) {\n        options.enable_editing = opt.enable_editing;\n    }\n    load_map(function(map_data) {\n        load_model(function(model_data) {\n            callback(map_data, model_data, options);\n        });\n    });\n}\n\nfunction _get_path(kind, name, index, url) {\n    var match = index[kind+'s'].filter(function(x) {\n        return x[kind+'_name'] == name;\n    });\n    if (match.length == 0)\n        throw new Error('Bad ' + kind + ' ' + name);\n    return (url + encodeURIComponent(match[0].organism) +\n            '/' + encodeURIComponent(match[0][kind+'_name'])) + '.json';\n}\n","/** ui */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nmodule.exports = {\n    individual_button: individual_button,\n    radio_button_group: radio_button_group,\n    button_group: button_group,\n    dropdown_menu: dropdown_menu,\n    set_json_input_button: set_json_input_button,\n    set_json_or_csv_input_button: set_json_or_csv_input_button\n};\n\n\nfunction individual_button(s, button) {\n    var b = s.append('button'),\n        c = b.append('span');\n    if ('id' in button) b.attr('id', button.id);\n    if ('classes' in button) b.attr('class', button.classes);\n\n    // text\n    if ('key_text' in button && 'text' in button && button.key_text !== null)\n        c.text(button.text + button.key_text);\n    else if ('text' in button)\n        c.text(button.text);\n\n    if ('icon' in button) c.classed(button.icon, true);\n    if ('key' in button) set_button(b, button.key);\n    // if ('tooltip' in button)\n    b.attr('title', button.tooltip);\n}\n\nfunction radio_button_group(s) {\n    var s2 = s.append('li')\n            .attr('class', 'btn-group-vertical')\n            .attr('data-toggle', 'buttons');\n    return { button: function(button) {\n        var b = s2.append(\"label\")\n                .attr(\"class\", \"btn btn-default\");\n        b.append('input').attr('type', 'radio');\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction button_group(s) {\n    var s2 = s.attr('class', 'btn-group-vertical');\n    return { button: function(button) {\n        var b = s2.append(\"button\")\n                .attr(\"class\", \"btn btn-default\");\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction dropdown_menu(s, name, pull_right) {\n    if (pull_right === undefined) pull_right = false;\n    var s2 = s.append('li')\n            .attr('class', 'dropdown');\n    s2.append('button').text(name+\" \")\n        .attr('class', 'btn btn-link btn-sm dropdown-button')\n        .attr('data-toggle', 'dropdown')\n        .append('b').attr('class', 'caret');\n    var ul = s2.append('ul')\n            .attr('class', 'dropdown-menu')\n            .classed('pull-right', pull_right)\n            .attr('role', 'menu')\n            .attr('aria-labelledby', 'dLabel');\n    return {\n        dropdown: s2,\n        button: function(button) {\n            var li = ul.append(\"li\")\n                    .attr('role', 'presentation')\n                    .datum(button),\n                link = li.append(\"a\")\n                    .attr('href', '#'),\n                icon = link.append('span')\n                    .attr('class', 'dropdown-button-icon'),\n                text = link.append('span')\n                    .attr('class', 'dropdown-button-text');\n            if ('id' in button) li.attr('id', button.id);\n\n            // text\n            if ('key_text' in button && 'text' in button && button.key_text !== null)\n                text.text(\" \"+button.text + button.key_text);\n            else if ('text' in button)\n                text.text(\" \"+button.text);\n\n            if ('icon' in button) icon.classed(button.icon, true);\n\n            if ('key' in button) {\n                set_button(link, button.key);\n            } else if ('input' in button) {\n                var input = button.input,\n                    out = (input.accept_csv ?\n                           set_json_or_csv_input_button(link, li, input.pre_fn,\n                                                        input.fn, input.failure_fn) :\n                           set_json_input_button(link, li, input.pre_fn,\n                                                 input.fn, input.failure_fn));\n                // assign a function to the key\n                if ('assign' in input && 'key' in input)\n                    input.assign[input.key] = out;\n            }\n            return this;\n        },\n        divider: function() {\n            ul.append(\"li\")\n                .attr('role', 'presentation')\n                .attr('class', 'divider');\n            return this;\n        }\n    };\n}\n\nfunction set_button(b, key) {\n    b.on(\"click\", function() {\n        key.fn.call(key.target);\n    });\n}\n\nfunction set_json_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json(this.files[0],\n                                function(e, d) {\n                                    post_fn(e, d);\n                                    this.value = \"\";\n                                }.bind(this),\n                                pre_fn,\n                                failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n\nfunction set_json_or_csv_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json_or_csv(this.files[0],\n                                       data_styles.csv_converter,\n                                       function(e, d) {\n                                           post_fn(e, d);\n                                           this.value = \"\";\n                                       }.bind(this),\n                                       pre_fn,\n                                       failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n","/* global d3, Blob, XMLSerializer */\n\nvar vkbeautify = require('vkbeautify');\ntry {\n    var saveAs = require('filesaverjs').saveAs;\n} catch (e) {\n    console.warn('filesaverjs not available');\n}\n\n\nmodule.exports = {\n    set_options: set_options,\n    remove_child_nodes: remove_child_nodes,\n    load_css: load_css,\n    load_files: load_files,\n    load_the_file: load_the_file,\n    make_class: make_class,\n    setup_defs: setup_defs,\n    draw_an_object: draw_an_object,\n    draw_a_nested_object: draw_a_nested_object,\n    make_array: make_array,\n    make_array_ref: make_array_ref,\n    compare_arrays: compare_arrays,\n    array_to_object: array_to_object,\n    clone: clone,\n    extend: extend,\n    unique_concat: unique_concat,\n    unique_strings_array: unique_strings_array,\n    debounce: debounce,\n    object_slice_for_ids: object_slice_for_ids,\n    object_slice_for_ids_ref: object_slice_for_ids_ref,\n    c_plus_c: c_plus_c,\n    c_minus_c: c_minus_c,\n    c_times_scalar: c_times_scalar,\n    download_json: download_json,\n    load_json: load_json,\n    load_json_or_csv: load_json_or_csv,\n    download_svg: download_svg,\n    rotate_coords_recursive: rotate_coords_recursive,\n    rotate_coords: rotate_coords,\n    get_angle: get_angle,\n    to_degrees: to_degrees,\n    angle_for_event: angle_for_event,\n    distance: distance,\n    check_undefined: check_undefined,\n    compartmentalize: compartmentalize,\n    decompartmentalize: decompartmentalize,\n    mean: mean,\n    median: median,\n    quartiles: quartiles,\n    random_characters: random_characters,\n    generate_map_id: generate_map_id,\n    check_for_parent_tag: check_for_parent_tag,\n    name_to_url: name_to_url,\n    parse_url_components: parse_url_components,\n    get_document: get_document,\n    get_window: get_window,\n    d3_transform_catch: d3_transform_catch\n};\n\n\n// definitions\nfunction _check_filesaver() {\n    /** Check if Blob is available, and alert if it is not. */\n    try {\n        var isFileSaverSupported = !!new Blob();\n    } catch (e) {\n        alert(\"Blob not supported\");\n    }\n}\n\nfunction set_options(options, defaults, must_be_float) {\n    if (options === undefined || options === null)\n        return defaults;\n    var i = -1,\n        out = {};\n    for (var key in defaults) {\n        var has_key = ((key in options) &&\n                       (options[key] !== null) &&\n                       (options[key] !== undefined));\n        var val = (has_key ? options[key] : defaults[key]);\n        if (must_be_float && key in must_be_float) {\n            val = parseFloat(val);\n            if (isNaN(val)) {\n                if (has_key) {\n                    console.warn('Bad float for option ' + key);\n                    val = parseFloat(defaults[key]);\n                    if (isNaN(val)) {\n                        console.warn('Bad float for default ' + key);\n                        val = null;\n                    }\n                } else {\n                    console.warn('Bad float for default ' + key);\n                    val = null;\n                }\n            }\n        }\n        out[key] = val;\n    }\n    return out;\n}\n\n\nfunction remove_child_nodes(selection) {\n    /** Removes all child nodes from a d3 selection\n\n     */\n    var node = selection.node();\n    while (node.hasChildNodes()) {\n        node.removeChild(node.lastChild);\n    }\n}\n\n\nfunction load_css(css_path, callback) {\n    var css = \"\";\n    if (css_path) {\n        d3.text(css_path, function(error, text) {\n            if (error) {\n                console.warn(error);\n            }\n            css = text;\n            callback(css);\n        });\n    }\n    return false;\n};\n\n\nfunction load_the_file(t, file, callback, value) {\n    /** Load a file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A filename to load. Must be JSON or CSS.\n\n     callback: Function to run after the file is loaded. Takes the arguments\n     error and data.\n\n     value: If the value is specified, just assign it and do not execute the\n     ajax query.\n\n     */\n    if (value) {\n        if (file) console.warn('File ' + file + ' overridden by value.');\n        callback.call(t, null, value);\n        return;\n    }\n    if (!file) {\n        callback.call(t, 'No filename', null);\n        return;\n    }\n    if (ends_with(file, 'json'))\n        d3.json(file, function(e, d) { callback.call(t, e, d); });\n    else if (ends_with(file, 'css'))\n        d3.text(file, function(e, d) { callback.call(t, e, d); });\n    else\n        callback.call(t, 'Unrecognized file type', null);\n    return;\n\n    // definitions\n    function ends_with(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n}\n\n\nfunction load_files(t, files_to_load, final_callback) {\n    /** Load multiple files asynchronously by calling utils.load_the_file.\n\n     t: this context for callback. Should be an object.\n\n     files_to_load: A list of objects with the attributes:\n\n        { file: a_filename.json, callback: a_callback_fn }\n\n        File must be JSON or CSS.\n\n     final_callback: Function that runs after all files have loaded.\n\n     */\n    var i = -1,\n        remaining = files_to_load.length;\n    while (++i < files_to_load.length) {\n        load_the_file(\n            t,\n            files_to_load[i].file,\n            function(e, d) {\n                this.call(t, e, d);\n                if (!--remaining) final_callback.call(t);\n            }.bind(files_to_load[i].callback),\n            files_to_load[i].value\n        );\n    }\n}\n\n\nfunction make_class(){\n    /** Create a constructor that returns a new object with our without the\n     'new' keyword.\n\n     Adapted from Hubert Kauker (MIT Licensed), John Resig (MIT Licensed).\n     http://stackoverflow.com/questions/7892884/simple-class-instantiation\n\n     */\n    var is_internal,\n        constructor = function(args) {\n            if (this instanceof constructor) {\n                if (typeof this.init === 'function') {\n                    this.init.apply(this, is_internal ? args : arguments);\n                }\n            } else {\n                is_internal = true;\n                var instance = new constructor(arguments);\n                is_internal = false;\n                return instance;\n            }\n        };\n    return constructor;\n}\n\n\nfunction setup_defs(svg, style) {\n    // add stylesheet\n    svg.select(\"defs\").remove();\n    var defs = svg.append(\"defs\");\n    // make sure the defs is the first node\n    var node = defs.node();\n    node.parentNode.insertBefore(node, node.parentNode.firstChild);\n    defs.append(\"style\")\n        .attr(\"type\", \"text/css\")\n        .text(style);\n    return defs;\n}\n\nfunction draw_an_object(container_sel, parent_node_selector, children_selector,\n                        object, id_key, create_function, update_function,\n                        exit_function) {\n    /** Run through the d3 data binding steps for an object. Also checks to\n     make sure none of the values in the *object* are undefined, and\n     ignores those.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     parent_node_selector: A selector string for a subselection of\n     container_sel.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object: An object to bind to the selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var draw_object = {};\n    for (var id in object) {\n        if (object[id] === undefined) {\n            console.warn('Undefined value for id ' + id + ' in object. Ignoring.');\n        } else {\n            draw_object[id] = object[id];\n        }\n    }\n\n    var sel = container_sel.select(parent_node_selector)\n            .selectAll(children_selector)\n            .data(make_array_ref(draw_object, id_key),\n                  function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction draw_a_nested_object(container_sel, children_selector, object_data_key,\n                              id_key, create_function, update_function,\n                              exit_function) {\n    /** Run through the d3 data binding steps for an object that is nested\n     within another element with d3 data.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object_data_key: A key for the parent object containing data for the\n     new selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var sel = container_sel.selectAll(children_selector)\n            .data(function(d) {\n                return make_array_ref(d[object_data_key], id_key);\n            }, function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction make_array(obj, id_key) { // is this super slow?\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = clone(obj[key]);\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction make_array_ref(obj, id_key) {\n    /** Turn the object into an array, but only by reference. Faster than\n     make_array.\n\n     */\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = obj[key];\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction compare_arrays(a1, a2) {\n    /** Compares two simple (not-nested) arrays.\n\n     */\n    if (!a1 || !a2) return false;\n    if (a1.length != a2.length) return false;\n    for (var i = 0, l=a1.length; i < l; i++) {\n        if (a1[i] != a2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction array_to_object(arr) {\n    /** Convert an array of objects to an object with all keys and values\n     that are arrays of the same length as arr. Fills in spaces with null.\n\n     For example, [ { a: 1 }, { b: 2 }] becomes { a: [1, null], b: [null, 2] }.\n\n     */\n    // new object\n    var obj = {};\n    // for each element of the array\n    for (var i = 0, l = arr.length; i < l; i++) {\n        var column = arr[i],\n            keys = Object.keys(column);\n        for (var k = 0, nk = keys.length; k < nk; k++) {\n            var id = keys[k];\n            if (!(id in obj)) {\n                var n = [];\n                // fill spaces with null\n                for (var j = 0; j < l; j++) {\n                    n[j] = null;\n                }\n                n[i] = column[id];\n                obj[id] = n;\n            } else {\n                obj[id][i] = column[id];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction clone(obj) {\n    // Handles the array and object types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n    // Handle Array\n    if (obj instanceof Array) {\n        var copy = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        var copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nfunction extend(obj1, obj2, overwrite) {\n    /** Extends obj1 with keys/values from obj2. Performs the extension\n     cautiously, and does not override attributes, unless the overwrite\n     argument is true.\n\n     Arguments\n     ---------\n\n     obj1: Object to extend\n\n     obj2: Object with which to extend.\n\n     overwrite: (Optional, Default false) Overwrite attributes in obj1.\n\n     */\n\n    if (overwrite === undefined)\n        overwrite = false;\n\n    for (var attrname in obj2) {\n        if (!(attrname in obj1) || overwrite) // UNIT TEST This\n            obj1[attrname] = obj2[attrname];\n        else\n            throw new Error('Attribute ' + attrname + ' already in object.');\n    }\n}\n\nfunction unique_concat(arrays) {\n    var new_array = [];\n    arrays.forEach(function (a) {\n        a.forEach(function(x) {\n            if (new_array.indexOf(x) < 0)\n                new_array.push(x);\n        });\n    });\n    return new_array;\n}\n\nfunction unique_strings_array(arr) {\n    /** Return unique values in array of strings.\n\n     http://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n     */\n    var a = [];\n    for (var i = 0, l = arr.length; i < l; i++)\n        if (a.indexOf(arr[i]) === -1)\n            a.push(arr[i]);\n    return a;\n}\n\nfunction debounce(func, wait, immediate) {\n    /** Returns a function, that, as long as it continues to be invoked, will\n     not be triggered.\n\n     The function will be called after it stops being called for N\n     milliseconds. If `immediate` is passed, trigger the function on the leading\n     edge, instead of the trailing.\n\n     */\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nfunction object_slice_for_ids(obj, ids) {\n    /** Return a copy of the object with just the given ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = clone(obj[ids[i]]);\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction object_slice_for_ids_ref(obj, ids) {\n    /** Return a reference of the object with just the given ids. Faster\n     than object_slice_for_ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = obj[ids[i]];\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction c_plus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x + coords2.x,\n             \"y\": coords1.y + coords2.y };\n}\nfunction c_minus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x - coords2.x,\n             \"y\": coords1.y - coords2.y };\n}\n\nfunction c_times_scalar(coords, scalar) {\n    return { \"x\": coords.x * scalar,\n             \"y\": coords.y * scalar };\n}\n\nfunction download_json(json, name) {\n    /** Download json file in a blob.\n\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    var j = JSON.stringify(json),\n        blob = new Blob([j], {type: \"application/json\"});\n    saveAs(blob, name + '.json');\n}\n\nfunction load_json(f, callback, pre_fn, failure_fn) {\n    /** Try to load the file as JSON.\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     */\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n\n    var reader = new window.FileReader();\n    // Closure to capture the file information.\n    reader.onload = function(event) {\n        var result = event.target.result,\n            data;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            // if it failed, return the error\n            callback(e, null);\n            return;\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n}\n\nfunction load_json_or_csv(f, csv_converter, callback, pre_fn, failure_fn,\n                          debug_event) {\n    /** Try to load the file as JSON or CSV (JSON first).\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     csv_converter: A function to convert the CSV output to equivalent JSON.\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     debug_event: (optional) An event, with a string at event.target.result, to\n     load as though it was the contents of a loaded file.\n\n     */\n\n    // Capture the file information.\n    var onload_function = function(event) {\n        var result = event.target.result,\n            data, errors;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            errors = 'JSON error: ' + e;\n\n            // try csv\n            try {\n                data = csv_converter(d3.csv.parseRows(result));\n            } catch (e) {\n                // if both failed, return the errors\n                callback(errors + '\\nCSV error: ' + e, null);\n                return;\n            }\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (debug_event !== undefined && debug_event !== null) {\n        console.warn('Debugging load_json_or_csv');\n        return onload_function(debug_event);\n    }\n\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n    var reader = new window.FileReader();\n\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.onload = onload_function;\n    reader.readAsText(f);\n}\n\nfunction download_svg(name, svg_sel, do_beautify) {\n    /** Download an svg file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    // make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = ('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n           '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n' +\n           ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n           xml);\n\n    // save\n    var blob = new Blob([xml], { type: 'image/svg+xml' });\n    saveAs(blob, name + '.svg');\n};\n\nfunction rotate_coords_recursive(coords_array, angle, center) {\n    var rot = function(c) { return rotate_coords(c, angle, center); };\n    return coords_array.map(rot);\n}\n\nfunction rotate_coords(c, angle, center) {\n    /** Calculates displacement { x: dx, y: dy } based on rotating point c around\n     center with angle.\n\n     */\n    var dx = Math.cos(-angle) * (c.x - center.x) +\n            Math.sin(-angle) * (c.y - center.y)\n            + center.x - c.x,\n        dy = - Math.sin(-angle) * (c.x - center.x) +\n            Math.cos(-angle) * (c.y - center.y)\n            + center.y - c.y;\n    return { x: dx, y: dy };\n}\n\nfunction get_angle(coords) {\n    /* Takes an array of 2 coordinate objects {\"x\": 1, \"y\": 1}\n     *\n     * Returns angle between 0 and 2PI.\n     */\n    var denominator = coords[1].x - coords[0].x,\n        numerator = coords[1].y - coords[0].y;\n    if (denominator==0 && numerator >= 0) return Math.PI/2;\n    else if (denominator==0 && numerator < 0) return 3*Math.PI/2;\n    else if (denominator >= 0 && numerator >= 0) return Math.atan(numerator/denominator);\n    else if (denominator >= 0) return (Math.atan(numerator/denominator) + 2*Math.PI);\n    else return (Math.atan(numerator/denominator) + Math.PI);\n}\n\nfunction to_degrees(radians) { return radians*180/Math.PI; }\n\nfunction angle_for_event(displacement, point, center) {\n    var gamma =  Math.atan2((point.x - center.x), (center.y - point.y)),\n        beta = Math.atan2((point.x - center.x + displacement.x),\n                          (center.y - point.y - displacement.y)),\n        angle = beta - gamma;\n    return angle;\n}\n\nfunction distance(start, end) { return Math.sqrt(Math.pow(end.y-start.y, 2) + Math.pow(end.x-start.x, 2)); }\n\nfunction check_undefined(args, names) {\n    /** Report an error if any of the arguments are undefined.\n\n     Call by passing in *arguments* from any function and an array of\n     argument names.\n\n     */\n    names.map(function(name, i) {\n        if (args[i]===undefined) {\n            console.error('Argument is undefined: '+String(names[i]));\n        }\n    });\n}\n\nfunction compartmentalize(bigg_id, compartment_id) {\n    return bigg_id + '_' + compartment_id;\n}\n\n\n// definitions\nfunction decompartmentalize(id) {\n    /** Convert ids to bigg_id and compartment_id.\n\n     */\n    var out = no_compartment(id);\n    if (out===null) out = [id, null];\n    return out;\n\n    // definitions\n    function no_compartment(id) {\n        /** Returns an array of [bigg_id, compartment id].\n\n         Matches compartment ids with length 1 or 2.\n\n         Return null if no match is found.\n\n         */\n        var reg = /(.*)_([a-z0-9]{1,2})$/,\n            result = reg.exec(id);\n        if (result===null) return null;\n        return result.slice(1,3);\n    }\n}\n\nfunction mean(array) {\n    var sum = array.reduce(function(a, b) { return a + b; });\n    var avg = sum / array.length;\n    return avg;\n}\n\nfunction median(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if(array.length % 2 == 1)\n        return array[half];\n    else\n        return (array[half-1] + array[half]) / 2.0;\n}\n\nfunction quartiles(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if (array.length == 1)\n        return [ array[0], array[0], array[0] ];\n    else if (array.length % 2 == 1)\n        return [ median(array.slice(0, half)),\n                 array[half],\n                 median(array.slice(half + 1)) ];\n    else\n        return [ median(array.slice(0, half)),\n                 (array[half-1] + array[half]) / 2.0,\n                 median(array.slice(half)) ];\n}\n\nfunction random_characters(num) {\n    // Thanks to @csharptest.net\n    // http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript\n    var text = '',\n        possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < num; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    return text;\n}\n\nfunction generate_map_id() {\n    return random_characters(12);\n}\n\nfunction check_for_parent_tag(el, tag) {\n    /** Check that the selection has the given parent tag.\n\n     el: A d3 selection or node.\n\n     tag: A tag name (case insensitive)\n\n     */\n    // make sure it is a node\n    if (el instanceof Array)\n        el = el.node();\n    while (el.parentNode !== null) {\n        el = el.parentNode;\n        if (el.tagName === undefined) continue;\n        if (el.tagName.toLowerCase() === tag.toLowerCase())\n            return true;\n    }\n    return false;\n}\n\nfunction name_to_url(name, download_url) {\n    /** Convert model or map name to url.\n\n     Arguments\n     ---------\n\n     name: The short name, e.g. e_coli.iJO1366.central_metabolism.\n\n     download_url: The url to prepend (optional).\n\n     */\n\n    if (download_url !== undefined && download_url !== null) {\n        // strip download_url\n        download_url = download_url.replace(/^\\/|\\/$/g, '');\n        name = [download_url, name].join('/');\n    }\n    // strip final path\n    return name.replace(/^\\/|\\/$/g, '') + '.json';\n}\n\nfunction parse_url_components(the_window, options) {\n    /** Parse the URL and return options based on the URL arguments.\n\n     Arguments\n     ---------\n\n     the_window: A reference to the global window.\n\n     options: (optional) an existing options object to which new options\n     will be added. Overwrites existing arguments in options.\n\n     Adapted from http://stackoverflow.com/questions/979975/how-to-get-the-value-from-url-parameter\n\n     */\n    if (options===undefined) options = {};\n\n    var query = the_window.location.search.substring(1),\n        vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\"),\n            val = decodeURIComponent(pair[1]);\n        // deal with array options\n        if (pair[0].indexOf('[]') == pair[0].length - 2) {\n            var o = pair[0].replace('[]', '');\n            if (!(o in options))\n                options[o] = [];\n            options[o].push(val);\n        } else {\n            options[pair[0]] = val;\n        }\n    }\n    return options;\n}\n\n\nfunction get_document(node) {\n    /** Get the document for the node */\n    return node.ownerDocument;\n}\n\n\nfunction get_window(node) {\n    /** Get the window for the node */\n    return get_document(node).defaultView;\n}\n\n\nfunction d3_transform_catch(transform_attr) {\n    /** Return the result of d3.transform, but catch errors if we are in\n     node/jsdom. See also https://github.com/mbostock/d3/issues/1545\n\n     */\n    try {\n        return d3.transform(transform_attr);\n    } catch (err) {\n        console.error('Cannot run d3.transform, probably becuase this is a node/jsdom test. ' +\n                      'Returning a tranform object for testing.');\n        return { translate: [0, 0], rotate: 0 };\n    }\n}\n","(function() {\nvar _slice = Array.prototype.slice;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.82';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var afters = [];\n  var aftersIndex = 0;\n  var flushed = {};\n\n  var afterTransaction = function (f) {\n    if (rootEvent) {\n      return afters.push(f);\n    } else {\n      return f();\n    }\n  };\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        while (aftersIndex < afters.length) {\n          var after = afters[aftersIndex];\n          aftersIndex++;\n          after();\n        }\n        aftersIndex = 0;\n        afters = [];\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(_toConsumableArray(args)));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, _toConsumableArray(args));\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, _toConsumableArray(applied.concat(args)));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(_toConsumableArray(args)));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, _toConsumableArray(args));\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, _toConsumableArray(values));\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  for (var index = 0, stream; index < streams.length; index++) {\n    stream = streams[index];\n    if (!isObservable(stream)) {\n      streams[index] = Bacon.constant(stream);\n    }\n  }\n  if (streams.length) {\n    var sources = (function () {\n      var result = [];\n      for (var i = 0, s; i < streams.length; i++) {\n        s = streams[i];\n        result.push(new Source(s, true));\n      }\n      return result;\n    })();\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  for (var _len10 = arguments.length, streams = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    streams[_key10] = arguments[_key10];\n  }\n\n  return Bacon.combineAsArray(streams.slice(0, streams.length - 1)).onValues(streams[streams.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(_toConsumableArray(streams)));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, _toConsumableArray(values));\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return (unsubLeft(), unsubRight());\n    };\n  });\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n    args[_key12 - 1] = arguments[_key12];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      return this.sink(nextEvent(value));\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, _toConsumableArray(values).concat([callback]));\n    }]);\n\n    for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len15 = arguments.length, args = Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n    args[_key15 - 1] = arguments[_key15];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      return setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      return setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      return ctxStack.push(newContext);\n    };\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      return funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      var popContext = function (ctxStack) {\n        return ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      return funcs.push(popContext);\n    } else {\n      return funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    return _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  compileTemplate(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), Bacon.combineAsArray(streams).map(combinator));\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delay = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"delay\", [delay]), this.flatMap(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.delay(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounce = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounce\", [delay]), this.flatMapLatest(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.debounce(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounceImmediate = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounceImmediate\", [delay]), this.flatMapFirst(function (value) {\n    return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n  }));\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    args[_key16] = arguments[_key16];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n    args[_key17 - 1] = arguments[_key17];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len18 = arguments.length, args = Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n      args[_key18 - 1] = arguments[_key18];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    return new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      var push = function () {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var maxRetries = options.maxRetries || retries;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function () {\n    function valueStream() {\n      return source().endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && retries > 0)) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: maxRetries - retries\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retries = retries - 1;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len21 = arguments.length, args = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    args[_key21 - 1] = arguments[_key21];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"throttle\", [delay]), this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n\n      return function (i) {\n        return f.apply(undefined, _toConsumableArray([i].concat(args)));\n      };\n    };\n  }\n\n  for (var _len22 = arguments.length, patterns = Array(_len22 > 1 ? _len22 - 1 : 0), _key22 = 1; _key22 < _len22; _key22++) {\n    patterns[_key22 - 1] = arguments[_key22];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len24 = arguments.length, args = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n    args[_key24] = arguments[_key24];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len25 = arguments.length, xs = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n      xs[_key25] = arguments[_key25];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len26 = arguments.length, args = Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n    args[_key26] = arguments[_key26];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20151003\n *\n * By Eli Grey, http://eligrey.com\n * License: X11/MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\n\t\t// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\n\t\t// for the reasoning behind the timeout and revocation flow\n\t\t, arbitrary_revoke_timeout = 500 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (view.chrome) {\n\t\t\t\trevoker();\n\t\t\t} else {\n\t\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t\t}\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([\"\\ufeff\", blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (new_tab == undefined && is_safari) {\n\t\t\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\t\t\tview.location.href = object_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n  define([], function() {\n    return saveAs;\n  });\n}\n","/*global define:false */\n/**\n * Copyright 2015 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.5.3\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n        _MAP[i + 96] = i;\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (window, document);\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*  \r\n* Version - 0.99.00.beta \r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n* \r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\t\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(ix=0;ix<100;ix++){\r\n\t\tshift.push(shift[ix]+space); \r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true; \r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) { \r\n\t\t\t\t\tinComment = false; \r\n\t\t\t\t}\r\n\t\t\t} else \r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false; \r\n\t\t\t} else \r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) { \r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) { \r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\t\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\t\t\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\t\t\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\}/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\t\t\t\t\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\t\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\t\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\'/.exec(ar[ix]) )  { \r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\"); \r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\treturn JSON.stringify(JSON.parse(text), null, 0); \r\n\t\t\t\t\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\t\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n\r\n"]}
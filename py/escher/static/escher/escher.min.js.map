{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/Behavior.js","js/src/Brush.js","js/src/BuildInput.js","js/src/Builder.js","js/src/CallbackManager.js","js/src/Canvas.js","js/src/CobraModel.js","js/src/DataMenu.js","js/src/DirectionArrow.js","js/src/Draw.js","js/src/KeyManager.js","js/src/Map.js","js/src/PlacedDiv.js","js/src/QuickJump.js","js/src/Scale.js","js/src/ScaleEditor.js","js/src/SearchBar.js","js/src/SearchIndex.js","js/src/Settings.js","js/src/SettingsMenu.js","js/src/TextEditInput.js","js/src/UndoStack.js","js/src/ZoomContainer.js","js/src/build.js","js/src/complete.ly.js","js/src/data_styles.js","js/src/main.js","js/src/static.js","js/src/ui.js","js/src/utils.js","node_modules/baconjs/dist/Bacon.js","node_modules/filesaver/node_modules/mkdirp/index.js","node_modules/filesaver/node_modules/safename/safename.js","node_modules/filesaver/src/Filesaver.js","node_modules/filesaver/src/changename.js","node_modules/grunt-browserify/node_modules/browserify/lib/_empty.js","node_modules/grunt-browserify/node_modules/browserify/node_modules/path-browserify/index.js","node_modules/grunt-browserify/node_modules/browserify/node_modules/process/browser.js","node_modules/underscore/underscore.js","node_modules/vkbeautify/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","escher","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","map","undo_stack","empty_behavior","rotation_mode_enabled","rotation_drag","d3","behavior","drag","selectable_mousedown","text_label_mousedown","text_label_click","selectable_drag","node_mouseover","node_mouseout","label_mousedown","label_mouseover","label_mouseout","bezier_drag","bezier_mouseover","bezier_mouseout","reaction_label_drag","node_label_drag","turn_everything_on","toggle_selectable_click","toggle_selectable_drag","toggle_label_drag","toggle_label_mousedown","turn_everything_off","toggle_rotation_mode","on_off","show_center","sel","selectAll","data","enter","append","attr","center","x","y","on","cur","utils","d3_transform_catch","new_loc","event","dx","translate","dy","bind","current","parseFloat","style","hide_center","select","average_location","nodes","xs","ys","node_id","node","undefined","push","mean","selection_node","selection_background","callback_manager","run","selected_nodes","get_selected_nodes","Object","keys","console","warn","selected_node_ids","reactions","beziers","start_fn","d","sourceEvent","stopPropagation","drag_fn","angle","total_angle","updated","build","rotate_nodes","draw_these_nodes","node_ids","draw_these_reactions","reaction_ids","end_fn","undo_fn","these_nodes","forEach","id","redo_fn","center_fn","_get_generic_angular_drag","selectable_click","defaultPrevented","select_selectable","parentNode","classed","toggle_text_label_edit","text_edit_mousedown","selection","coords_a","coords","preventDefault","mouse","_get_selectable_drag","_get_bezier_drag","label_drag","_get_reaction_label_drag","_get_node_label_drag","toggle_bezier_drag","String","turn_off_drag","combine_nodes_and_draw","fixed_node_id","dragged_node_id","dragged_node","fixed_node","updated_segment_objs","connected_segments","segment_obj","segment","reaction_id","segments","segment_id","from_node_id","to_node_id","error","clone","delete_node_data","draw_everything","the_timeout","total_displacement","node_ids_to_drag","text_label_ids_to_drag","move_label","text_label_id","displacement","text_label","text_labels","indexOf","__data__","bigg_id","node_group","setTimeout","insertBefore","firstChild","grabbed","get_selected_node_ids","selected_text_label_ids","get_selected_text_label_ids","c_plus_c","move_node_and_dependents","unique_concat","draw_these_text_labels","node_to_combine_array","each","saved_dragged_node","segment_objs_moved_to_combine","updated_reactions","filter","saved_displacement","saved_node_ids","saved_text_label_ids","saved_reaction_ids","c_times_scalar","clearTimeout","move_bezier","bez","bezier_id","dragging","bezier","draw_these_beziers","_get_generic_drag","reaction","label_x","label_y","relative_to_selection","rel","location","saved_d","saved_location","get_center","angle_for_event","saved_angle","saved_center","Behavior","make_class","prototype","is_enabled","insert_after","brush_sel","insert_before_node","nextSibling","enabled","toggle","selection_brush","setup_selection_brush","remove","selectable_selection","size_and_location","canvas","width","height","brush_fn","svg","brush","scale","identity","domain","key_manager","shift_key_on","held_keys","shift","extent","target","sx","sy","clear","Brush","zoom_container","settings","new_sel","placed_div","PlacedDiv","hide","c","completely","backgroundColor","input","text","hide_dropdown","default_angle","direction_arrow","DirectionArrow","set_rotation","setup_map_callbacks","setup_zoom_callbacks","target_coords","set","selected_node","is_active","reload","hide_target","count","place_at_selected","is_visible","toggle_start_reaction_listener","show_dropdown","reload_at_selected","set_status","show","escape","add_escape_listener","blur","hideDropDown","place","repaint","setText","focus","deselect_text_labels","select_single_node","set_location","starting_from_scratch","already_drawn","drawn_id","cobra_model","show_names","get_option","allow_duplicates","options","cobra_reactions","cobra_metabolites","metabolites","has_data_on_reactions","selected_m_name","reaction_data","reaction_data_styles","name","bold_mets_in_str","str","mets","replace","RegExp","join","reaction_suggestions","reaction_name","show_r_name","met_bigg_id","html","data_string","matches","show_met_names","met_id","key","show_gene_names","genes","g_obj","reaction_string","CobraModel","build_reaction_string","reversibility","lower_bound","upper_bound","concat","sort_fn","Math","abs","toLowerCase","sort","complete","check_and_build","new_reaction_from_scratch","get_rotation","new_reaction_for_metabolite","onEnter","onChange","start_reaction_listener","deselect_nodes","show_target","BuildInput","map_data","model_data","embedded_css","datum","set_options","menu","scroll_behavior","use_3d_transform","enable_editing","enable_keys","enable_search","fill_screen","zoom_to_element","starting_reaction","never_ask_before_quit","unique_map_id","primary_metabolite_radius","secondary_metabolite_radius","marker_radius","gene_font_size","hide_secondary_metabolites","show_gene_reaction_rules","hide_all_labels","reaction_styles","reaction_compare_style","reaction_scale","type","color","size","reaction_no_data_color","reaction_no_data_size","gene_data","and_method_in_gene_reaction_rule","metabolite_data","metabolite_styles","metabolite_compare_style","metabolite_scale","metabolite_no_data_color","metabolite_no_data_size","identifiers_on_map","highlight_missing","allow_building_duplicate_reactions","first_load_callback","check_for_parent_tag","set_option","option","new_value","conditional_options","Settings","streams","onValue","val","has","reduce","has_found","scale_el","set_conditional","CallbackManager","load_model","load_map","_update_data","status_bus","new_behavior","set_scroll_behavior","set_use_3d_transform","draw_all_nodes","draw_all_reactions","should_update_data","from_cobra_json","remove_child_nodes","ZoomContainer","zoomed_sel","Map","from_data","build_input","text_edit_input","TextEditInput","_setup_modes","menu_div","search_bar_div","button_div","search_bar","SearchBar","search_index","settings_bar","settings_div","SettingsMenu","slice","_get_keys","assigned_keys","input_list","update","_setup_menu","_setup_simple_zoom_buttons","element_id","zoom_to_reaction","zoom_to_node","zoom_extent_canvas","get_size","start_coords","zoom_extent_nodes","_setup_status","_setup_quick_jump","zoom_mode","view_mode","_setup_confirm_before_exit","_set_mode","mode","_toggle_direction_buttons","toggle_pan_drag","toggle_resize","select_none","build_mode","brush_mode","rotate_mode","text_mode","set_reaction_data","set_gene_data","clear_gene_reaction_rules","set_metabolite_data","update_model","update_map","kind","should_draw","make_gene_data_object","all_reactions","extend","data_styles","import_and_check","met_data_object","reaction_data_object","gene_data_object","update_metabolite_data","update_reaction_data","apply_metabolite_data_to_map","apply_reaction_data_to_map","apply_gene_data_to_map","update_model_timer","delay","apply_metabolite_data","apply_reaction_data","apply_gene_data","menu_selection","button_selection","load_map_for_file","check_map","map_name","load_model_for_file","load_reaction_data_for_file","load_metabolite_data_for_file","load_gene_data_for_file","ui","dropdown_menu","button","save","key_text","assign","load","fn","pre_fn","failure_fn","save_svg","clear_map","model_menu","convert_map","clear_model","disable_model_clear_convert","dropdown","data_menu","load_reaction_data","accept_csv","clear_reaction_data","divider","clear_gene_data","clear_metabolite_data","disable_clears","edit_menu","undo","redo","toggle_primary","cycle_primary","select_all","invert_selection","view_menu","zoom_in","zoom_out","extent_nodes","extent_canvas","search","toggle_beziers","show_settings","button_panel","individual_button","icon","classes","tooltip","radio_button_group","direction_buttons","button_group","direction_arrow_left","direction_arrow_right","direction_arrow_up","direction_arrow_down","select_button","$","find","ids","this_id","b_id","status_bar","status","load_fn","new_map_name","quick_jump_path","callback","confirm","url","name_to_url","json","quick_jump","QuickJump","was_enabled","zoom","zoom_on","modifiers","control","load_metabolite_data","load_gene_data","ignore_with_input","delete","delete_selected","delete_del","toggle_selected_node_primary","cycle_primary_node","right","down","left","up","onbeforeunload","Builder","callbacks","this_arg","_","isUndefined","pass_args","Array","arguments","a_name","split_name","split","apply","resize_enabled","setup","stop_propagation","transform_string","current_transform","tr","ldragresize","oldx","min","dragbar_width","mouse_node","mouse_node_mult","rect","top","bottom","rdragresize","dragx","max","tdragresize","oldy","bdragresize","dragy","drag_right","origin","drag_left","drag_top","drag_bottom","Canvas","stoichiometries","is_reversible","format","number","reactant_bits","product_bits","the_metabolite","coefficient","from_exported_data","model","the_id","gene_ids","genes_for_gene_reaction_rule","gene_reaction_rule","gene_id","gene","met","cofactors","styles","compare_style","apply_reaction_data_to_reactions","apply_metabolite_data_to_nodes","gene_data_obj","apply_gene_data_to_reactions","model_for_export","load_with_files","files","select_sel","update_callback","addEventListener","load_datafile","value","file","this_file","load_the_file","list","getdatafiles","datafiles","empty","path_for_arrow","arrow_container","arrow","_setup_drag","transform","rotate","rotation","displace_rotation","d_rotation","b","d_angle","to_degrees","create_membrane","enter_selection","update_membrane","update_selection","create_reaction","create_reaction_label","update_reaction","drawn_nodes","defs","update_reaction_label","draw_a_nested_object","create_segment","update_segment","group","identifiers_in_tooltip","label_mousedown_fn","label_mouseover_fn","label_mouseout_fn","label","all_genes_g","show_gene_string","gene_string","show_gene_reaction_rule","gene_string_for_data","gene_g","exit","should_size","should_color","no_data_size","no_data_color","primary_r","secondary_r","get_arrow_size","reaction_size","isNaN","get_disp","arrow_size","node_is_primary","arrow_height","start","end","b1","b2","disp","from_node_coefficient","direction","displaced_coords","to_node_coefficient","curve","show_missing","reaction_color","arrowheads","node_type","get_angle","loc","show_arrowhead_flux","stoichiometry_labels","labels","disp_factor","rotate_coords","create_bezier","update_bezier","show_beziers","drag_behavior","mouseover","mouseout","drawn_reactions","seg_data","segment_d","create_node","metabolite_groups","update_node","has_data_on_nodes","mousedown_fn","click_fn","mouseover_fn","mouseout_fn","label_drag_behavior","marker_r","metabolite_data_styles","no_data_style","node_label","should_scale","metabolite_size","should_color_data","metabolite_color","create_text_label","update_text_label","reaction_arrow_displacement","displace","check_undefined","new_x","new_y","hyp","distance","Draw","reset_held_keys","h","command","ctrl_equals_cmd","unique_string","toggle_modifiers","mod","held","kc","k","check_key","pressed","modifier_keys","command_right","err","log","keyCode","meaningless","input_visible","key_id","assigned_key","add_enter_listener","add_key_listener","event_name","KeyManager","css","canvas_size_and_loc","map_id","map_description","generate_map_id","setup_defs","setup_containers","largest_ids","Scale","calc_data_stats","connect_to_settings","get_data_statistics","UndoStack","draw","SearchIndex","beziers_enabled","rotation_on","get_largest_id","obj","current_largest","parseInt","Date","now","toString","n_id","insert","r_id","g_id","segments_to_delete","s_id","from_node","to_node","midpoint","c_minus_c","label_id","new_beziers_for_reactions","largest_segment_id","reset_containers","time","_status_timer","has_cobra_model","draw_all_text_labels","draw_beziers","clear_deleted","draw_all_beziers","clear_deleted_reactions","reaction_subset","object_slice_for_ids_ref","update_fn","draw_an_object","bezier_ids","bezier_ids_for_reaction_ids","clear_deleted_segments","clear_deleted_beziers","clear_deleted_nodes","node_subset","create_fn","text_label_ids","clear_deleted_text_labels","text_label_subset","bezier_subset","hide_beziers","has_data","data_statistics","on_array","array","same","vals","quartiles","funcs","ar","new_val","get_selected_text_labels","selected_text_labels","select_metabolite_with_id","node_selection","selected","classable_node","classable_selection","node_count","out","select_text_label","text_label_selection","p","delete_selectable","segments_and_reactions_for_nodes","segment_objs_w_segments","saved_nodes","saved_segment_objs_w_segments","saved_reactions","saved_text_labels","delete_and_draw","segment_objs","delete_segment_data","delete_reaction_data","delete_text_label_data","changed_r_scale","changed_m_scale","extend_nodes","extend_reactions","reaction_ids_to_draw","seg_id","seg_o","new_beziers_for_segments","scale_changed","found","so","bez_id","bezier_id_for_segment_id","extend_and_draw_metabolite","new_nodes","selected_node_id","cobra_reaction","metabolite_id","metabolite","label_d","reaction_redo","reaction_undo","new_reactions","reaction_bigg_id","apply_undo_redo","extend_and_draw_reaction","new_beziers","new_coords","translate_off_screen","new_reaction","saved_beziers","reactions_to_draw","connected_anchor_ids","segment_info","connected_anchor_id","related_node_ids","conn_met_id","conn_node","a_selected_node_id","nodes_to_draw","last_i","last_node","last_is_primary","last_coords","last_segment","last_segment_info","primary_node_id","last_bezier","related_node_id","this_is_primary","these_coords","this_segment_info","this_segment","this_bezier","old_connected_segments","new_connected_segments","go","reaction_ids_to_draw_o","these_reactions","segment_ids_for_reactions","segment_obj_w_segment","these_ids","new_text_label","edit_text_label","saved_value","edit_and_draw","record_id","margin","_zoom_extent","new_zoom","new_pos","go_to","zoom_to_text_label","highlight_reaction","highlight","highlight_node","highlight_text_label","download_json","map_for_export","homepage","schema","new_segment","attrs","new_node","t_id","canvas_el","new_canvas_el","window_scale","window_translate","mouse_node_size_and_trans","w","hidden_sel","download_svg","reactions_not_found","reaction_attrs","met_nodes_not_found","metabolite_attrs","model_reaction_id","model_reaction","model_metabolite_id","model_metabolite","n_reactions_not_found","n_met_nodes_not_found","status_delay","div","map_size","load_callback","selector","url_comp","parse_url_components","default_value","view_options","change_map","success","replace_state_for_map_name","reset_selection","selectedIndex","href","history","replaceState","linear","x_size","y_size","clamp","scale_path","path","x_fn","y_fn","match","p0","p1","p2","reg","p3","p4","p5","p6","scale_decimals","scale_fn","precision","sort_scale","stats","sorted","v","color_range","size_range","range","update_metabolite","changed","grad_id","input_width","input_height","data_not_loaded","input_label_group","nd","no_data_container","add_group","trash_group","input_group","gradient","pickers_group","no_data","update_no_data","bar_w","bar_h","x_disp","_data_not_loaded","sc","sc_size","bring_to_front","d2","get_this_val","set_scale","sorted_domain","frac","stops","pickers","new_d","buf","floor","invert","trashes","add","last_ind","j","th","inputs","disabled","stat_types","opts","sind","label_w","ins","ScaleEditor","container","previous","next","counter","results","on_input_fn","debounce","index","record","overwrite","check_record","substring","re","exec","bacon","Bus","force_update_bus","Observable","convert_to_conditional_stream","_convert_to_conditional_stream","force_update_with_bus","_force_update_with_bus","busses","_create_conditional_setting","bus","stream","status_stream","is_not_hold_event","not","toProperty","is_not_first_clear","scan","is_not_first_hold","combined","combineAsArray","flatMap","fromArray","unheld","merge","initial_value","hold_changes","abandon_changes","accept_changes","toggle_abs_and_apply_data","background","box","view_gui","rse","style_gui","mse","abs_callback","cell","style_cells","get_styles","checked","option_name","string","boolean_options","pan","active_target","_accept_changes","_add_and_edit","stack_size","stack","oldest","newest","end_of_stack","top_of_stack","_incr","_decr","css3_transform_container","_scroll_behavior","_use_3d_transform","_pan_drag_on","_zoom_behavior","_zoom_timeout","_svg_scale","_svg_translate","_update_scroll","contains","wheel_fn","ev","sensitivity","returnValue","get_directional_disp","wheel_delta","delta","the_delt","new_translate","wheelDeltaX","deltaX","wheelDeltaY","deltaY","isNull","translate_array","_go_to_3d","_go_to_svg","svg_scale","svg_translate","n_scale","n_translate","tranform","_clear_3d","defer","zoom_by","amount","PI","new_reaction_id","selected_node_coords","reaction_length","main_axis","anchor_distance","reactant_ranks","product_ranks","reactant_count","product_count","reaction_is_reversed","formula","new_metabolite","carbons","Infinity","decompartmentalize","max_rank","old","primary_reactant_index","primary_product_index","is_primary","new_anchors","anchors","dis","anchor_ids","new_id","general_node_type","new_anchor_groups","from_id","to_id","new_segment_id","reverse_flux","primary_index","met_loc","calculate_new_metabolite_coordinates","new_node_id","circle","Boolean","metabolites_array","rotate_around","coord","updated_node_ids","updated_reaction_ids","move_node_and_labels","tbez","is_reversed","ds","draw_at_index","b1_strength","b2_strength","w2","secondary_dis","num_slots","de","reaction_axis","new_label","seg_bez","these","config","calculateWidthForText","spacer","document","createElement","visibility","position","outline","padding","border","whiteSpace","fontSize","fontFamily","fontWeight","body","appendChild","innerHTML","getBoundingClientRect","get_document","get_window","promptInnerHTML","hintColor","dropDownBorderColor","dropDownZIndex","dropDownOnHoverBackgroundColor","txtInput","spellcheck","txtHint","cloneNode","borderColor","boxShadow","verticalAlign","wrapper","prompt","overflow","marginLeft","dropDown","textAlign","zIndex","cursor","borderStyle","borderWidth","overflowX","overflowY","createDropDownController","elem","rows","ix","oldIndex","current_row","onMouseOver","onMouseOut","onDblClick","onmouseselection","refresh","token","vph","innerHeight","documentElement","clientHeight","distanceToTop","distanceToBottom","divRow","onmouseover","onmouseout","onmousedown","ondblclick","__hint","rs","display_limit","maxHeight","move","step","get_current_row","dropDownController","leftSide","registerOnTextChangeOldValue","get_hint","onArrowDown","onArrowUp","onTab","startFrom","hint","getText","optionsLength","registerOnTextChange","txt","handler","keyDownHandler","m","hasTextChanged","align_gene_data_to_reactions","aligned","null_val","this_gene_data","check","array_to_object","float_for_data","check_finite","isFinite","take_abs","diff","fold","log2_fold","_parse_float_or_null","fs","reverse_flux_for_data","rule","gene_values","null_or_d","out_text","genes_found","replace_gene_in_rule","RETURN_ARG","new_str","any_num","EMPTY_LINES","TRAILING_NEWLINE","result","text_for_data","csv_converter","csv_rows","converted","row","AND_OR","ALL_PARENS","unique_strings_array","evaluate_gene_reaction_rule","curr_val","all_null","new_curr_val","EXCESS_PARENS","OR_EXPRESSION","nums","OR","sum","AND_EXPRESSION","AND","num","Number","escape_reg_exp","ESCAPE_REG","space_or_par_start","space_or_par_finish","escaped","r_data","DataMenu","static","load_map_model_from_url","map_download_url","model_download_url","local_index","opt","map_path","_get_path","model_name","model_path","encodeURIComponent","organism","set_button","s2","pull_right","ul","li","link","set_json_or_csv_input_button","set_json_input_button","post_fn","load_json","click","load_json_or_csv","_check_filesaver","Blob","alert","defaults","must_be_float","has_key","hasChildNodes","removeChild","lastChild","load_css","css_path","ends_with","suffix","load_files","files_to_load","final_callback","remaining","isInternal","constructor","args","instance","container_sel","parent_node_selector","children_selector","object","id_key","create_function","update_function","exit_function","draw_object","make_array_ref","object_data_key","make_array","it","compare_arrays","a1","a2","arr","column","nk","copy","len","hasOwnProperty","obj1","obj2","attrname","arrays","new_array","func","wait","immediate","timeout","context","later","callNow","object_slice_for_ids","subset","coords1","coords2","scalar","JSON","stringify","blob","saveAs","File","FileReader","FileList","reader","onload","parse","onabort","onerror","readAsText","debug_event","onload_function","errors","csv","parseRows","svg_sel","do_beautify","xml","XMLSerializer","serializeToString","vkbeautify","rotate_coords_recursive","coords_array","rot","cos","sin","denominator","numerator","atan","radians","point","gamma","atan2","beta","sqrt","pow","names","compartmentalize","compartment_id","no_compartment","avg","median","half","random_characters","possible","charAt","random","el","tag","tagName","download_url","the_window","query","vars","pair","decodeURIComponent","ownerDocument","defaultView","transform_attr","_toConsumableArray","isArray","arr2","from","Source","obs","sync","lazy","queue","ConsumingSource","BufferingSource","Desc","method","Some","Event","eventIdCounter","Next","valueF","eager","isFunction","_isNext","valueInternal","Initial","End","desc","idCounter","initialDesc","CompositeUnsubscribe","ss","unsubscribe","unsubscribed","subscriptions","starting","Dispatcher","_subscribe","_handleEvent","subscribe","handleEvent","pushing","ended","prevError","unsubSrc","EventStream","assertFunction","dispatcher","registerObs","PropertyDispatcher","property","None","currentValueRootId","propertyEnded","Property","unsubAll","subscribeAll","guardedSink","sink","Bacon","valueAndEnd","endEvent","_slice","version","Exception","nop","former","cloneArray","assert","message","condition","assertObservableIsProperty","_isObservable","_isProperty","assertEventStream","_isEventStream","assertObservable","isObservable","assertArray","assertNoArguments","prop","inherit","child","parent","hasProp","ctor","indexWhere","head","always","negate","tail","filtered","toArray","last","all","any","without","splice","seed","cached","_isNone","me","internals","recursionDepth","UpdateBarrier","rootEvent","waiterObs","waiters","afters","aftersIndex","flushed","afterTransaction","whenDoneWith","obsWaiters","flush","flushWaiters","deps","obsId","flushDepsOf","dep","internalDeps","inTransaction","after","currentEventId","wrappedSubscribe","unsubd","shouldUnsub","doUnsub","unsub","reply","noMore","hasWaiters","_isSource","markEnded","consume","mayHave","hasAtLeast","flatten","values","isTrigger","fromObservable","_isDesc","findDeps","describe","ref","_len","_key","withDesc","withMethodCallSupport","wrapped","_len2","_key2","methodName","makeFunctionArgs","makeFunction_","partiallyApplied","applied","_len3","_key3","toSimpleExtractor","fieldValue","toFieldExtractor","parts","partFuncs","isFieldKey","_len4","_key4","makeFunction","convertArgsToFunction","sampled","sampledBy","_ref","_ref2","toCombinator","toFieldKey","_isSome","getOrElse","get","isDefined","inspect","toOption","more","_isEvent","isEvent","isEnd","isInitial","isNext","isError","hasValue","fmap","_isInitial","toNext","initialEvent","nextEvent","toEvent","subscribeInternal","onValues","onError","onEnd","_name","withDescription","subscription","_this2","unsubMe","iterable","hasSubscribers","removeSub","pushIt","pushToSubscriptions","tmp","sub","unsubscribeFromSource","_this","initValue_","initValue","initSent","subbed","sendInit","toEventStream","withHandler","never","when","usage","sources","pats","patterns","patSources","constantToFunction","pat","ixs","triggerFound","needsBarrier","containsDuplicateDeps","resultStream","triggers","ends","i1","cannotSync","source","cannotMatch","nonFlattened","trigger","part","flushLater","flushWhileTriggers","pop","events","i2","_p","observables","state","checkObservable","groupSimultaneous","_len5","_key5","_len6","_key6","maybeSubSource","_this3","dispatchingId","valId","changes","_this4","_this5","constant","fromBinder","binder","eventTransformer","unbound","shouldUnbind","unbind","unbinder","_len7","_key7","_len8","_key8","argumentsToObservables","argumentsToObservablesAndFunction","_len9","_key9","_len10","_key10","combineWith","_argumentsToObservablesAndFunction","combine","other","combinator","withStateMachine","initState","fromF","newState","outputs","output","equals","isNone","skipDuplicates","isEqual","prev","awaiting","and","or","scheduler","setInterval","clearInterval","getTime","bufferWithTime","bufferWithTimeOrCount","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","schedule","onInput","onFlush","scheduled","valuesToPush","_this6","delayMs","_this7","_len11","_key11","once","unsubRight","unsubLeft","flatMap_","makeSpawner","flatMapFirst","makeObservable","root","firstOnly","limit","rootDep","childDeps","composite","spawn","checkQueue","checkEnd","__","unsubRoot","flatMapWithConcurrencyLimit","_len12","_key12","flatMapConcat","sender","bufferingThrottle","minimumInterval","newSink","subscribeInput","_this8","unsubscribeInput","plug","_this9","liftCallback","_len13","_key13","fromCallback","_len14","_key14","fromNodeCallback","_len15","_key15","combineTemplate","template","ctxStack","setValue","applyStreamValue","constantValue","mkContext","pushContext","newContext","compile","popContext","compileTemplate","rootContext","addPropertyInitValueToStream","justInitValue","mapEnd","skipErrors","takeUntil","stopper","endMarker","_event$value","flatMapLatest","delayChanges","debounceImmediate","decode","cases","resultProperty","_this10","acc","initHandled","prevTuple","tuple","doAction","doEnd","doError","doLog","_len16","_key16","endOnError","_len17","_key17","take","first","mapError","flatMapError","sampler","thisSource","samplerSource","sample","interval","_len18","_key18","eventMethods","findHandlerMethods","methodPair","addListener","fromEventTarget","eventName","_findHandlerMethods","fromEvent","fromPoll","poll","fromPromise","promise","abort","bound","then","done","groupBy","keyF","limitF","src","similar","limited","pushNeeded","holdWhen","valve","onHold","bufferedValues","subscribed","endIfBothEnded","toSend","asEventStream","_this11","off","jQuery","Zepto","lastEvent","_len19","_key19","mergeAll","smartSink","unsubBoth","sinks","repeatedly","repeat","generator","flag","subscribeNext","retry","retries","maxRetries","isRetryable","finished","valueStream","retriesDone","pause","sequentially","skip","skipUntil","starter","started","skipWhile","ok","_len20","_key20","slidingWindow","minValues","spies","running","spy","startWith","takeWhile","_len21","_key21","throttle","firstToPromise","PromiseCtr","_this12","Promise","resolve","reject","toPromise","initial","lateBindFirst","_len23","_key23","_len22","_key22","Function","zipAsArray","_len24","_key24","zipWith","_len25","_key25","_len26","_key26","observablesAndFunction","zip","mkdirP","made","xfs","_0777","process","umask","cb","mkdir","er","dirname","stat","er2","isDirectory","mkdirp","mkdirSync","err0","statSync","err1","diacritics","base","letters","diaMap","removeDiacritics","newStr","transformName","space","safename","low","middle","dot","changeName","oldPath","newPath","rename","filename","filepath","checkSafeName","route","safenames","checker","folder","existsSync","folders","Filesaver","folderPath","exists","put","addOne","hasSuffix","splitted","newName","basename","ext","finalName","normalizeArray","allowAboveRoot","unshift","res","splitPathRe","splitPath","resolvedPath","resolvedAbsolute","cwd","TypeError","normalize","isAbsolute","trailingSlash","substr","paths","relative","to","trim","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dir","extname","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","fun","noop","nextTick","title","browser","env","argv","versions","removeListener","removeAllListeners","emit","binding","chdir","createReduce","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","create","Ctor","_wrapped","VERSION","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","every","some","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","computed","lastComputed","shuffle","rand","shuffled","sortBy","criteria","indexBy","countBy","partition","pass","fail","rest","drop","compact","shallow","strict","startIndex","isArguments","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","unzip","findLastIndex","high","mid","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","bindAll","memoize","hasher","cache","address","leading","trailing","timestamp","wrap","compose","times","before","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","functions","methods","extendOwn","pick","oiteratee","omit","props","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","noConflict","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","test","unescape","fallback","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","offset","variable","render","argument","chain","_chain","mixin","valueOf","toJSON","createShiftArr","isSubquery","parenthesisLevel","split_sql","tab","inComment","deep","sql","ar_by_quote","xmlmin","preserveComments","jsonmin","cssmin","sqlmin"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzhxoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpfvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvaxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtbrizmtpl0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5gfile":"escher.min.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/** Behavior. Defines the set of click and drag behaviors for the map, and keeps track\n of which behaviors are activated.\n\n A Behavior instance has the following attributes:\n\n my_behavior.rotation_drag, my_behavior.text_label_mousedown,\n my_behavior.text_label_click, my_behavior.selectable_mousedown,\n my_behavior.selectable_click, my_behavior.selectable_drag,\n my_behavior.node_mouseover, my_behavior.node_mouseout,\n my_behavior.label_mousedown, my_behavior.label_mouseover,\n my_behavior.label_mouseout, my_behavior.bezier_drag,\n my_behavior.bezier_mouseover, my_behavior.bezier_mouseout,\n my_behavior.reaction_label_drag, my_behavior.node_label_drag,\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar build = require('./build');\n\n\nvar Behavior = utils.make_class();\n// methods\nBehavior.prototype = {\n    init: init,\n    toggle_rotation_mode: toggle_rotation_mode,\n    turn_everything_on: turn_everything_on,\n    turn_everything_off: turn_everything_off,\n    // toggle\n    toggle_selectable_click: toggle_selectable_click,\n    toggle_text_label_edit: toggle_text_label_edit,\n    toggle_selectable_drag: toggle_selectable_drag,\n    toggle_label_drag: toggle_label_drag,\n    toggle_label_mousedown: toggle_label_mousedown,\n    toggle_bezier_drag: toggle_bezier_drag,\n    // util\n    turn_off_drag: turn_off_drag,\n    // get drag behaviors\n    _get_selectable_drag: _get_selectable_drag,\n    _get_bezier_drag: _get_bezier_drag,\n    _get_reaction_label_drag: _get_reaction_label_drag,\n    _get_node_label_drag: _get_node_label_drag,\n    _get_generic_drag: _get_generic_drag,\n    _get_generic_angular_drag: _get_generic_angular_drag\n};\nmodule.exports = Behavior;\n\n\n// definitions\nfunction init(map, undo_stack) {\n    this.map = map;\n    this.undo_stack = undo_stack;\n\n    // make an empty function that can be called as a behavior and does nothing\n    this.empty_behavior = function() {};\n\n    // rotation mode operates separately from the rest\n    this.rotation_mode_enabled = false;\n    this.rotation_drag = d3.behavior.drag();\n\n    // behaviors to be applied\n    this.selectable_mousedown = null;\n    this.text_label_mousedown = null;\n    this.text_label_click = null;\n    this.selectable_drag = this.empty_behavior;\n    this.node_mouseover = null;\n    this.node_mouseout = null;\n    this.label_mousedown = null;\n    this.label_mouseover = null;\n    this.label_mouseout = null;\n    this.bezier_drag = this.empty_behavior;\n    this.bezier_mouseover = null;\n    this.bezier_mouseout = null;\n    this.reaction_label_drag = this.empty_behavior;\n    this.node_label_drag = this.empty_behavior;\n    this.turn_everything_on();\n}\nfunction turn_everything_on() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(true);\n    this.toggle_selectable_drag(true);\n    this.toggle_label_drag(true);\n    this.toggle_label_mousedown(true);\n}\nfunction turn_everything_off() {\n    /** Toggle everything except rotation mode and text mode.\n\n     */\n    this.toggle_selectable_click(false);\n    this.toggle_selectable_drag(false);\n    this.toggle_label_drag(false);\n    this.toggle_label_mousedown(false);\n}\n\nfunction toggle_rotation_mode(on_off) {\n    /** Listen for rotation, and rotate selected nodes.\n\n     */\n    if (on_off===undefined) {\n        this.rotation_mode_enabled = !this.rotation_mode_enabled;\n    } else {\n        this.rotation_mode_enabled = on_off;\n    }\n\n    var selection_node = this.map.sel.selectAll('.node-circle'),\n        selection_background = this.map.sel.selectAll('#canvas');\n\n    if (this.rotation_mode_enabled) {\n        this.map.callback_manager.run('start_rotation');\n\n        var selected_nodes = this.map.get_selected_nodes();\n        if (Object.keys(selected_nodes).length == 0) {\n            console.warn('No selected nodes');\n            return;\n        }\n\n        // show center\n        this.center = average_location(selected_nodes);\n        show_center.call(this);\n\n        // this.set_status('Drag to rotate.');\n        var map = this.map,\n            selected_node_ids = Object.keys(selected_nodes),\n            reactions = this.map.reactions,\n            nodes = this.map.nodes,\n            beziers = this.map.beziers;\n\n        var start_fn = function(d) {\n            // silence other listeners\n            d3.event.sourceEvent.stopPropagation();\n        },\n            drag_fn = function(d, angle, total_angle, center) {\n                var updated = build.rotate_nodes(selected_nodes, reactions,\n                                                 beziers, angle, center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            end_fn = function(d) {},\n            undo_fn = function(d, total_angle, center) {\n                // undo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, -total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            redo_fn = function(d, total_angle, center) {\n                // redo\n                var these_nodes = {};\n                selected_node_ids.forEach(function(id) {\n                    these_nodes[id] = nodes[id];\n                });\n                var updated = build.rotate_nodes(these_nodes, reactions,\n                                                 beziers, total_angle,\n                                                 center);\n                map.draw_these_nodes(updated.node_ids);\n                map.draw_these_reactions(updated.reaction_ids);\n            },\n            center_fn = function() {\n                return this.center;\n            }.bind(this);\n        this.rotation_drag = this._get_generic_angular_drag(start_fn, drag_fn, end_fn,\n                                                            undo_fn, redo_fn, center_fn,\n                                                            this.map.sel);\n        selection_background.call(this.rotation_drag);\n        this.selectable_drag = this.rotation_drag;\n    } else {\n        // turn off all listeners\n        hide_center.call(this);\n        selection_node.on('mousedown.center', null);\n        selection_background.on('mousedown.center', null);\n        selection_background.on('mousedown.drag', null);\n        selection_background.on('touchstart.drag', null);\n        this.rotation_drag = null;\n        this.selectable_drag = null;\n    }\n\n    // definitions\n    function show_center() {\n        var s = this.map.sel.selectAll('#rotation-center')\n                .data([0]),\n            enter = s.enter()\n                .append('g').attr('id', 'rotation-center');\n\n        enter.append('path').attr('d', 'M-32 0 L32 0')\n            .attr('class', 'rotation-center-line');\n        enter.append('path').attr('d', 'M0 -32 L0 32')\n            .attr('class', 'rotation-center-line');\n\n        s.attr('transform', 'translate('+this.center.x+','+this.center.y+')')\n            .attr('visibility', 'visible');\n\n        s.call(d3.behavior.drag()\n               .on('drag', function(sel) {\n                   var cur = utils.d3_transform_catch(sel.attr('transform')),\n                       new_loc = [d3.event.dx + cur.translate[0],\n                                  d3.event.dy + cur.translate[1]];\n                   sel.attr('transform', 'translate('+new_loc+')');\n                   this.center = { x: new_loc[0], y: new_loc[1] };\n               }.bind(this, s)));\n        s.on('mouseover', function() {\n            var current = parseFloat(this.selectAll('path').style('stroke-width'));\n            this.selectAll('path').style('stroke-width', current * 2 + 'px');\n        }.bind(s));\n        s.on('mouseout', function() {\n            this.selectAll('path').style('stroke-width', null);\n        }.bind(s));\n    }\n    function hide_center(sel) {\n        this.map.sel.select('#rotation-center')\n            .attr('visibility', 'hidden');\n    }\n    function average_location(nodes) {\n        var xs = [], ys = [];\n        for (var node_id in nodes) {\n            var node = nodes[node_id];\n            if (node.x !== undefined)\n                xs.push(node.x);\n            if (node.y !== undefined)\n                ys.push(node.y);\n        }\n        return { x: utils.mean(xs),\n                 y: utils.mean(ys) };\n    }\n}\n\nfunction toggle_selectable_click(on_off) {\n    /** With no argument, toggle the node click on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_mousedown === null;\n    if (on_off) {\n        var map = this.map;\n        this.selectable_mousedown = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // this.parentNode.__data__.was_selected = d3.select(this.parentNode).classed('selected');\n            // d3.select(this.parentNode).classed('selected', true);\n        };\n        this.selectable_click = function(d) {\n            // stop propogation for the buildinput to work right\n            d3.event.stopPropagation();\n            // click suppressed. This DOES have en effect.\n            if (d3.event.defaultPrevented) return;\n            // turn off the temporary selection so select_selectable\n            // works. This is a bit of a hack.\n            // if (!this.parentNode.__data__.was_selected)\n            //     d3.select(this.parentNode).classed('selected', false);\n            map.select_selectable(this, d);\n            // this.parentNode.__data__.was_selected = false;\n        };\n        this.node_mouseover = function(d) {\n            d3.select(this).style('stroke-width', null);\n            var current = parseFloat(d3.select(this).style('stroke-width'));\n            if (!d3.select(this.parentNode).classed('selected'))\n                d3.select(this).style('stroke-width', current * 3 + 'px');\n        };\n        this.node_mouseout = function(d) {\n            d3.select(this).style('stroke-width', null);\n        };\n    } else {\n        this.selectable_mousedown = null;\n        this.selectable_click = null;\n        this.node_mouseover = null;\n        this.node_mouseout = null;\n        this.map.sel.select('#nodes')\n            .selectAll('.node-circle').style('stroke-width', null);\n    }\n}\n\nfunction toggle_text_label_edit(on_off) {\n    /** With no argument, toggle the text edit on mousedown on/off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     The backup state is equal to selectable_mousedown.\n\n     */\n    if (on_off===undefined) on_off = this.text_edit_mousedown == null;\n    if (on_off) {\n        var map = this.map,\n            selection = this.selection;\n        this.text_label_mousedown = function() {\n            if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // run the callback\n            var coords_a = utils.d3_transform_catch(d3.select(this).attr('transform')).translate,\n                coords = {x: coords_a[0], y: coords_a[1]};\n            map.callback_manager.run('edit_text_label', null, d3.select(this), coords);\n            d3.event.stopPropagation();\n        };\n        this.text_label_click = null;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', true);\n        // add the new-label listener\n        this.map.sel.on('mousedown.new_text_label', function(node) {\n            // silence other listeners\n            d3.event.preventDefault();\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            this.map.callback_manager.run('new_text_label', null, coords);\n        }.bind(this, this.map.sel.node()));\n    } else {\n        this.text_label_mousedown = this.selectable_mousedown;\n        this.text_label_click = this.selectable_click;\n        this.map.sel.select('#text-labels')\n            .selectAll('.label')\n            .classed('edit-text-cursor', false);\n        // remove the new-label listener\n        this.map.sel.on('mousedown.new_text_label', null);\n        this.map.callback_manager.run('hide_text_label_editor');\n    }\n}\n\nfunction toggle_selectable_drag(on_off) {\n    /** With no argument, toggle the node drag & bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.selectable_drag===this.empty_behavior;\n    if (on_off) {\n        this.selectable_drag = this._get_selectable_drag(this.map, this.undo_stack);\n        this.bezier_drag = this._get_bezier_drag(this.map, this.undo_stack);\n    } else {\n        this.selectable_drag = this.empty_behavior;\n        this.bezier_drag = this.empty_behavior;\n    }\n}\nfunction toggle_label_drag(on_off) {\n    /** With no argument, toggle the label drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_drag===this.empty_behavior;\n    if (on_off) {\n        this.reaction_label_drag = this._get_reaction_label_drag(this.map);\n        this.node_label_drag = this._get_node_label_drag(this.map);\n    } else {\n        this.reaction_label_drag = this.empty_behavior;\n        this.node_label_drag = this.empty_behavior;\n    }\n}\n\nfunction toggle_label_mousedown(on_off) {\n    /** With no argument, toggle the reaction label mousedown on or off.z\n\n     Arguments\n     ---------\n\n     on_off: A boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.label_mousedown==null;\n    if (on_off) {\n        var map = this.map;\n        // TODO turn this feature (reaction label selection) back on, but\n        // with correct shift key management\n        this.label_mousedown = function(d) {\n            // if (d3.event.defaultPrevented) return; // mousedown suppressed\n            // // select reaction/node\n            // d3.select(this.parentNode.parentNode)\n            //     .each(function(d) {\n            //         var node_ids = {};\n            //         for (var seg_id in d.segments) {\n            //             ['to_node_id', 'from_node_id'].forEach(function(n) {\n            //                 node_ids[d.segments[seg_id][n]] = true;\n            //             });\n            //         }\n            //         map.sel.selectAll('.selected').classed('selected', false);\n            //         map.sel.selectAll('.node')\n            //             .classed('selected', function(d) {\n            //                 return (d.node_id in node_ids);\n            //             });\n            //     });\n            // d3.event.stopPropagation();\n        };\n        this.label_mouseover = function(d) {\n            // d3.select(this).style('fill', 'rgb(56, 56, 184)');\n        };\n        this.label_mouseout = function(d) {\n            // d3.select(this).style('fill', null);\n        };\n    } else {\n        this.label_mousedown = null;\n        this.label_mouseover = null;\n        this.label_mouseout = null;\n        this.map.sel.select('.node-label,.reaction-label')\n            .style('fill', null);\n    }\n}\n\nfunction toggle_bezier_drag(on_off) {\n    /** With no argument, toggle the bezier drag on or off.\n\n     Pass in a boolean argument to set the on/off state.\n\n     */\n    if (on_off===undefined) on_off = this.bezier_drag===this.empty_behavior;\n    if (on_off) {\n        this.bezier_drag = this._get_bezier_drag(this.map);\n        this.bezier_mouseover = function(d) {\n            d3.select(this).style('stroke-width', String(3)+'px');\n        };\n        this.bezier_mouseout = function(d) {\n            d3.select(this).style('stroke-width', String(1)+'px');\n        };\n    } else {\n        this.bezier_drag = this.empty_behavior;\n        this.bezier_mouseover = null;\n        this.bezier_mouseout = null;\n    }\n}\n\nfunction turn_off_drag(sel) {\n    sel.on('mousedown.drag', null);\n    sel.on('touchstart.drag', null);\n}\n\nfunction _get_selectable_drag(map, undo_stack) {\n    /** Drag the selected nodes and text labels.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        the_timeout = null,\n        total_displacement = null,\n        // for nodes\n        node_ids_to_drag = null,\n        reaction_ids = null,\n        // for text labels\n        text_label_ids_to_drag = null,\n        move_label = function(text_label_id, displacement) {\n            var text_label = map.text_labels[text_label_id];\n            text_label.x = text_label.x + displacement.x;\n            text_label.y = text_label.y + displacement.y;\n        };\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners (e.g. nodes BELOW this one)\n        d3.event.sourceEvent.stopPropagation();\n        // remember the total displacement for later\n        // total_displacement = {};\n        total_displacement = {x: 0, y: 0};\n\n        // If a text label is selected, the rest is not necessary\n        if (d3.select(this).attr('class').indexOf('label') == -1) {\n            // Note that dragstart is called even for a click event\n            var data = this.parentNode.__data__,\n                bigg_id = data.bigg_id,\n                node_group = this.parentNode;\n            // Move element to back (for the next step to work). Wait 200ms\n            // before making the move, becuase otherwise the element will be\n            // deleted before the click event gets called, and selection\n            // will stop working.\n            the_timeout = setTimeout(function() {\n                node_group.parentNode.insertBefore(node_group,node_group.parentNode.firstChild);\n            }, 200);\n            // prepare to combine metabolites\n            map.sel.selectAll('.metabolite-circle')\n                .on('mouseover.combine', function(d) {\n                    if (d.bigg_id==bigg_id && d.node_id!=data.node_id) {\n                        d3.select(this).style('stroke-width', String(12)+'px')\n                            .classed('node-to-combine', true);\n                    }\n                }).on('mouseout.combine', function(d) {\n                    if (d.bigg_id==bigg_id) {\n                        map.sel.selectAll('.node-to-combine').style('stroke-width', String(2)+'px')\n                            .classed('node-to-combine', false);\n                    }\n                });\n        }\n    });\n    behavior.on(\"drag\", function(d) {\n        // if this node is not already selected, then select this one and\n        // deselect all other nodes. Otherwise, leave the selection alone.\n        if (!d3.select(this.parentNode).classed('selected'))\n            map.select_selectable(this, d);\n\n        // get the grabbed id\n        var grabbed = {};\n        if (d3.select(this).attr('class').indexOf('label')==-1) {\n            // if it is a node\n            grabbed['type'] = 'node';\n            grabbed['id'] = this.parentNode.__data__.node_id;\n        } else {\n            // if it is a text label\n            grabbed['type'] = 'label';\n            grabbed['id'] = this.__data__.text_label_id;\n        }\n\n        var selected_node_ids = map.get_selected_node_ids(),\n            selected_text_label_ids = map.get_selected_text_label_ids();\n        node_ids_to_drag = []; text_label_ids_to_drag = [];\n        // choose the nodes and text labels to drag\n        if (grabbed['type']=='node' &&\n            selected_node_ids.indexOf(grabbed['id'])==-1) {\n            node_ids_to_drag.push(grabbed['id']);\n        } else if (grabbed['type']=='label' &&\n                   selected_text_label_ids.indexOf(grabbed['id'])==-1) {\n            text_label_ids_to_drag.push(grabbed['id']);\n        } else {\n            node_ids_to_drag = selected_node_ids;\n            text_label_ids_to_drag = selected_text_label_ids;\n        }\n        reaction_ids = [];\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy };\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        node_ids_to_drag.forEach(function(node_id) {\n            // update data\n            var node = map.nodes[node_id],\n                updated = build.move_node_and_dependents(node, node_id,\n                                                         map.reactions,\n                                                         map.beziers,\n                                                         displacement);\n            reaction_ids = utils.unique_concat([reaction_ids, updated.reaction_ids]);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        text_label_ids_to_drag.forEach(function(text_label_id) {\n            move_label(text_label_id, displacement);\n            // remember the displacements\n            // if (!(node_id in total_displacement))  total_displacement[node_id] = { x: 0, y: 0 };\n            // total_displacement[node_id] = utils.c_plus_c(total_displacement[node_id], displacement);\n        });\n        // draw\n        map.draw_these_nodes(node_ids_to_drag);\n        map.draw_these_reactions(reaction_ids);\n        map.draw_these_text_labels(text_label_ids_to_drag);\n    });\n    behavior.on(\"dragend\", function() {\n        if (node_ids_to_drag===null) {\n            // Dragend can be called when drag has not been called. In this,\n            // case, do nothing.\n            total_displacement = null;\n            node_ids_to_drag = null;\n            text_label_ids_to_drag = null;\n            reaction_ids = null;\n            the_timeout = null;\n            return;\n        }\n        // look for mets to combine\n        var node_to_combine_array = [];\n        map.sel.selectAll('.node-to-combine').each(function(d) {\n            node_to_combine_array.push(d.node_id);\n        });\n        if (node_to_combine_array.length==1) {\n            // If a node is ready for it, combine nodes\n            var fixed_node_id = node_to_combine_array[0],\n                dragged_node_id = this.parentNode.__data__.node_id,\n                saved_dragged_node = utils.clone(map.nodes[dragged_node_id]),\n                segment_objs_moved_to_combine = combine_nodes_and_draw(fixed_node_id,\n                                                                       dragged_node_id);\n            undo_stack.push(function() {\n                // undo\n                // put the old node back\n                map.nodes[dragged_node_id] = saved_dragged_node;\n                var fixed_node = map.nodes[fixed_node_id],\n                    updated_reactions = [];\n                segment_objs_moved_to_combine.forEach(function(segment_obj) {\n                    var segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                    if (segment.from_node_id==fixed_node_id) {\n                        segment.from_node_id = dragged_node_id;\n                    } else if (segment.to_node_id==fixed_node_id) {\n                        segment.to_node_id = dragged_node_id;\n                    } else {\n                        console.error('Segment does not connect to fixed node');\n                    }\n                    // removed this segment_obj from the fixed node\n                    fixed_node.connected_segments = fixed_node.connected_segments.filter(function(x) {\n                        return !(x.reaction_id==segment_obj.reaction_id && x.segment_id==segment_obj.segment_id);\n                    });\n                    if (updated_reactions.indexOf(segment_obj.reaction_id)==-1)\n                        updated_reactions.push(segment_obj.reaction_id);\n                });\n                map.draw_these_nodes([dragged_node_id]);\n                map.draw_these_reactions(updated_reactions);\n            }, function () {\n                // redo\n                combine_nodes_and_draw(fixed_node_id, dragged_node_id);\n            });\n\n        } else {\n            // otherwise, drag node\n\n            // add to undo/redo stack\n            // remember the displacement, dragged nodes, and reactions\n            var saved_displacement = utils.clone(total_displacement),\n                // BUG TODO this variable disappears!\n                // Happens sometimes when you drag a node, then delete it, then undo twice\n                saved_node_ids = utils.clone(node_ids_to_drag),\n                saved_text_label_ids = utils.clone(text_label_ids_to_drag),\n                saved_reaction_ids = utils.clone(reaction_ids);\n            undo_stack.push(function() {\n                // undo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   utils.c_times_scalar(saved_displacement, -1));\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id,\n                               utils.c_times_scalar(saved_displacement, -1));\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            }, function () {\n                // redo\n                saved_node_ids.forEach(function(node_id) {\n                    var node = map.nodes[node_id];\n                    build.move_node_and_dependents(node, node_id, map.reactions,\n                                                   map.beziers,\n                                                   saved_displacement);\n                });\n                saved_text_label_ids.forEach(function(text_label_id) {\n                    move_label(text_label_id, saved_displacement);\n                });\n                map.draw_these_nodes(saved_node_ids);\n                map.draw_these_reactions(saved_reaction_ids);\n                map.draw_these_text_labels(saved_text_label_ids);\n            });\n        }\n\n        // stop combining metabolites\n        map.sel.selectAll('.metabolite-circle')\n            .on('mouseover.combine', null)\n            .on('mouseout.combine', null);\n\n        // clear the timeout\n        clearTimeout(the_timeout);\n\n        // clear the shared variables\n        total_displacement = null;\n        node_ids_to_drag = null;\n        text_label_ids_to_drag = null;\n        reaction_ids = null;\n        the_timeout = null;\n    });\n    return behavior;\n\n    // definitions\n    function combine_nodes_and_draw(fixed_node_id, dragged_node_id) {\n        var dragged_node = map.nodes[dragged_node_id],\n            fixed_node = map.nodes[fixed_node_id],\n            updated_segment_objs = [];\n        dragged_node.connected_segments.forEach(function(segment_obj) {\n            // change the segments to reflect\n            var segment;\n            try {\n                segment = map.reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segment ' + segment_obj.segment_id);\n                return;\n            }\n            if (segment.from_node_id==dragged_node_id) segment.from_node_id = fixed_node_id;\n            else if (segment.to_node_id==dragged_node_id) segment.to_node_id = fixed_node_id;\n            else {\n                console.error('Segment does not connect to dragged node');\n                return;\n            }\n            // moved segment_obj to fixed_node\n            fixed_node.connected_segments.push(segment_obj);\n            updated_segment_objs.push(utils.clone(segment_obj));\n            return;\n        });\n        // delete the old node\n        map.delete_node_data([dragged_node_id]);\n        // turn off the class\n        map.sel.selectAll('.node-to-combine').classed('node-to-combine', false);\n        // draw\n        map.draw_everything();\n        // return for undo\n        return updated_segment_objs;\n    }\n}\nfunction _get_bezier_drag(map) {\n    var move_bezier = function(reaction_id, segment_id, bez, bezier_id, displacement) {\n        var segment = map.reactions[reaction_id].segments[segment_id];\n        segment[bez] = utils.c_plus_c(segment[bez], displacement);\n        map.beziers[bezier_id].x = segment[bez].x;\n        map.beziers[bezier_id].y = segment[bez].y;\n    },\n        start_fn = function(d) {\n            d.dragging = true;\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        end_fn = function(d) {\n            d.dragging = false;\n        },\n        undo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_bezier(d.reaction_id, d.segment_id, d.bezier, d.bezier_id,\n                        displacement);\n            map.draw_these_reactions([d.reaction_id], false);\n            map.draw_these_beziers([d.bezier_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_reaction_label_drag(map) {\n    var move_label = function(reaction_id, displacement) {\n        var reaction = map.reactions[reaction_id];\n        reaction.label_x = reaction.label_x + displacement.x;\n        reaction.label_y = reaction.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.reaction_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_reactions([d.reaction_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.reaction_id, displacement);\n            map.draw_these_reactions([d.reaction_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\nfunction _get_node_label_drag(map) {\n    var move_label = function(node_id, displacement) {\n        var node = map.nodes[node_id];\n        node.label_x = node.label_x + displacement.x;\n        node.label_y = node.label_y + displacement.y;\n    },\n        start_fn = function(d) {\n        },\n        drag_fn = function(d, displacement, total_displacement) {\n            // draw\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        },\n        end_fn = function(d) {\n        },\n        undo_fn = function(d, displacement) {\n            move_label(d.node_id, utils.c_times_scalar(displacement, -1));\n            map.draw_these_nodes([d.node_id]);\n        },\n        redo_fn = function(d, displacement) {\n            move_label(d.node_id, displacement);\n            map.draw_these_nodes([d.node_id]);\n        };\n    return this._get_generic_drag(start_fn, drag_fn, end_fn, undo_fn,\n                                  redo_fn, this.map.sel);\n}\n\nfunction _get_generic_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn\n\n     undo_fn\n\n     redo_fn\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_displacement,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_displacement = { x: 0, y: 0 };\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] };\n\n        // remember the displacement\n        total_displacement = utils.c_plus_c(total_displacement, displacement);\n        drag_fn(d, displacement, total_displacement, location);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_displacement = utils.clone(total_displacement), // BUG TODO this variable disappears!\n            saved_location = { x: d3.mouse(rel)[0],\n                               y: d3.mouse(rel)[1] };\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_displacement, saved_location);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_displacement, saved_location);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n\nfunction _get_generic_angular_drag(start_fn, drag_fn, end_fn, undo_fn, redo_fn,\n                                   get_center, relative_to_selection) {\n    /** Make a generic drag behavior, with undo/redo. Supplies angles in\n     place of displacements.\n\n     start_fn: function(d) Called at dragstart.\n\n     drag_fn: function(d, displacement, total_displacement) Called during\n     drag.\n\n     end_fn:\n\n     undo_fn:\n\n     redo_fn:\n\n     get_center:\n\n     relative_to_selection: a d3 selection that the locations are calculated against.\n\n     */\n\n    // define some variables\n    var behavior = d3.behavior.drag(),\n        total_angle,\n        undo_stack = this.undo_stack,\n        rel = relative_to_selection.node();\n\n    behavior.on(\"dragstart\", function (d) {\n        // silence other listeners\n        d3.event.sourceEvent.stopPropagation();\n        total_angle = 0;\n        start_fn(d);\n    });\n    behavior.on(\"drag\", function(d) {\n        // update data\n        var displacement = { x: d3.event.dx,\n                             y: d3.event.dy },\n            location = { x: d3.mouse(rel)[0],\n                         y: d3.mouse(rel)[1] },\n            center = get_center(),\n            angle = utils.angle_for_event(displacement,\n                                          location,\n                                          center);\n        // remember the displacement\n        total_angle = total_angle + angle;\n        drag_fn(d, angle, total_angle, center);\n    });\n    behavior.on(\"dragend\", function(d) {\n        // add to undo/redo stack\n        // remember the displacement, dragged nodes, and reactions\n        var saved_d = utils.clone(d),\n            saved_angle = total_angle,\n            saved_center = utils.clone(get_center());\n\n        undo_stack.push(function() {\n            // undo\n            undo_fn(saved_d, saved_angle, saved_center);\n        }, function () {\n            // redo\n            redo_fn(saved_d, saved_angle, saved_center);\n        });\n        end_fn(d);\n    });\n    return behavior;\n}\n","/** Brush. Define a brush to select elements in a map.\n\n Arguments\n ---------\n\n selection: A d3 selection to place the brush in.\n\n is_enabled: Whether to turn the brush on.\n\n map: An instance of escher.Map.\n\n insert_after: A d3 selector string to choose the svg element that the brush\n will be inserted after. Often a canvas element (e.g. '.canvas-group').\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Brush = utils.make_class();\nBrush.prototype = {\n    init: init,\n    toggle: toggle,\n    setup_selection_brush: setup_selection_brush\n};\nmodule.exports = Brush;\n\n\n// definitions\nfunction init(selection, is_enabled, map, insert_after) {\n    this.brush_sel = selection.append('g')\n        .attr('id', 'brush-container');\n    var node = this.brush_sel.node(),\n        insert_before_node = selection.select(insert_after).node().nextSibling;\n    if (!(node===insert_before_node))\n        node.parentNode.insertBefore(node, insert_before_node);\n    this.enabled = is_enabled;\n    this.map = map;\n};\n\nfunction brush_is_enabled() {\n    /** Returns a boolean for the on/off status of the brush\n\n     */\n    return this.map.sel.select('.brush').empty();\n}\nfunction toggle(on_off) {\n    /** Turn the brush on or off\n\n     */\n    if (on_off===undefined) on_off = !this.enabled;\n\n    if (on_off) {\n        this.selection_brush = this.setup_selection_brush();\n    } else {\n        this.brush_sel.selectAll('.brush').remove();\n    }\n}\nfunction setup_selection_brush() {\n    var selection = this.brush_sel,\n        selectable_selection = this.map.sel.selectAll('#nodes,#text-labels'),\n        size_and_location = this.map.canvas.size_and_location(),\n        width = size_and_location.width,\n        height = size_and_location.height,\n        x = size_and_location.x,\n        y = size_and_location.y;\n\n    // clear existing brush\n    selection.selectAll('g').remove();\n\n    var brush_fn = d3.svg.brush()\n            .x(d3.scale.identity().domain([x, x+width]))\n            .y(d3.scale.identity().domain([y, y+height]))\n            .on(\"brush\", function(key_manager) {\n                var shift_key_on = key_manager.held_keys.shift,\n                    extent = d3.event.target.extent(),\n                    selection;\n                if (shift_key_on) {\n                    // when shift is pressed, ignore the currently selected nodes\n                    selection = selectable_selection\n                        .selectAll('.node:not(.selected),.text-label:not(.selected)');\n                } else {\n                    // otherwise, brush all nodes\n                    selection = selectable_selection\n                        .selectAll('.node,.text-label');\n                }\n                selection.classed(\"selected\", function(d) {\n                    var sx = d.x, sy = d.y;\n                    return extent[0][0] <= sx && sx < extent[1][0]\n                        && extent[0][1] <= sy && sy < extent[1][1];\n                });\n            }.bind(null, this.map.key_manager))\n            .on(\"brushend\", function() {\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);\n            }),\n        brush = selection.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush_fn);\n\n    // turn off the mouse crosshair\n    selection.selectAll('.background')\n        .classed('cursor-grab', false)\n        .classed('cursor-grabbing', false)\n        .style('cursor', null);\n\n    return brush;\n}\n","/** BuildInput */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar completely = require('./complete.ly');\nvar DirectionArrow = require('./DirectionArrow');\nvar CobraModel = require('./CobraModel');\n\n\nvar BuildInput = utils.make_class();\nBuildInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    toggle: toggle,\n    show_dropdown: show_dropdown,\n    hide_dropdown: hide_dropdown,\n    place_at_selected: place_at_selected,\n    place: place,\n    reload_at_selected: reload_at_selected,\n    reload: reload,\n    toggle_start_reaction_listener: toggle_start_reaction_listener,\n    hide_target: hide_target,\n    show_target: show_target\n};\nmodule.exports = BuildInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container, settings) {\n    // set up container\n    var new_sel = selection.append('div').attr('id', 'rxn-input');\n    this.placed_div = PlacedDiv(new_sel, map, {x: 240, y: 0});\n    this.placed_div.hide();\n\n    // set up complete.ly\n    var c = completely(new_sel.node(), { backgroundColor: '#eee' });\n\n    d3.select(c.input);\n    this.completely = c;\n    // close button\n    new_sel.append('button').attr('class', \"button input-close-button\")\n        .text(\"×\")\n        .on('mousedown', function() { this.hide_dropdown(); }.bind(this));\n\n    // map\n    this.map = map;\n    // set up the reaction direction arrow\n    var default_angle = 90; // degrees\n    this.direction_arrow = new DirectionArrow(map.sel);\n    this.direction_arrow.set_rotation(default_angle);\n    this.setup_map_callbacks(map);\n\n    // zoom container\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n\n    // settings\n    this.settings = settings;\n\n    // toggle off\n    this.toggle(false);\n    this.target_coords = null;\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('select_metabolite_with_id.input', function(selected_node, coords) {\n        if (this.is_active) this.reload(selected_node, coords, false);\n        this.hide_target();\n    }.bind(this));\n    map.callback_manager.set('select_selectable.input', function(count, selected_node, coords) {\n        this.hide_target();\n        if (count == 1 && this.is_active && coords) {\n            this.reload(selected_node, coords, false);\n        } else {\n            this.toggle(false);\n        }\n    }.bind(this));\n    map.callback_manager.set('deselect_nodes', function() {\n        this.direction_arrow.hide();\n        this.hide_dropdown();\n    }.bind(this));\n\n    // svg export\n    map.callback_manager.set('before_svg_export', function() {\n        this.direction_arrow.hide();\n        this.hide_target();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.input', function() {\n        if (this.is_active) {\n            this.place_at_selected();\n        }\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n    if (this.is_active) {\n        this.toggle_start_reaction_listener(true);\n        if (this.target_coords !== null)\n            this.show_dropdown(this.target_coords);\n        else this.reload_at_selected();\n        this.map.set_status('Click on the canvas or an existing metabolite');\n        this.direction_arrow.show();\n        // escape key\n        this.escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.hide_dropdown();\n            }.bind(this), 'build_input');\n    } else {\n        this.toggle_start_reaction_listener(false);\n        this.placed_div.hide();\n        this.completely.input.blur();\n        this.completely.hideDropDown();\n        this.map.set_status(null);\n        this.direction_arrow.hide();\n        if (this.escape) this.escape.clear();\n        this.escape = null;\n    }\n}\nfunction show_dropdown(coords) {\n    this.placed_div.place(coords);\n    this.completely.input.blur();\n    this.completely.repaint();\n    this.completely.setText(\"\");\n    this.completely.input.focus();\n}\nfunction hide_dropdown() {\n    this.placed_div.hide();\n    this.completely.hideDropDown();\n}\nfunction place_at_selected() {\n    /** Place autocomplete box at the first selected node.\n\n     */\n\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    this.place(coords);\n}\nfunction place(coords) {\n    this.placed_div.place(coords);\n    this.direction_arrow.set_location(coords);\n    this.direction_arrow.show();\n}\n\nfunction reload_at_selected() {\n    /** Reload data for autocomplete box and redraw box at the first\n     selected node.\n\n     */\n    // get the selected node\n    this.map.deselect_text_labels();\n    var selected_node = this.map.select_single_node();\n    if (selected_node==null) return false;\n    var coords = { x: selected_node.x, y: selected_node.y };\n    // reload the reaction input\n    this.reload(selected_node, coords, false);\n    return true;\n}\nfunction reload(selected_node, coords, starting_from_scratch) {\n    /** Reload data for autocomplete box and redraw box at the new\n     coordinates.\n\n     */\n\n    // try finding the selected node\n    if (!starting_from_scratch && !selected_node) {\n        console.error('No selected node, and not starting from scratch');\n        return;\n    }\n\n    this.place(coords);\n\n    // blur\n    this.completely.input.blur();\n    this.completely.repaint(); // put in place()?\n\n    if (this.map.cobra_model===null) {\n        this.completely.setText('Cannot add: No model.');\n        return;\n    }\n\n    // settings\n    var show_names = this.settings.get_option('identifiers_on_map') == 'name',\n        allow_duplicates = this.settings.get_option('allow_building_duplicate_reactions');\n\n    // Find selected\n    var options = [],\n        cobra_reactions = this.map.cobra_model.reactions,\n        cobra_metabolites = this.map.cobra_model.metabolites,\n        reactions = this.map.reactions,\n        has_data_on_reactions = this.map.has_data_on_reactions,\n        reaction_data = this.map.reaction_data,\n        reaction_data_styles = this.map.reaction_data_styles,\n        selected_m_name = (selected_node ? (show_names ? selected_node.name : selected_node.bigg_id) : ''),\n        bold_mets_in_str = function(str, mets) {\n            return str.replace(new RegExp('(^| )(' + mets.join('|') + ')($| )', 'g'),\n                               '$1<b>$2</b>$3');\n        };\n\n    // for reactions\n    var reaction_suggestions = {};\n    for (var bigg_id in cobra_reactions) {\n        var reaction = cobra_reactions[bigg_id],\n            reaction_name = reaction.name,\n            show_r_name = (show_names ? reaction_name : bigg_id);\n\n        // ignore drawn reactions\n        if ((!allow_duplicates) && already_drawn(bigg_id, reactions))\n            continue;\n\n        // check segments for match to selected metabolite\n        for (var met_bigg_id in reaction.metabolites) {\n\n            // if starting with a selected metabolite, check for that id\n            if (starting_from_scratch || met_bigg_id == selected_node.bigg_id) {\n\n                // don't add suggestions twice\n                if (bigg_id in reaction_suggestions) continue;\n\n                var met_name = cobra_metabolites[met_bigg_id].name;\n\n                if (has_data_on_reactions) {\n                    options.push({ reaction_data: reaction.data,\n                                   html: ('<b>' + show_r_name + '</b>' +\n                                          ': ' +\n                                          reaction.data_string),\n                                   matches: [show_r_name],\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                } else {\n                    // get the metabolite names or IDs\n                    var mets = {},\n                        show_met_names = [];\n                    if (show_names) {\n                        for (var met_id in reaction.metabolites) {\n                            var name = cobra_metabolites[met_id].name;\n                            mets[name] = reaction.metabolites[met_id];\n                            show_met_names.push(name);\n                        }\n                    } else {\n                        mets = utils.clone(reaction.metabolites);\n                        for (var met_id in reaction.metabolites) {\n                            show_met_names.push(met_id);\n                        }\n                    }\n                    var key = show_names ? 'name' : 'bigg_id',\n                        show_gene_names = reaction.genes.map(function(g_obj) {\n                            return g_obj[key];\n                        });\n                    // get the reaction string\n                    var reaction_string = CobraModel.build_reaction_string(mets,\n                                                                           reaction.reversibility,\n                                                                           reaction.lower_bound,\n                                                                           reaction.upper_bound);\n                    options.push({ html: ('<b>' + show_r_name + '</b>' +\n                                          '\\t' +\n                                          bold_mets_in_str(reaction_string, [selected_m_name])),\n                                   matches: [show_r_name].concat(show_met_names).concat(show_gene_names),\n                                   id: bigg_id });\n                    reaction_suggestions[bigg_id] = true;\n                }\n            }\n        }\n    }\n\n    // Generate the array of reactions to suggest and sort it\n    var sort_fn;\n    if (has_data_on_reactions) {\n        sort_fn = function(x, y) {\n            return Math.abs(y.reaction_data) - Math.abs(x.reaction_data);\n        };\n    } else {\n        sort_fn = function(x, y) {\n            return (x.html.toLowerCase() < y.html.toLowerCase() ? -1 : 1);\n        };\n    }\n    options = options.sort(sort_fn);\n    // set up the box with data, searching for first num results\n    var num = 20,\n        complete = this.completely;\n    complete.options = options;\n\n    // TODO test this behavior\n    // if (strings_to_display.length==1) complete.setText(strings_to_display[0]);\n    // else complete.setText(\"\");\n    complete.setText(\"\");\n\n    var direction_arrow = this.direction_arrow,\n        check_and_build = function(id) {\n            if (id !== null) {\n                // make sure the selected node exists, in case changes were made in the meantime\n                if (starting_from_scratch) {\n                    this.map.new_reaction_from_scratch(id,\n                                                       coords,\n                                                       direction_arrow.get_rotation());\n                } else {\n                    if (!(selected_node.node_id in this.map.nodes)) {\n                        console.error('Selected node no longer exists');\n                        this.hide_dropdown();\n                        return;\n                    }\n                    this.map.new_reaction_for_metabolite(id,\n                                                         selected_node.node_id,\n                                                         direction_arrow.get_rotation());\n                }\n            }\n        }.bind(this);\n    complete.onEnter = function(id) {\n        this.setText(\"\");\n        this.onChange(\"\");\n        check_and_build(id);\n    };\n    complete.repaint();\n    this.completely.input.focus();\n\n    //definitions\n    function already_drawn(bigg_id, reactions) {\n        for (var drawn_id in reactions) {\n            if (reactions[drawn_id].bigg_id==bigg_id)\n                return true;\n        }\n        return false;\n    };\n}\nfunction toggle_start_reaction_listener(on_off) {\n    /** Toggle listening for a click to place a new reaction on the canvas.\n\n     */\n    if (on_off===undefined)\n        this.start_reaction_listener = !this.start_reaction_listener;\n    else if (this.start_reaction_listener==on_off)\n        return;\n    else\n        this.start_reaction_listener = on_off;\n\n    if (this.start_reaction_listener) {\n        this.map.sel.on('click.start_reaction', function(node) {\n            // TODO fix this hack\n            if (this.direction_arrow.dragging) return;\n            // reload the reaction input\n            var coords = { x: d3.mouse(node)[0],\n                           y: d3.mouse(node)[1] };\n            // unselect metabolites\n            this.map.deselect_nodes();\n            this.map.deselect_text_labels();\n            // reload the reaction input\n            this.reload(null, coords, true);\n            // generate the target symbol\n            this.show_target(this.map, coords);\n        }.bind(this, this.map.sel.node()));\n        this.map.sel.classed('start-reaction-cursor', true);\n    } else {\n        this.map.sel.on('click.start_reaction', null);\n        this.map.sel.classed('start-reaction-cursor', false);\n        this.hide_target();\n    }\n}\n\nfunction hide_target() {\n    if (this.target_coords)\n        this.map.sel.selectAll('.start-reaction-target').remove();\n    this.target_coords = null;\n}\nfunction show_target(map, coords) {\n    var s = map.sel.selectAll('.start-reaction-target').data([12, 5]);\n    s.enter().append('circle')\n        .classed('start-reaction-target', true)\n        .attr('r', function(d) { return d; })\n        .style('stroke-width', 4);\n    s.style('visibility', 'visible')\n        .attr('transform', 'translate('+coords.x+','+coords.y+')');\n    this.target_coords = coords;\n}\n","/** For documentation of this class, see docs/javascript_api.rst\n\n */\n\n/* global d3, $ */\n\nvar utils = require('./utils');\nvar BuildInput = require('./BuildInput');\nvar ZoomContainer = require('./ZoomContainer');\nvar Map = require('./Map');\nvar CobraModel = require('./CobraModel');\nvar Brush = require('./Brush');\nvar CallbackManager = require('./CallbackManager');\nvar ui = require('./ui');\nvar SearchBar = require('./SearchBar');\nvar Settings = require('./Settings');\nvar SettingsMenu = require('./SettingsMenu');\nvar TextEditInput = require('./TextEditInput');\nvar QuickJump = require('./QuickJump');\nvar data_styles = require('./data_styles');\n\n\nvar Builder = utils.make_class();\nBuilder.prototype = {\n    init: init,\n    load_map: load_map,\n    load_model: load_model,\n    _set_mode: _set_mode,\n    view_mode: view_mode,\n    build_mode: build_mode,\n    brush_mode: brush_mode,\n    zoom_mode: zoom_mode,\n    rotate_mode: rotate_mode,\n    text_mode: text_mode,\n    set_reaction_data: set_reaction_data,\n    set_metabolite_data: set_metabolite_data,\n    set_gene_data: set_gene_data,\n    _update_data: _update_data,\n    _toggle_direction_buttons: _toggle_direction_buttons,\n    _setup_menu: _setup_menu,\n    _setup_simple_zoom_buttons: _setup_simple_zoom_buttons,\n    _setup_status: _setup_status,\n    _setup_quick_jump: _setup_quick_jump,\n    _setup_modes: _setup_modes,\n    _get_keys: _get_keys,\n    _setup_confirm_before_exit: _setup_confirm_before_exit\n};\nmodule.exports = Builder;\n\n\n// definitions\nfunction init(map_data, model_data, embedded_css, selection, options) {\n\n    // default sel\n    if (!selection)\n        selection = d3.select('body').append('div');\n    if (!options)\n        options = {};\n\n    this.map_data = map_data;\n    this.model_data = model_data;\n    this.embedded_css = embedded_css;\n    this.selection = selection;\n\n    // apply this object as data for the selection\n    this.selection.datum(this);\n\n    // set defaults\n    this.options = utils.set_options(options, {\n        // view options\n        menu: 'all',\n        scroll_behavior: 'pan',\n        use_3d_transform: false,\n        enable_editing: true,\n        enable_keys: true,\n        enable_search: true,\n        fill_screen: false,\n        zoom_to_element: null,\n        // map, model, and styles\n        starting_reaction: null,\n        never_ask_before_quit: false,\n        unique_map_id: null,\n        primary_metabolite_radius: 20,\n        secondary_metabolite_radius: 10,\n        marker_radius: 5,\n        gene_font_size: 18,\n        hide_secondary_metabolites: false,\n        show_gene_reaction_rules: false,\n        hide_all_labels: false,\n        // applied data\n        // reaction\n        reaction_data: null,\n        reaction_styles: ['color', 'size', 'text'],\n        reaction_compare_style: 'log2_fold',\n        reaction_scale: [{ type: 'min', color: '#c8c8c8', size: 12 },\n                         { type: 'median', color: '#9696ff', size: 20 },\n                         { type: 'max', color: '#ff0000', size: 25 }],\n        reaction_no_data_color: '#dcdcdc',\n        reaction_no_data_size: 8,\n        // gene\n        gene_data: null,\n        and_method_in_gene_reaction_rule: 'mean',\n        // metabolite\n        metabolite_data: null,\n        metabolite_styles: ['color', 'size', 'text'],\n        metabolite_compare_style: 'log2_fold',\n        metabolite_scale: [ { type: 'min', color: '#fffaf0', size: 20 },\n                            { type: 'median', color: '#f1c470', size: 30 },\n                            { type: 'max', color: '#800000', size: 40 } ],\n        metabolite_no_data_color: '#ffffff',\n        metabolite_no_data_size: 10,\n        // View and build options\n        identifiers_on_map: 'bigg_id',\n        highlight_missing: false,\n        allow_building_duplicate_reactions: false,\n        // Callbacks\n        first_load_callback: null\n    }, {\n        primary_metabolite_radius: true,\n        secondary_metabolite_radius: true,\n        marker_radius: true,\n        gene_font_size: true,\n        reaction_no_data_size: true,\n        metabolite_no_data_size: true\n    });\n\n    // check the location\n    if (utils.check_for_parent_tag(this.selection, 'svg')) {\n        throw new Error('Builder cannot be placed within an svg node '+\n                        'becuase UI elements are html-based.');\n    }\n\n    // Initialize the settings\n    var set_option = function(option, new_value) {\n        this.options[option] = new_value;\n    }.bind(this),\n        get_option = function(option) {\n            return this.options[option];\n        }.bind(this),\n        // the options that are erased when the settings menu is canceled\n        conditional_options = ['hide_secondary_metabolites', 'show_gene_reaction_rules',\n                               'hide_all_labels', 'scroll_behavior', 'use_3d_transform', 'reaction_styles',\n                               'reaction_compare_style', 'reaction_scale',\n                               'reaction_no_data_color', 'reaction_no_data_size',\n                               'and_method_in_gene_reaction_rule', 'metabolite_styles',\n                               'metabolite_compare_style', 'metabolite_scale',\n                               'metabolite_no_data_color', 'metabolite_no_data_size',\n                               'identifiers_on_map', 'highlight_missing',\n                               'allow_building_duplicate_reactions',];\n    this.settings = new Settings(set_option, get_option, conditional_options);\n\n    // check the scales have max and min\n    ['reaction_scale', 'metabolite_scale'].forEach(function(name) {\n        this.settings.streams[name].onValue(function(val) {\n            ['min', 'max'].forEach(function(type) {\n                var has = val.reduce(function(has_found, scale_el) {\n                    return has_found || (scale_el.type == type);\n                }, false);\n                if (!has) {\n                    val.push({ type: type, color: '#ffffff', size: 10 });\n                    this.settings.set_conditional(name, val);\n                }\n            }.bind(this));\n        }.bind(this));\n    }.bind(this));\n    // TODO warn about repeated types in the scale\n\n    // set up this callback manager\n    this.callback_manager = CallbackManager();\n    if (this.options.first_load_callback !== null)\n        this.callback_manager.set('first_load', this.options.first_load_callback);\n\n    // load the model, map, and update data in both\n    this.load_model(this.model_data, false);\n    this.load_map(this.map_data, false);\n    this._update_data(true, true);\n\n    // setting callbacks\n    // TODO enable atomic updates. Right now, every time\n    // the menu closes, everything is drawn.\n    this.settings.status_bus\n        .onValue(function(x) {\n            if (x === 'accepted') {\n                this._update_data(true, true, ['reaction', 'metabolite'], false);\n                if (this.zoom_container !== null) {\n                    var new_behavior = this.settings.get_option('scroll_behavior');\n                    this.zoom_container.set_scroll_behavior(new_behavior);\n                    this.zoom_container.set_use_3d_transform(this.settings.get_option('use_3d_transform'));\n                }\n                if (this.map !== null) {\n                    this.map.draw_all_nodes(false);\n                    this.map.draw_all_reactions(true, false);\n                }\n            }\n        }.bind(this));\n\n    this.callback_manager.run('first_load', this);\n}\n\n// Definitions\nfunction load_model(model_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Check the cobra model\n    if (model_data === null)\n        this.cobra_model = null;\n    else\n        this.cobra_model = CobraModel.from_cobra_json(model_data);\n\n    if (this.map) {\n        this.map.cobra_model = this.cobra_model;\n        if (should_update_data)\n            this._update_data(true, false);\n        if (this.settings.get_option('highlight_missing'))\n            this.map.draw_all_reactions(false, false);\n    }\n\n    this.callback_manager.run('load_model', null, model_data, should_update_data);\n}\n\nfunction load_map(map_data, should_update_data) {\n    /** For documentation of this function, see docs/javascript_api.rst\n\n     */\n\n    if (should_update_data === undefined)\n        should_update_data = true;\n\n    // Begin with some definitions\n    var selectable_mousedown_enabled = true,\n        shift_key_on = false;\n\n    // remove the old builder\n    utils.remove_child_nodes(this.selection);\n\n    // set up the zoom container\n    this.zoom_container = new ZoomContainer(this.selection,\n                                            this.options.scroll_behavior,\n                                            this.options.use_3d_transform,\n                                            this.options.fill_screen);\n    var zoomed_sel = this.zoom_container.zoomed_sel;\n    var svg = this.zoom_container.svg;\n\n    if (map_data!==null) {\n        // import map\n        this.map = Map.from_data(map_data,\n                                 svg,\n                                 this.embedded_css,\n                                 zoomed_sel,\n                                 this.zoom_container,\n                                 this.settings,\n                                 this.cobra_model,\n                                 this.options.enable_search);\n    } else {\n        // new map\n        this.map = new Map(svg,\n                           this.embedded_css,\n                           zoomed_sel,\n                           this.zoom_container,\n                           this.settings,\n                           this.cobra_model,\n                           null,\n                           this.options.enable_search);\n    }\n    // zoom container status changes\n    this.zoom_container.callback_manager.set('svg_start', function() {\n        this.map.set_status('Drawing ...');\n    }.bind(this));\n    this.zoom_container.callback_manager.set('svg_finish', function() {\n        this.map.set_status('');\n    }.bind(this));\n\n    // set the data for the map\n    if (should_update_data)\n        this._update_data(false, true);\n\n    // set up the reaction input with complete.ly\n    this.build_input = BuildInput(this.selection, this.map,\n                                  this.zoom_container, this.settings);\n\n    // set up the text edit input\n    this.text_edit_input = TextEditInput(this.selection, this.map,\n                                         this.zoom_container);\n\n    // set up the Brush\n    this.brush = new Brush(zoomed_sel, false, this.map, '.canvas-group');\n    this.map.canvas.callback_manager.set('resize', function() {\n        this.brush.toggle(true);\n    }.bind(this));\n\n    // set up the modes\n    this._setup_modes(this.map, this.brush, this.zoom_container);\n\n    var s = this.selection\n            .append('div').attr('class', 'search-menu-container')\n            .append('div').attr('class', 'search-menu-container-inline'),\n        menu_div = s.append('div'),\n        search_bar_div = s.append('div'),\n        button_div = this.selection.append('div');\n\n    // set up the search bar\n    this.search_bar = SearchBar(search_bar_div, this.map.search_index,\n                                this.map);\n    // set up the hide callbacks\n    this.search_bar.callback_manager.set('show', function() {\n        this.settings_bar.toggle(false);\n    }.bind(this));\n\n    // set up the settings\n    var settings_div = this.selection.append('div');\n    this.settings_bar = SettingsMenu(settings_div, this.settings, this.map,\n                                     function(type, on_off) {\n                                         // temporarily set the abs type, for\n                                         // previewing it in the Settings\n                                         // menu\n                                         var o = this.options[type + '_styles'];\n                                         if (on_off && o.indexOf('abs') == -1)\n                                             o.push('abs');\n                                         else if (!on_off) {\n                                             var i = o.indexOf('abs');\n                                             if (i != -1)\n                                                 this.options[type + '_styles'] = o.slice(0, i).concat(o.slice(i + 1));\n                                         }\n                                         this._update_data(false, true, type);\n                                     }.bind(this));\n    this.settings_bar.callback_manager.set('show', function() {\n        this.search_bar.toggle(false);\n    }.bind(this));\n\n    // set up key manager\n    var keys = this._get_keys(this.map, this.zoom_container,\n                              this.search_bar, this.settings_bar,\n                              this.options.enable_editing);\n    this.map.key_manager.assigned_keys = keys;\n    // tell the key manager about the reaction input and search bar\n    this.map.key_manager.input_list = [this.build_input, this.search_bar,\n                                       this.settings_bar, this.text_edit_input];\n    // make sure the key manager remembers all those changes\n    this.map.key_manager.update();\n    // turn it on/off\n    this.map.key_manager.toggle(this.options.enable_keys);\n\n    // set up menu and status bars\n    if (this.options.menu=='all') {\n        this._setup_menu(menu_div, button_div, this.map, this.zoom_container, this.map.key_manager, keys,\n                         this.options.enable_editing, this.options.enable_keys);\n    } else if (this.options.menu=='zoom') {\n        this._setup_simple_zoom_buttons(button_div, keys);\n    }\n\n    // setup selection box\n    if (this.options.zoom_to_element) {\n        var type = this.options.zoom_to_element.type,\n            element_id = this.options.zoom_to_element.id;\n        if (typeof type === 'undefined' || ['reaction', 'node'].indexOf(type) == -1)\n            throw new Error('zoom_to_element type must be \"reaction\" or \"node\"');\n        if (typeof element_id === 'undefined')\n            throw new Error('zoom_to_element must include id');\n        if (type == 'reaction')\n            this.map.zoom_to_reaction(element_id);\n        else if (type == 'node')\n            this.map.zoom_to_node(element_id);\n    } else if (map_data !== null) {\n        this.map.zoom_extent_canvas();\n    } else {\n        if (this.options.starting_reaction !== null && this.cobra_model !== null) {\n            // Draw default reaction if no map is provided\n            var size = this.zoom_container.get_size();\n            var start_coords = { x: size.width / 2,\n                                 y: size.height / 4 };\n            this.map.new_reaction_from_scratch(this.options.starting_reaction, start_coords, 90);\n            this.map.zoom_extent_nodes();\n        } else {\n            this.map.zoom_extent_canvas();\n        }\n    }\n\n    // status in both modes\n    var status = this._setup_status(this.selection, this.map);\n\n    // set up quick jump\n    this._setup_quick_jump(this.selection);\n\n    // start in zoom mode for builder, view mode for viewer\n    if (this.options.enable_editing)\n        this.zoom_mode();\n    else\n        this.view_mode();\n\n    // confirm before leaving the page\n    if (this.options.enable_editing)\n        this._setup_confirm_before_exit();\n\n    // draw\n    this.map.draw_everything();\n}\n\nfunction _set_mode(mode) {\n    this.search_bar.toggle(false);\n    // input\n    this.build_input.toggle(mode=='build');\n    this.build_input.direction_arrow.toggle(mode=='build');\n    if (this.options.menu=='all' && this.options.enable_editing)\n        this._toggle_direction_buttons(mode=='build');\n    // brush\n    this.brush.toggle(mode=='brush');\n    // zoom\n    this.zoom_container.toggle_pan_drag(mode=='zoom' || mode=='view');\n    // resize canvas\n    this.map.canvas.toggle_resize(mode=='zoom' || mode=='brush');\n    // Behavior. Be careful of the order becuase rotation and\n    // toggle_selectable_drag both use Behavior.selectable_drag.\n    if (mode == 'rotate') {\n        this.map.behavior.toggle_selectable_drag(false); // before toggle_rotation_mode\n        this.map.behavior.toggle_rotation_mode(true);\n    } else {\n        this.map.behavior.toggle_rotation_mode(mode=='rotate'); // before toggle_selectable_drag\n        this.map.behavior.toggle_selectable_drag(mode=='brush');\n    }\n    this.map.behavior.toggle_selectable_click(mode=='build' || mode=='brush');\n    this.map.behavior.toggle_label_drag(mode=='brush');\n    this.map.behavior.toggle_label_mousedown(mode=='brush');\n    this.map.behavior.toggle_text_label_edit(mode=='text');\n    this.map.behavior.toggle_bezier_drag(mode=='brush');\n    // edit selections\n    if (mode=='view' || mode=='text')\n        this.map.select_none();\n    if (mode=='rotate')\n        this.map.deselect_text_labels();\n    this.map.draw_everything();\n}\n\nfunction view_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('view_mode');\n    this._set_mode('view');\n}\n\nfunction build_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('build_mode');\n    this._set_mode('build');\n}\n\nfunction brush_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('brush_mode');\n    this._set_mode('brush');\n}\n\nfunction zoom_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('zoom_mode');\n    this._set_mode('zoom');\n}\n\nfunction rotate_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('rotate_mode');\n    this._set_mode('rotate');\n}\n\nfunction text_mode() {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.callback_manager.run('text_mode');\n    this._set_mode('text');\n}\n\nfunction set_reaction_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.reaction_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_gene_data(data, clear_gene_reaction_rules) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    if (clear_gene_reaction_rules) // default undefined\n        this.settings.set_conditional('show_gene_reaction_rules', false);\n    this.options.gene_data = data;\n    this._update_data(true, true, 'reaction');\n    this.map.set_status('');\n}\n\nfunction set_metabolite_data(data) {\n    /** For documentation of this function, see docs/javascript_api.rst.\n\n     */\n    this.options.metabolite_data = data;\n    this._update_data(true, true, 'metabolite');\n    this.map.set_status('');\n}\n\n\nfunction _update_data(update_model, update_map, kind, should_draw) {\n    /** Set data and settings for the model.\n\n     Arguments\n     ---------\n\n     update_model: (Boolean) Update data for the model.\n\n     update_map: (Boolean) Update data for the map.\n\n     kind: (Optional, Default: all) An array defining which data is being\n     updated that can include any of: ['reaction', 'metabolite'].\n\n     should_draw: (Optional, Default: true) Whether to redraw the update\n     sections of the map.\n\n     */\n\n    // defaults\n    if (kind === undefined)\n        kind = ['reaction', 'metabolite'];\n    if (should_draw === undefined)\n        should_draw = true;\n\n    var update_metabolite_data = (kind.indexOf('metabolite') != -1),\n        update_reaction_data = (kind.indexOf('reaction') != -1),\n        met_data_object,\n        reaction_data_object,\n        gene_data_object;\n\n    // -------------------\n    // First map, and draw\n\n    // metabolite data\n    if (update_metabolite_data && update_map && this.map !== null) {\n        met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                       'metabolite_data');\n        this.map.apply_metabolite_data_to_map(met_data_object);\n        if (should_draw)\n            this.map.draw_all_nodes(false);\n    }\n\n    // reaction data\n    if (update_reaction_data) {\n        if (this.options.reaction_data !== null && update_map && this.map !== null) {\n            reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                'reaction_data');\n            this.map.apply_reaction_data_to_map(reaction_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (this.options.gene_data !== null && update_map && this.map !== null) {\n            gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                     this.cobra_model, this.map);\n            this.map.apply_gene_data_to_map(gene_data_object);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        } else if (update_map && this.map !== null) {\n            // clear the data\n            this.map.apply_reaction_data_to_map(null);\n            if (should_draw)\n                this.map.draw_all_reactions(false, false);\n        }\n    }\n\n    // ----------------------------------------------------------------\n    // Then the model, after drawing. Delay by 5ms so the the map draws\n    // first.\n\n    // if this function runs again, cancel the previous model update\n    if (this.update_model_timer)\n        clearTimeout(this.update_model_timer);\n\n    var delay = 5;\n    this.update_model_timer = setTimeout(function() {\n\n        // metabolite_data\n        if (update_metabolite_data && update_model && this.cobra_model !== null) {\n            // if we haven't already made this\n            if (!met_data_object)\n                met_data_object = data_styles.import_and_check(this.options.metabolite_data,\n                                                               'metabolite_data');\n            this.cobra_model.apply_metabolite_data(met_data_object,\n                                                   this.options.metabolite_styles,\n                                                   this.options.metabolite_compare_style);\n        }\n\n        // reaction data\n        if (update_reaction_data) {\n            if (this.options.reaction_data !== null && update_model && this.cobra_model !== null) {\n                // if we haven't already made this\n                if (!reaction_data_object)\n                    reaction_data_object = data_styles.import_and_check(this.options.reaction_data,\n                                                                        'reaction_data');\n                this.cobra_model.apply_reaction_data(reaction_data_object,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            } else if (this.options.gene_data !== null && update_model && this.cobra_model !== null) {\n                if (!gene_data_object)\n                    gene_data_object = make_gene_data_object(this.options.gene_data,\n                                                             this.cobra_model, this.map);\n                this.cobra_model.apply_gene_data(gene_data_object,\n                                                 this.options.reaction_styles,\n                                                 this.options.identifiers_on_map,\n                                                 this.options.reaction_compare_style,\n                                                 this.options.and_method_in_gene_reaction_rule);\n            } else if (update_model && this.cobra_model !== null) {\n                // clear the data\n                this.cobra_model.apply_reaction_data(null,\n                                                     this.options.reaction_styles,\n                                                     this.options.reaction_compare_style);\n            }\n        }\n\n        // callback\n        this.callback_manager.run('update_data', null, update_model, update_map, kind, should_draw);\n\n    }.bind(this), delay);\n\n    // definitions\n    function make_gene_data_object(gene_data, cobra_model, map) {\n        var all_reactions = {};\n        if (cobra_model !== null)\n            utils.extend(all_reactions, cobra_model.reactions);\n        // extend, overwrite\n        if (map !== null)\n            utils.extend(all_reactions, map.reactions, true);\n\n        // this object has reaction keys and values containing associated genes\n        return data_styles.import_and_check(gene_data, 'gene_data', all_reactions);\n    }\n}\n\nfunction _setup_menu(menu_selection, button_selection, map, zoom_container,\n                     key_manager, keys, enable_editing, enable_keys) {\n    var menu = menu_selection.attr('id', 'menu')\n            .append('ul')\n            .attr('class', 'nav nav-pills');\n    // map dropdown\n    ui.dropdown_menu(menu, 'Map')\n        .button({ key: keys.save,\n                  text: 'Save map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+S)' : null) })\n        .button({ text: 'Load map JSON',\n                  key_text: (enable_keys ? ' (Ctrl+O)' : null),\n                  input: { assign: key_manager.assigned_keys.load,\n                           key: 'fn',\n                           fn: load_map_for_file.bind(this),\n                           pre_fn: function() {\n                               map.set_status('Loading map ...');\n                           },\n                           failure_fn: function() {\n                               map.set_status('');\n                           }}\n                })\n        .button({ key: keys.save_svg,\n                  text: 'Export as SVG',\n                  key_text: (enable_keys ? ' (Ctrl+Shift+S)' : null) })\n        .button({ key: keys.clear_map,\n                  text: 'Clear map' });\n    // model dropdown\n    var model_menu = ui.dropdown_menu(menu, 'Model')\n            .button({ text: 'Load COBRA model JSON',\n                      key_text: (enable_keys ? ' (Ctrl+M)' : null),\n                      input: { assign: key_manager.assigned_keys.load_model,\n                               key: 'fn',\n                               fn: load_model_for_file.bind(this),\n                               pre_fn: function() {\n                                   map.set_status('Loading model ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               } }\n                    })\n            .button({ id: 'convert_map',\n                      key: keys.convert_map,\n                      text: 'Update names and gene reaction rules using model' })\n            .button({ id: 'clear_model',\n                      key: keys.clear_model,\n                      text: 'Clear model' });\n    // disable the clear and convert buttons\n    var disable_model_clear_convert = function() {\n        model_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if ((d.id == 'clear_model' || d.id == 'convert_map') &&\n                    this.cobra_model === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_model_clear_convert();\n    this.callback_manager.set('load_model', disable_model_clear_convert);\n\n    // data dropdown\n    var data_menu = ui.dropdown_menu(menu, 'Data')\n            .button({ input: { assign: key_manager.assigned_keys.load_reaction_data,\n                               key: 'fn',\n                               fn: load_reaction_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading reaction data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load reaction data' })\n            .button({ key: keys.clear_reaction_data,\n                      text: 'Clear reaction data' })\n            .divider()\n            .button({ input: { fn: load_gene_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading gene data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load gene data' })\n            .button({ key: keys.clear_gene_data,\n                      text: 'Clear gene data' })\n            .divider()\n            .button({ input: { fn: load_metabolite_data_for_file.bind(this),\n                               accept_csv: true,\n                               pre_fn: function() {\n                                   map.set_status('Loading metabolite data ...');\n                               },\n                               failure_fn: function() {\n                                   map.set_status('');\n                               }},\n                      text: 'Load metabolite data' })\n            .button({ key: keys.clear_metabolite_data,\n                      text: 'Clear metabolite data' });\n\n    // update the buttons\n    var disable_clears = function() {\n        data_menu.dropdown.selectAll('li')\n            .classed('escher-disabled', function(d) {\n                if (!d) return null;\n                if (d.text == 'Clear reaction data' && this.options.reaction_data === null)\n                    return true;\n                if (d.text == 'Clear gene data' && this.options.gene_data === null)\n                    return true;\n                if (d.text == 'Clear metabolite data' && this.options.metabolite_data === null)\n                    return true;\n                return null;\n            }.bind(this));\n    }.bind(this);\n    disable_clears();\n    this.callback_manager.set('update_data', disable_clears);\n\n    // edit dropdown\n    var edit_menu = ui.dropdown_menu(menu, 'Edit', true);\n    if (enable_editing) {\n        edit_menu\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-menu-button',\n                      text: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-menu-button',\n                      text: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-menu-button',\n                      text: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-menu-button',\n                      text: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-menu-button',\n                      text: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) })\n            .divider()\n            .button({ key: keys.delete,\n                      text: 'Delete',\n                      key_text: (enable_keys ? ' (Del)' : null) })\n            .button({ key: keys.undo,\n                      text: 'Undo',\n                      key_text: (enable_keys ? ' (Ctrl+Z)' : null) })\n            .button({ key: keys.redo,\n                      text: 'Redo',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+Z)' : null) })\n            .button({ key: keys.toggle_primary,\n                      text: 'Toggle primary/secondary',\n                      key_text: (enable_keys ? ' (P)' : null) })\n            .button({ key: keys.cycle_primary,\n                      text: 'Rotate reactant locations',\n                      key_text: (enable_keys ? ' (C)' : null) })\n            .button({ key: keys.select_all,\n                      text: 'Select all',\n                      key_text: (enable_keys ? ' (Ctrl+A)' : null) })\n            .button({ key: keys.select_none,\n                      text: 'Select none',\n                      key_text: (enable_keys ? ' (Ctrl+Shift+A)' : null) })\n            .button({ key: keys.invert_selection,\n                      text: 'Invert selection' });\n    } else {\n        edit_menu.button({ key: keys.view_mode,\n                           id: 'view-mode-menu-button',\n                           text: 'View mode' });\n    }\n\n    // view dropdown\n    var view_menu = ui.dropdown_menu(menu, 'View', true)\n            .button({ key: keys.zoom_in,\n                      text: 'Zoom in',\n                      key_text: (enable_keys ? ' (Ctrl and +)' : null) })\n            .button({ key: keys.zoom_out,\n                      text: 'Zoom out',\n                      key_text: (enable_keys ? ' (Ctrl and -)' : null) })\n            .button({ key: keys.extent_nodes,\n                      text: 'Zoom to nodes',\n                      key_text: (enable_keys ? ' (Ctrl+0)' : null) })\n            .button({ key: keys.extent_canvas,\n                      text: 'Zoom to canvas',\n                      key_text: (enable_keys ? ' (Ctrl+1)' : null) })\n            .button({ key: keys.search,\n                      text: 'Find',\n                      key_text: (enable_keys ? ' (Ctrl+F)' : null) });\n    if (enable_editing) {\n        view_menu.button({ key: keys.toggle_beziers,\n                           id: 'bezier-button',\n                           text: 'Show control points',\n                           key_text: (enable_keys ? ' (B)' : null) });\n        map.callback_manager\n            .set('toggle_beziers.button', function(on_off) {\n                menu.select('#bezier-button').select('.dropdown-button-text')\n                    .text((on_off ? 'Hide' : 'Show') +\n                          ' control points' +\n                          (enable_keys ? ' (B)' : ''));\n            });\n    }\n    view_menu.divider()\n        .button({ key: keys.show_settings,\n                  text: 'Settings',\n                  key_text: (enable_keys ? ' (Ctrl+,)' : null) });\n\n    // help\n    menu.append('a')\n        .attr('class', 'help-button')\n        .attr('target', '#')\n        .attr('href', 'https://escher.readthedocs.org')\n        .text('?');\n\n    var button_panel = button_selection.append('ul')\n            .attr('class', 'nav nav-pills nav-stacked')\n            .attr('id', 'button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_in,\n                           icon: 'glyphicon glyphicon-plus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom in',\n                           key_text: (enable_keys ? ' (Ctrl and +)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.zoom_out,\n                           icon: 'glyphicon glyphicon-minus-sign',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom out',\n                           key_text: (enable_keys ? ' (Ctrl and -)' : null) });\n    ui.individual_button(button_panel.append('li'),\n                         { key: keys.extent_canvas,\n                           icon: 'glyphicon glyphicon-resize-full',\n                           classes: 'btn btn-default',\n                           tooltip: 'Zoom to canvas',\n                           key_text: (enable_keys ? ' (Ctrl+1)' : null) });\n\n    // mode buttons\n    if (enable_editing) {\n        ui.radio_button_group(button_panel.append('li'))\n            .button({ key: keys.zoom_mode,\n                      id: 'zoom-mode-button',\n                      icon: 'glyphicon glyphicon-move',\n                      tooltip: 'Pan mode',\n                      key_text: (enable_keys ? ' (Z)' : null) })\n            .button({ key: keys.brush_mode,\n                      id: 'brush-mode-button',\n                      icon: 'glyphicon glyphicon-hand-up',\n                      tooltip: 'Select mode',\n                      key_text: (enable_keys ? ' (V)' : null) })\n            .button({ key: keys.build_mode,\n                      id: 'build-mode-button',\n                      icon: 'glyphicon glyphicon-plus',\n                      tooltip: 'Add reaction mode',\n                      key_text: (enable_keys ? ' (N)' : null) })\n            .button({ key: keys.rotate_mode,\n                      id: 'rotate-mode-button',\n                      icon: 'glyphicon glyphicon-repeat',\n                      tooltip: 'Rotate mode',\n                      key_text: (enable_keys ? ' (R)' : null) })\n            .button({ key: keys.text_mode,\n                      id: 'text-mode-button',\n                      icon: 'glyphicon glyphicon-font',\n                      tooltip: 'Text mode',\n                      key_text: (enable_keys ? ' (T)' : null) });\n\n        // arrow buttons\n        this.direction_buttons = button_panel.append('li');\n        var o = ui.button_group(this.direction_buttons)\n                .button({ key: keys.direction_arrow_left,\n                          icon: 'glyphicon glyphicon-arrow-left',\n                          tooltip: 'Direction arrow (←)' })\n                .button({ key: keys.direction_arrow_right,\n                          icon: 'glyphicon glyphicon-arrow-right',\n                          tooltip: 'Direction arrow (→)' })\n                .button({ key: keys.direction_arrow_up,\n                          icon: 'glyphicon glyphicon-arrow-up',\n                          tooltip: 'Direction arrow (↑)' })\n                .button({ key: keys.direction_arrow_down,\n                          icon: 'glyphicon glyphicon-arrow-down',\n                          tooltip: 'Direction arrow (↓)' });\n    }\n\n    // set up mode callbacks\n    var select_button = function(id) {\n        // toggle the button\n        $(this.selection.node()).find('#' + id)\n            .button('toggle');\n\n        // menu buttons\n        var ids = ['zoom-mode-menu-button', 'brush-mode-menu-button',\n                   'build-mode-menu-button', 'rotate-mode-menu-button',\n                   'view-mode-menu-button', 'text-mode-menu-button'];\n        ids.forEach(function(this_id) {\n            var b_id = this_id.replace('-menu', '');\n            this.selection.select('#' + this_id)\n                .select('span')\n                .classed('glyphicon', b_id == id)\n                .classed('glyphicon-ok', b_id == id);\n        }.bind(this));\n    };\n    this.callback_manager.set('zoom_mode', select_button.bind(this, 'zoom-mode-button'));\n    this.callback_manager.set('brush_mode', select_button.bind(this, 'brush-mode-button'));\n    this.callback_manager.set('build_mode', select_button.bind(this, 'build-mode-button'));\n    this.callback_manager.set('rotate_mode', select_button.bind(this, 'rotate-mode-button'));\n    this.callback_manager.set('view_mode', select_button.bind(this, 'view-mode-button'));\n    this.callback_manager.set('text_mode', select_button.bind(this, 'text-mode-button'));\n\n    // definitions\n    function load_map_for_file(error, map_data) {\n        /** Load a map. This reloads the whole builder.\n\n         */\n\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading map: ' + error, 2000);\n            return;\n        }\n\n        try {\n            check_map(map_data);\n            this.load_map(map_data);\n            this.map.set_status('Loaded map ' + map_data[0].map_name, 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading map: ' + e, 2000);\n        }\n\n        // definitions\n        function check_map(data) {\n            /** Perform a quick check to make sure the map is mostly valid.\n\n             */\n\n            if (!('map_id' in data[0] && 'reactions' in data[1] &&\n                  'nodes' in data[1] && 'canvas' in data[1]))\n                throw new Error('Bad map data.');\n        }\n    }\n    function load_model_for_file(error, data) {\n        /** Load a cobra model. Redraws the whole map if the\n         highlight_missing option is true.\n\n         */\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Error loading model: ' + error, 2000);\n            return;\n        }\n\n        try {\n            this.load_model(data, true);\n            this.build_input.toggle(false);\n            if ('id' in data)\n                this.map.set_status('Loaded model ' + data.id, 3000);\n            else\n                this.map.set_status('Loaded model (no model id)', 3000);\n        } catch (e) {\n            console.warn(e);\n            this.map.set_status('Error loading model: ' + e, 2000);\n        }\n\n    }\n    function load_reaction_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off gene data\n        if (data !== null)\n            this.set_gene_data(null);\n\n        this.set_reaction_data(data);\n    }\n    function load_metabolite_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        this.set_metabolite_data(data);\n    }\n    function load_gene_data_for_file(error, data) {\n        if (error) {\n            console.warn(error);\n            this.map.set_status('Could not parse file as JSON or CSV', 2000);\n            return;\n        }\n        // turn off reaction data\n        if (data !== null)\n            this.set_reaction_data(null);\n\n        // turn on gene_reaction_rules\n        this.settings.set_conditional('show_gene_reaction_rules', true);\n\n        this.set_gene_data(data);\n    }\n}\n\nfunction _setup_simple_zoom_buttons(button_selection, keys) {\n    var button_panel = button_selection.append('div')\n            .attr('id', 'simple-button-panel');\n\n    // buttons\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_in,\n                           text: '+',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom in (Ctrl +)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.zoom_out,\n                           text: '–',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom out (Ctrl -)' });\n    ui.individual_button(button_panel.append('div'),\n                         { key: keys.extent_canvas,\n                           text: '↔',\n                           classes: 'simple-button',\n                           tooltip: 'Zoom to canvas (Ctrl 1)' });\n\n}\n\nfunction _toggle_direction_buttons(on_off) {\n    if (on_off===undefined)\n        on_off = !this.direction_buttons.style('visibility')=='visible';\n    this.direction_buttons.style('visibility', on_off ? 'visible' : 'hidden');\n}\n\nfunction _setup_status(selection, map) {\n    var status_bar = selection.append('div').attr('id', 'status');\n    map.callback_manager.set('set_status', function(status) {\n        status_bar.html(status);\n    });\n    return status_bar;\n}\n\nfunction _setup_quick_jump(selection) {\n    // function to load a map\n    var load_fn = function(new_map_name, quick_jump_path, callback) {\n        if (this.options.enable_editing && !this.options.never_ask_before_quit) {\n            if (!(confirm(('You will lose any unsaved changes.\\n\\n' +\n                           'Are you sure you want to switch maps?')))) {\n                if (callback) callback(false);\n                return;\n            }\n        }\n        this.map.set_status('Loading map ' + new_map_name + ' ...');\n        var url = utils.name_to_url(new_map_name, quick_jump_path);\n        d3.json(url, function(error, data) {\n            if (error) {\n                console.warn('Could not load data: ' + error);\n                if (callback) callback(false);\n            }\n            // run callback before load_map so the new map has the correct\n            // quick_jump menu\n            if (callback) callback(true);\n            // now reload\n            this.load_map(data);\n            this.map.set_status('');\n        }.bind(this));\n    }.bind(this);\n\n    // make the quick jump object\n    this.quick_jump = QuickJump(selection, load_fn);\n}\n\nfunction _setup_modes(map, brush, zoom_container) {\n    // set up zoom+pan and brush modes\n    var was_enabled = {};\n    map.callback_manager.set('start_rotation', function() {\n        was_enabled.brush = brush.enabled;\n        brush.toggle(false);\n        was_enabled.zoom = zoom_container.zoom_on;\n        zoom_container.toggle_pan_drag(false);\n        was_enabled.selectable_mousedown = map.behavior.selectable_mousedown!=null;\n        map.behavior.toggle_selectable_click(false);\n        was_enabled.label_mousedown = map.behavior.label_mousedown!=null;\n        map.behavior.toggle_label_mousedown(false);\n    });\n    map.callback_manager.set('end_rotation', function() {\n        brush.toggle(was_enabled.brush);\n        zoom_container.toggle_pan_drag(was_enabled.zoom);\n        map.behavior.toggle_selectable_click(was_enabled.selectable_mousedown);\n        map.behavior.toggle_label_mousedown(was_enabled.label_mousedown);\n        was_enabled = {};\n    });\n}\n\nfunction _get_keys(map, zoom_container, search_bar, settings_bar, enable_editing) {\n    var keys = {\n        save: { key: 83, modifiers: { control: true }, // ctrl-s\n                target: map,\n                fn: map.save },\n        save_svg: { key: 83, modifiers: { control: true, shift: true },\n                    target: map,\n                    fn: map.save_svg },\n        load: { key: 79, modifiers: { control: true }, // ctrl-o\n                fn: null }, // defined by button\n        convert_map: { fn: this.map.convert_map.bind(this.map) },\n        clear_map: { fn: this.map.clear_map.bind(this.map) },\n        load_model: { key: 77, modifiers: { control: true }, // ctrl-m\n                      fn: null }, // defined by button\n        clear_model: { fn: this.load_model.bind(this, null, true) },\n        load_reaction_data: { fn: null }, // defined by button\n        clear_reaction_data: { target: this,\n                               fn: function() { this.set_reaction_data(null); }},\n        load_metabolite_data: { fn: null }, // defined by button\n        clear_metabolite_data: { target: this,\n                                 fn: function() { this.set_metabolite_data(null); }},\n        load_gene_data: { fn: null }, // defined by button\n        clear_gene_data: { fn: function() {\n            this.set_gene_data(null, true);\n        }.bind(this)},\n        zoom_in: { key: 187, modifiers: { control: true }, // ctrl +\n                   target: zoom_container,\n                   fn: zoom_container.zoom_in },\n        zoom_out: { key: 189, modifiers: { control: true }, // ctrl -\n                    target: zoom_container,\n                    fn: zoom_container.zoom_out },\n        extent_nodes: { key: 48, modifiers: { control: true }, // ctrl-0\n                        target: map,\n                        fn: map.zoom_extent_nodes },\n        extent_canvas: { key: 49, modifiers: { control: true }, // ctrl-1\n                         target: map,\n                         fn: map.zoom_extent_canvas },\n        search: { key: 70, modifiers: { control: true }, // ctrl-f\n                  fn: search_bar.toggle.bind(search_bar, true) },\n        view_mode: { fn: this.view_mode.bind(this),\n                     ignore_with_input: true },\n        show_settings: { key: 188, modifiers: { control: true }, // Ctrl ,\n                         fn: settings_bar.toggle.bind(settings_bar) }\n    };\n    if (enable_editing) {\n        utils.extend(keys, {\n            build_mode: { key: 78, // n\n                          fn: this.build_mode.bind(this),\n                          ignore_with_input: true },\n            zoom_mode: { key: 90, // z\n                         fn: this.zoom_mode.bind(this),\n                         ignore_with_input: true },\n            brush_mode: { key: 86, // v\n                          fn: this.brush_mode.bind(this),\n                          ignore_with_input: true },\n            rotate_mode: { key: 82, // r\n                           fn: this.rotate_mode.bind(this),\n                           ignore_with_input: true },\n            text_mode: { key: 84, // t\n                         fn: this.text_mode.bind(this),\n                         ignore_with_input: true },\n            toggle_beziers: { key: 66,\n                              target: map,\n                              fn: map.toggle_beziers,\n                              ignore_with_input: true  }, // b\n            delete: { key: 8, modifiers: { control: true }, // ctrl-backspace\n                      target: map,\n                      fn: map.delete_selected,\n                      ignore_with_input: true },\n            delete_del: { key: 46, modifiers: { control: false }, // Del\n                          target: map,\n                          fn: map.delete_selected,\n                          ignore_with_input: true },\n            toggle_primary: { key: 80, // p\n                              target: map,\n                              fn: map.toggle_selected_node_primary,\n                              ignore_with_input: true },\n            cycle_primary: { key: 67, // c\n                             target: map,\n                             fn: map.cycle_primary_node,\n                             ignore_with_input: true },\n            direction_arrow_right: { key: 39, // right\n                                     fn: this.build_input.direction_arrow.right\n                                     .bind(this.build_input.direction_arrow),\n                                     ignore_with_input: true },\n            direction_arrow_down: { key: 40, // down\n                                    fn: this.build_input.direction_arrow.down\n                                    .bind(this.build_input.direction_arrow),\n                                    ignore_with_input: true },\n            direction_arrow_left: { key: 37, // left\n                                    fn: this.build_input.direction_arrow.left\n                                    .bind(this.build_input.direction_arrow),\n                                    ignore_with_input: true },\n            direction_arrow_up: { key: 38, // up\n                                  fn: this.build_input.direction_arrow.up\n                                  .bind(this.build_input.direction_arrow),\n                                  ignore_with_input: true },\n            undo: { key: 90, modifiers: { control: true },\n                    target: map.undo_stack,\n                    fn: map.undo_stack.undo },\n            redo: { key: 90, modifiers: { control: true, shift: true },\n                    target: map.undo_stack,\n                    fn: map.undo_stack.redo },\n            select_all: { key: 65, modifiers: { control: true }, // Ctrl Shift a\n                          fn: map.select_all.bind(map) },\n            select_none: { key: 65, modifiers: { control: true, shift: true }, // Ctrl Shift a\n                           fn: map.select_none.bind(map) },\n            invert_selection: { fn: map.invert_selection.bind(map) }\n        });\n    }\n    return keys;\n}\n\nfunction _setup_confirm_before_exit() {\n    /** Ask if the user wants to exit the page (to avoid unplanned refresh).\n\n     */\n\n    window.onbeforeunload = function(e) {\n        // If we haven't been passed the event get the window.event\n        e = e || window.event;\n        return  (this.options.never_ask_before_quit ? null :\n                 'You will lose any unsaved changes.');\n    }.bind(this);\n}\n","/** CallbackManager */\n\nvar utils = require('./utils');\nvar _ = require('underscore');\n\n\nvar CallbackManager = utils.make_class();\nCallbackManager.prototype = {\n    init: init,\n    set: set,\n    remove: remove,\n    run: run\n};\nmodule.exports = CallbackManager;\n\n\nfunction init() {\n\n}\n\n\nfunction set(name, fn) {\n    /** As in d3 callbacks, you can namespace your callbacks after a period:\n\n     select_metabolite.direction_arrow\n     select_metabolite.input\n\n     Both are called by select_metabolite\n\n\n     TODO add *arguments to set, as in _.defer()\n\n     */\n    if (this.callbacks===undefined) this.callbacks = {};\n    if (this.callbacks[name]===undefined) this.callbacks[name] = [];\n    this.callbacks[name].push(fn);\n\n    return this;\n}\n\n\nfunction remove(name) {\n    /** Remove a callback by name\n\n     */\n    if (this.callbacks===undefined || Object.keys(this.callbacks).length==0) {\n        console.warn('No callbacks to remove');\n    }\n    delete this.callbacks[name];\n    return this;\n}\n\n\nfunction run(name, this_arg) {\n    /** Run all callbacks that match the portion of name before the period ('.').\n\n     Arguments\n     ---------\n\n     name: The callback name, which can include a tag after a '.' to\n     specificy a particular callback.\n\n     this_arg: (Optional, Default: null) The object assigned to `this` in\n     the callback.\n\n     */\n    if (_.isUndefined(this.callbacks)) return this;\n    if (_.isUndefined(this_arg)) this_arg = null;\n    // pass all but the first (name) argument to the callback\n    var pass_args = Array.prototype.slice.call(arguments, 2);\n    // look for matching callback names\n    for (var a_name in this.callbacks) {\n        var split_name = a_name.split('.')[0];\n        if (split_name==name) {\n            this.callbacks[a_name].forEach(function(fn) {\n                fn.apply(this_arg, pass_args);\n            });\n        }\n    }\n    return this;\n}\n","/** Canvas. Defines a canvas that accepts drag/zoom events and can be resized.\n\n Canvas(selection, x, y, width, height)\n\n Adapted from http://bl.ocks.org/mccannf/1629464.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Canvas = utils.make_class();\nCanvas.prototype = {\n    init: init,\n    toggle_resize: toggle_resize,\n    setup: setup,\n    size_and_location: size_and_location\n};\nmodule.exports = Canvas;\n\n\nfunction init(selection, size_and_location) {\n    this.selection = selection;\n    this.x = size_and_location.x;\n    this.y = size_and_location.y;\n    this.width = size_and_location.width;\n    this.height = size_and_location.height;\n\n    // enable by default\n    this.resize_enabled = true;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    this.setup();\n}\n\nfunction toggle_resize(on_off) {\n    /** Turn the resize on or off\n\n     */\n    if (on_off===undefined) on_off = !this.resize_enabled;\n\n    if (on_off) {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'auto');\n    } else {\n        this.selection.selectAll('.drag-rect')\n            .style('pointer-events', 'none');\n    }\n}\n\nfunction setup() {\n    var self = this,\n        extent = {\"x\": this.width, \"y\": this.height},\n        dragbar_width = 100,\n        mouse_node_mult = 10,\n        new_sel = this.selection.append('g')\n            .classed('canvas-group', true)\n            .data([{x: this.x, y: this.y}]);\n\n    var mouse_node = new_sel.append('rect')\n            .attr('id', 'mouse-node')\n            .attr(\"width\", this.width*mouse_node_mult)\n            .attr(\"height\", this.height*mouse_node_mult)\n            .attr(\"transform\", \"translate(\"+[self.x - this.width*mouse_node_mult/2,\n                                             self.y - this.height*mouse_node_mult/2]+\")\")\n            .attr('pointer-events', 'all');\n    this.mouse_node = mouse_node;\n\n    var rect = new_sel.append('rect')\n            .attr('id', 'canvas')\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height)\n            .attr(\"transform\", \"translate(\"+[self.x, self.y]+\")\");\n\n    var drag_right = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", rdragresize),\n        drag_left = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", ldragresize),\n        drag_top = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", tdragresize),\n        drag_bottom = d3.behavior.drag()\n            .origin(Object)\n            .on(\"dragstart\", stop_propagation)\n            .on(\"drag\", bdragresize);\n\n    var left = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"id\", \"dragleft\")\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_left);\n\n    var right = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + self.width - (dragbar_width/2),\n                                      d.y + (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragright\")\n            .attr(\"height\", this.height - dragbar_width)\n            .attr(\"width\", dragbar_width)\n            .attr(\"cursor\", \"ew-resize\")\n            .classed('resize-rect', true)\n            .call(drag_right);\n\n    var top = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y - (dragbar_width/2) ]+')';\n            })\n            .attr(\"height\", dragbar_width)\n            .attr(\"id\", \"dragtop\")\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_top);\n\n    var bottom = new_sel.append(\"rect\")\n            .classed('drag-rect', true)\n            .attr('transform', function(d) {\n                return 'translate('+[ d.x + (dragbar_width/2),\n                                      d.y + self.height - (dragbar_width/2) ]+')';\n            })\n            .attr(\"id\", \"dragbottom\")\n            .attr(\"height\", dragbar_width)\n            .attr(\"width\", this.width - dragbar_width)\n            .attr(\"cursor\", \"ns-resize\")\n            .classed('resize-rect', true)\n            .call(drag_bottom);\n\n    // definitions\n    function stop_propagation() {\n        d3.event.sourceEvent.stopPropagation();\n    }\n    function transform_string(x, y, current_transform) {\n        var tr = utils.d3_transform_catch(current_transform),\n            translate = tr.translate;\n        if (x!==null) translate[0] = x;\n        if (y!==null) translate[1] = y;\n        return 'translate('+translate+')';\n    }\n    function ldragresize(d) {\n        var oldx = d.x;\n        d.x = Math.min(d.x + self.width - (dragbar_width / 2), d3.event.x);\n        self.x = d.x;\n        self.width = self.width + (oldx - d.x);\n        left.attr(\"transform\", function(d) {\n            return transform_string(d.x - (dragbar_width / 2), null, left.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, mouse_node.attr('transform'));\n        }).attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(d.x, null, rect.attr('transform'));\n        }).attr(\"width\", self.width);\n        top.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, top.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(d.x + (dragbar_width/2), null, bottom.attr('transform'));\n        }).attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function rdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragx = Math.max(d.x + (dragbar_width/2), d.x + self.width + d3.event.dx);\n        //recalculate width\n        self.width = dragx - d.x;\n        //move the right drag handle\n        right.attr(\"transform\", function(d) {\n            return transform_string(dragx - (dragbar_width/2), null, right.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"width\", self.width*mouse_node_mult);\n        rect.attr(\"width\", self.width);\n        top.attr(\"width\", self.width - dragbar_width);\n        bottom.attr(\"width\", self.width - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function tdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var oldy = d.y;\n        d.y = Math.min(d.y + self.height - (dragbar_width / 2), d3.event.y);\n        self.y = d.y;\n        self.height = self.height + (oldy - d.y);\n        top.attr(\"transform\", function(d) {\n            return transform_string(null, d.y - (dragbar_width / 2), top.attr('transform'));\n        });\n        mouse_node.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, mouse_node.attr('transform'));\n        }).attr(\"width\", self.height*mouse_node_mult);\n        rect.attr(\"transform\", function(d) {\n            return transform_string(null, d.y, rect.attr('transform'));\n        }).attr(\"height\", self.height);\n        left.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), left.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n        right.attr(\"transform\", function(d) {\n            return transform_string(null, d.y + (dragbar_width/2), right.attr('transform'));\n        }).attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n\n    function bdragresize(d) {\n        d3.event.sourceEvent.stopPropagation();\n        var dragy = Math.max(d.y + (dragbar_width/2), d.y + self.height + d3.event.dy);\n        //recalculate width\n        self.height = dragy - d.y;\n        //move the right drag handle\n        bottom.attr(\"transform\", function(d) {\n            return transform_string(null, dragy - (dragbar_width/2), bottom.attr('transform'));\n        });\n        //resize the drag rectangle\n        //as we are only resizing from the right, the x coordinate does not need to change\n        mouse_node.attr(\"height\", self.height*mouse_node_mult);\n        rect.attr(\"height\", self.height);\n        left.attr(\"height\", self.height - dragbar_width);\n        right.attr(\"height\", self.height - dragbar_width);\n\n        self.callback_manager.run('resize');\n    }\n}\n\nfunction size_and_location() {\n    return { x: this.x,\n             y: this.y,\n             width: this.width,\n             height: this.height };\n}\n","/** CobraModel\n *\n */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nvar CobraModel = utils.make_class();\n// class methods\nCobraModel.from_exported_data = from_exported_data;\nCobraModel.from_cobra_json = from_cobra_json;\nCobraModel.build_reaction_string = build_reaction_string;\n// instance methods\nCobraModel.prototype = { init: init,\n                         apply_reaction_data: apply_reaction_data,\n                         apply_metabolite_data: apply_metabolite_data,\n                         apply_gene_data: apply_gene_data,\n                         model_for_export: model_for_export };\nmodule.exports = CobraModel;\n\n// class methods\nfunction build_reaction_string(stoichiometries, is_reversible) {\n    /** Return a reaction string for the given stoichiometries.\n\n     Adapted from cobra.core.Reaction.build_reaction_string().\n\n     Arguments\n     ---------\n\n     stoichiometries: An object with metabolites as keys and\n     stoichiometries as values.\n\n     is_reversible: Boolean. Whether the reaction is reversible.\n\n     */\n\n    var format = function(number) {\n        if (number == 1)\n            return \"\";\n        return String(number) + \" \";\n    };\n    var reactant_dict = {},\n        product_dict = {},\n        reactant_bits = [],\n        product_bits = [];\n    for (var the_metabolite in stoichiometries) {\n        var coefficient = stoichiometries[the_metabolite];\n        if (coefficient > 0)\n            product_bits.push(format(coefficient) + the_metabolite);\n        else\n            reactant_bits.push(format(Math.abs(coefficient)) + the_metabolite);\n    }\n    var reaction_string = reactant_bits.join(' + ');\n    if (is_reversible) {\n        reaction_string += ' ↔ ';\n    } else {\n        reaction_string += ' → ';\n    }\n    reaction_string += product_bits.join(' + ');\n    return reaction_string;\n}\n\nfunction from_exported_data(data) {\n    /** Use data generated by CobraModel.model_for_export() to make a new\n     CobraModel object.\n\n     */\n    if (!(data.reactions && data.metabolites))\n        throw new Error('Bad model data.');\n\n    var model = new CobraModel();\n    model.reactions = data.reactions;\n    model.metabolites = data.metabolites;\n    return model;\n}\n\nfunction from_cobra_json(model_data) {\n    /** Use a JSON Cobra model exported by COBRApy to make a new CobraModel\n     object.\n\n     The COBRA \"id\" becomes a \"bigg_id\", and \"upper_bound\" and \"lower_bound\"\n     bounds become \"reversibility\".\n\n     Fills out a \"genes\" list.\n\n     */\n    // reactions and metabolites\n    if (!(model_data.reactions && model_data.metabolites))\n        throw new Error('Bad model data.');\n\n    // make a gene dictionary\n    var genes = {};\n    for (var i = 0, l = model_data.genes.length; i < l; i++) {\n        var r = model_data.genes[i],\n            the_id = r.id;\n        genes[the_id] = r;\n    }\n\n    var model = new CobraModel();\n\n    model.reactions = {};\n    for (var i = 0, l = model_data.reactions.length; i<l; i++) {\n        var r = model_data.reactions[i],\n            the_id = r.id,\n            reaction = utils.clone(r);\n        delete reaction.id;\n        reaction.bigg_id = the_id;\n        // add the appropriate genes\n        reaction.genes = [];\n\n        // set reversibility\n        reaction.reversibility = (reaction.lower_bound < 0 && reaction.upper_bound > 0);\n        if (reaction.upper_bound <= 0 && reaction.lower_bound < 0) {\n            // reverse stoichiometries\n            for (var met_id in reaction.metabolites) {\n                reaction.metabolites[met_id] = -reaction.metabolites[met_id];\n            }\n        }\n        delete reaction.lower_bound;\n        delete reaction.upper_bound;\n\n        if ('gene_reaction_rule' in reaction) {\n            var gene_ids = data_styles.genes_for_gene_reaction_rule(reaction.gene_reaction_rule);\n            gene_ids.forEach(function(gene_id) {\n                if (gene_id in genes) {\n                    var gene = utils.clone(genes[gene_id]);\n                    // rename id to bigg_id\n                    gene.bigg_id = gene.id;\n                    delete gene.id;\n                    reaction.genes.push(gene);\n                } else {\n                    console.warn('Could not find gene for gene_id ' + gene_id);\n                }\n            });\n        }\n        model.reactions[the_id] = reaction;\n    }\n    model.metabolites = {};\n    for (var i=0, l=model_data.metabolites.length; i<l; i++) {\n        var r = model_data.metabolites[i],\n            the_id = r.id,\n            met = utils.clone(r);\n        delete met.id;\n        met.bigg_id = the_id;\n        model.metabolites[the_id] = met;\n    }\n    return model;\n}\n\n// instance methods\nfunction init() {\n    this.reactions = {};\n    this.metabolites = {};\n    this.cofactors = ['atp', 'adp', 'nad', 'nadh', 'nadp', 'nadph', 'gtp',\n                      'gdp', 'h', 'coa'];\n}\n\nfunction apply_reaction_data(reaction_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_reaction_data overrides apply_gene_data.\n\n     */\n    data_styles.apply_reaction_data_to_reactions(this.reactions, reaction_data,\n                                                 styles, compare_style);\n}\n\nfunction apply_metabolite_data(metabolite_data, styles, compare_style) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     */\n    data_styles.apply_metabolite_data_to_nodes(this.metabolites, metabolite_data,\n                                               styles, compare_style);\n}\n\nfunction apply_gene_data(gene_data_obj, styles, identifiers_on_map,\n                         compare_style, and_method_in_gene_reaction_rule) {\n    /** Apply data to model. This is only used to display options in\n     BuildInput.\n\n     apply_gene_data overrides apply_reaction_data.\n\n     */\n    data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                             styles, identifiers_on_map,\n                                             compare_style,\n                                             and_method_in_gene_reaction_rule);\n}\n\nfunction model_for_export() {\n    /** Export a CobraModel object for reloading later.\n\n     This object is not for loading into COBRApy! Export to COBRApy is not\n     currently supported.\n\n     */\n    return { reactions: this.reactions,\n             metabolites: this.metabolites };\n}\n","/** DataMenu */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = function(options) {\n    var o = utils.set_options(options, {\n        selection: null,\n        getdatafiles: null,\n        datafiles: null,\n        update_callback: null,\n        target: null});\n\n    if (o.selection===null)\n        throw new Error('No selection provided for DataMenu');\n\n    // setup dropdown menu\n    // Append menu if it doesn't exist\n    var menu = o.selection.select('.data-menu');\n    if (menu.empty()) {\n        menu = o.selection.append('div')\n            .attr('class','data-menu');\n    }\n    var select_sel = menu.append('form')\n            .append('select').attr('class','dropdown-menu');\n\n    if (o.getdatafiles) {\n        if (o.datafiles) {\n            console.warn('DataMenu: getdatafiles option overrides datafiles');\n        }\n        d3.json(o.getdatafiles, function(error, d) {\n            // returns json object:  { data: [file0, file1, ...] }\n            if (error) {\n                return console.warn(error);\n            } else {\n                load_with_files(o.target, d.data, select_sel, o.update_callback, o.selection);\n            }\n            return null;\n        });\n    } else if (o.datafiles) {\n        load_with_files(o.target, o.datafiles, select_sel, o.update_callback, o.selection);\n    } else {\n        console.warn('DataMenu: No datafiles given');\n    }\n\n    return { update: update };\n\n    // definitions\n    function load_with_files(t, files, select_sel, update_callback, selection) {\n\n        //when it changes\n        select_sel.node().addEventListener(\"change\", function() {\n            load_datafile(t, this.value, selection, update_callback);\n        }, false);\n\n        var file = files[0];\n\n        update(files, select_sel);\n        load_datafile(t, file, selection, update_callback);\n    };\n    function load_datafile(t, this_file, selection, callback) {\n        utils.load_the_file(t, this_file, function(error, data) {\n            if (error) {\n                return console.warn(error);\n                selection.append('error loading');\n                o.data = null;\n            } else {\n                o.data = data;\n                if (callback) {\n                    callback(data);\n                }\n            }\n        });\n    };\n\n    function update(list, select_sel) {\n        // update select element with d3 selection /select_sel/ to have options\n        // given by /list/\n        // TODO remove paths from file list\n        select_sel.selectAll(\".menu-option\")\n            .data(list)\n            .enter()\n            .append('option')\n            .attr('value', function (d) { return d; } )\n            .text(function (d) { return d; } );\n        // TODO set value to default_filename_index\n        select_sel.node().focus();\n    };\n\n    function get_data() {\n        return o.data;\n    };\n};\n","/** DirectionArrow. A constructor for an arrow that can be rotated and dragged,\n and supplies its direction. */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar DirectionArrow = utils.make_class();\nDirectionArrow.prototype = {\n    init: init,\n    set_location: set_location,\n    set_rotation: set_rotation,\n    displace_rotation: displace_rotation,\n    get_rotation: get_rotation,\n    toggle: toggle,\n    show: show,\n    hide: hide,\n    right: right,\n    left: left,\n    up: up,\n    down: down,\n    _setup_drag: _setup_drag\n};\nmodule.exports = DirectionArrow;\n\n\n// definitions\nfunction init(sel) {\n    this.arrow_container = sel.append('g')\n        .attr('id', 'direction-arrow-container')\n        .attr('transform', 'translate(0,0)rotate(0)');\n    this.arrow = this.arrow_container.append('path')\n        .classed('direction-arrow', true)\n        .attr('d', path_for_arrow())\n        .style('visibility', 'hidden')\n        .attr('transform', 'translate(30,0)scale(2.5)');\n\n    this.sel = sel;\n    this.center = { x: 0, y: 0 };\n\n    this._setup_drag();\n    this.dragging = false;\n\n    this.is_visible = false;\n    this.show();\n\n    // definitions\n    function path_for_arrow() {\n        return \"M0 -5 L0 5 L20 5 L20 10 L30 0 L20 -10 L20 -5 Z\";\n    }\n}\nfunction set_location(coords) {\n    /** Move the arrow to coords.\n     */\n    this.center = coords;\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+coords.x+','+coords.y+')rotate('+transform.rotate+')');\n}\nfunction set_rotation(rotation) {\n    /** Rotate the arrow to rotation.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')rotate('+rotation+')');\n}\nfunction displace_rotation(d_rotation) {\n    /** Displace the arrow rotation by a set amount.\n     */\n    var transform = utils.d3_transform_catch(this.arrow_container.attr('transform'));\n    this.arrow_container.attr('transform',\n                              'translate('+transform.translate+')'+\n                              'rotate('+(transform.rotate+d_rotation)+')');\n}\nfunction get_rotation() {\n    /** Returns the arrow rotation.\n     */\n    return utils.d3_transform_catch(this.arrow_container.attr('transform')).rotate;\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_visible = !this.is_visible;\n    else this.is_visible = on_off;\n    this.arrow.style('visibility', this.is_visible ? 'visible' : 'hidden');\n}\nfunction show() {\n    this.toggle(true);\n}\nfunction hide() {\n    this.toggle(false);\n}\nfunction right() {\n    this.set_rotation(0);\n}\nfunction down() {\n    this.set_rotation(90);\n}\nfunction left() {\n    this.set_rotation(180);\n}\nfunction up() {\n    this.set_rotation(270);\n}\n\nfunction _setup_drag() {\n    var b = d3.behavior.drag()\n            .on(\"dragstart\", function(d) {\n                // silence other listeners\n                d3.event.sourceEvent.stopPropagation();\n                this.dragging = true;\n            }.bind(this))\n            .on(\"drag.direction_arrow\", function(d) {\n                var displacement = { x: d3.event.dx,\n                                     y: d3.event.dy },\n                    location = { x: d3.mouse(this.sel.node())[0],\n                                 y: d3.mouse(this.sel.node())[1] },\n                    d_angle = utils.angle_for_event(displacement,\n                                                    location,\n                                                    this.center);\n                this.displace_rotation(utils.to_degrees(d_angle));\n            }.bind(this))\n            .on(\"dragend\", function(d) {\n                setTimeout(function() {\n                    this.dragging = false;\n                }.bind(this), 200);\n            }.bind(this));\n    this.arrow_container.call(b);\n}\n","/** Draw. Manages creating, updating, and removing objects during d3 data binding.\n\n Arguments\n ---------\n\n behavior: An escher.Behavior object.\n\n settings: An escher.Settings object.\n\n Callbacks\n ---------\n\n draw.callback_manager.run('create_membrane', draw, enter_selection);\n draw.callback_manager.run('update_membrane', draw, update_selection);\n draw.callback_manager.run('create_reaction', draw, enter_selection);\n draw.callback_manager.run('update_reaction', draw, update_selection);\n draw.callback_manager.run('create_reaction_label', draw, enter_selection);\n draw.callback_manager.run('update_reaction_label', draw, update_selection);\n draw.callback_manager.run('create_segment', draw, enter_selection);\n draw.callback_manager.run('update_segment', draw, update_selection);\n draw.callback_manager.run('create_bezier', draw, enter_selection);\n draw.callback_manager.run('update_bezier', draw, update_selection);\n draw.callback_manager.run('create_node', draw, enter_selection);\n draw.callback_manager.run('update_node', draw, update_selection);\n draw.callback_manager.run('create_text_label', draw, enter_selection);\n draw.callback_manager.run('update_text_label', draw, update_selection);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar Draw = utils.make_class();\n// instance methods\nDraw.prototype = {\n    init: init,\n    create_reaction: create_reaction,\n    update_reaction: update_reaction,\n    create_bezier: create_bezier,\n    update_bezier: update_bezier,\n    create_node: create_node,\n    update_node: update_node,\n    create_text_label: create_text_label,\n    update_text_label: update_text_label,\n    create_membrane: create_membrane,\n    update_membrane: update_membrane,\n    create_reaction_label: create_reaction_label,\n    update_reaction_label: update_reaction_label,\n    create_segment: create_segment,\n    update_segment: update_segment\n};\nmodule.exports = Draw;\n\n// definitions\nfunction init(behavior, settings) {\n    this.behavior = behavior;\n    this.settings = settings;\n    this.callback_manager = new CallbackManager();\n}\n\nfunction create_membrane(enter_selection) {\n    enter_selection.append('rect')\n        .attr('class', 'membrane');\n    this.callback_manager.run('create_membrane', this, enter_selection);\n}\n\nfunction update_membrane(update_selection) {\n    update_selection\n        .attr('width', function(d){ return d.width; })\n        .attr('height', function(d){ return d.height; })\n        .attr('transform', function(d){return 'translate('+d.x+','+d.y+')';})\n        .style('stroke-width', function(d) { return 10; })\n        .attr('rx', function(d){ return 20; })\n        .attr('ry', function(d){ return 20; });\n\n    this.callback_manager.run('update_membrane', this, update_selection);\n}\n\nfunction create_reaction(enter_selection) {\n    // attributes for new reaction group\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'r'+d.reaction_id; })\n        .attr('class', 'reaction')\n        .call(this.create_reaction_label.bind(this));\n\n    this.callback_manager.run('create_reaction', this, enter_selection);\n    return;\n}\n\nfunction update_reaction(update_selection, scale, cobra_model, drawn_nodes,\n                         defs, has_data_on_reactions) {\n    /** Run on the update selection for reactions.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     cobra_model: A CobraModel object.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     defs: The defs object generated by utils.setup_defs() (e.g. Map.defs).\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    // update reaction label\n    update_selection.select('.reaction-label-group')\n        .call(function(sel) {\n            return this.update_reaction_label(sel, has_data_on_reactions);\n        }.bind(this));\n\n    // draw segments\n    utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                               this.create_segment.bind(this),\n                               function(sel) {\n                                   return this.update_segment(sel, scale, cobra_model,\n                                                              drawn_nodes, defs,\n                                                              has_data_on_reactions);\n                               }.bind(this),\n                               function(sel) {\n                                   sel.remove();\n                               });\n\n    // run the callback\n    this.callback_manager.run('update_reaction', this, update_selection);\n}\n\nfunction create_reaction_label(enter_selection) {\n    /** Draw reaction label for selection.\n\n     */\n\n    var group = enter_selection.append('g')\n            .attr('class', 'reaction-label-group');\n    group.append('title'); // tooltip\n    group.append('text')\n        .attr('class', 'reaction-label label');\n    group.append('g')\n        .attr('class', 'all-genes-label-group');\n\n    this.callback_manager.run('create_reaction_label', this, enter_selection);\n}\n\nfunction update_reaction_label(update_selection, has_data_on_reactions) {\n    /** Run on the update selection for reaction labels.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     has_data_on_reactions: Boolean to determine whether data needs to be\n     drawn.\n\n     */\n\n    var decimal_format = d3.format('.4g'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        reaction_data_styles = this.settings.get_option('reaction_styles'),\n        show_gene_reaction_rules = this.settings.get_option('show_gene_reaction_rules'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        gene_font_size = this.settings.get_option('gene_font_size'),\n        label_mousedown_fn = this.behavior.label_mousedown,\n        label_mouseover_fn = this.behavior.label_mouseover,\n        label_mouseout_fn = this.behavior.label_mouseout;\n\n    // label location\n    update_selection\n        .attr('transform', function(d) {\n            return 'translate(' + d.label_x + ',' + d.label_y + ')';\n        })\n        .call(this.behavior.turn_off_drag)\n        .call(this.behavior.reaction_label_drag);\n\n    // update label visibility\n    var label = update_selection.select('.reaction-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        label\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_reactions && reaction_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .on('mousedown', label_mousedown_fn)\n            .on('mouseover', label_mouseover_fn)\n            .on('mouseout', label_mouseout_fn);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n    // gene label\n    var all_genes_g = update_selection.select('.all-genes-label-group')\n            .selectAll('.gene-label-group')\n            .data(function(d) {\n                var show_gene_string = ('gene_string' in d &&\n                                        d.gene_string !== null &&\n                                        show_gene_reaction_rules &&\n                                        (!hide_all_labels) &&\n                                        reaction_data_styles.indexOf('text') !== -1),\n                    show_gene_reaction_rule = ('gene_reaction_rule' in d &&\n                                               d.gene_reaction_rule !== null &&\n                                               show_gene_reaction_rules &&\n                                               (!hide_all_labels) );\n                if (show_gene_string) {\n                    return d.gene_string;\n                } else if (show_gene_reaction_rule) {\n                    // make the gene string with no data\n                    return data_styles.gene_string_for_data(d.gene_reaction_rule, null,\n                                                            d.genes, null, identifiers_on_map,\n                                                            null);\n                } else {\n                    return [];\n                }\n            });\n    // enter\n    var gene_g = all_genes_g.enter()\n            .append('g')\n            .attr('class', 'gene-label-group');\n    gene_g.append('text')\n        .attr('class', 'gene-label')\n        .style('font-size', gene_font_size + 'px');\n    gene_g.append('title');\n    // update\n    all_genes_g.attr('transform', function(d, i) {\n        return 'translate(0, ' + (gene_font_size * 1.5 * (i + 1)) + ')';\n    });\n    // update text\n    all_genes_g.select('text').text(function(d) {\n        return d['text'];\n    });\n    // update tooltip\n    all_genes_g.select('title').text(function(d) {\n        return d[identifiers_in_tooltip];\n    });\n    // exit\n    all_genes_g.exit()\n        .remove();\n\n    this.callback_manager.run('update_reaction_label', this, update_selection);\n}\n\nfunction create_segment(enter_selection) {\n    // create segments\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'segment-group')\n            .attr('id', function(d) { return 's'+d.segment_id; });\n\n    // create reaction arrow\n    g.append('path')\n        .attr('class', 'segment');\n\n    g.append('g')\n        .attr('class', 'arrowheads');\n\n    g.append('g')\n        .attr('class', 'stoichiometry-labels');\n\n    this.callback_manager.run('create_segment', this, enter_selection);\n}\n\nfunction update_segment(update_selection, scale, cobra_model,\n                        drawn_nodes, defs, has_data_on_reactions) {\n    var reaction_data_styles = this.settings.get_option('reaction_styles'),\n        should_size = (has_data_on_reactions && reaction_data_styles.indexOf('size') != -1),\n        should_color = (has_data_on_reactions && reaction_data_styles.indexOf('color') != -1),\n        no_data_size = this.settings.get_option('reaction_no_data_size'),\n        no_data_color = this.settings.get_option('reaction_no_data_color');\n\n    // update segment attributes\n    var highlight_missing  = this.settings.get_option('highlight_missing'),\n        hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        get_arrow_size = function(data, should_size) {\n            var width = 20,\n                height = 13;\n            if (should_size) {\n                height = (data === null ? no_data_size : scale.reaction_size(data));\n                // check for nan\n                if (isNaN(height))\n                    height = no_data_size;\n                width = height * 2;\n            }\n            return { width: width, height: height };\n        },\n        get_disp = function(arrow_size, reversibility, coefficient, node_is_primary) {\n            var arrow_height = ((reversibility || coefficient > 0) ?\n                                arrow_size.height :\n                                0),\n                r = node_is_primary ? primary_r : secondary_r;\n            return r + arrow_height + 10;\n        };\n    // update arrows\n    update_selection\n        .selectAll('.segment')\n        .datum(function() {\n            return this.parentNode.__data__;\n        })\n        .style('visibility', function(d) {\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        })\n        .attr('d', function(d) {\n            if (d.from_node_id === null || d.to_node_id === null)\n                return null;\n            var start = drawn_nodes[d.from_node_id],\n                end = drawn_nodes[d.to_node_id],\n                b1 = d.b1,\n                b2 = d.b2;\n            // if metabolite, then displace the arrow\n            if (start['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.from_node_coefficient,\n                                    start.node_is_primary);\n                var direction = (b1 === null) ? end : b1;\n                start = displaced_coords(disp, start, direction, 'start');\n            }\n            if (end['node_type'] == 'metabolite') {\n                var arrow_size = get_arrow_size(d.data, should_size),\n                    disp = get_disp(arrow_size, d.reversibility,\n                                    d.to_node_coefficient,\n                                    end.node_is_primary);\n                var direction = (b2 === null) ? start : b2;\n                end = displaced_coords(disp, direction, end, 'end');\n            }\n            var curve = ('M' + start.x + ',' + start.y + ' ');\n            if (b1 !== null && b2 !== null) {\n                curve += ('C' + b1.x + ',' + b1.y + ' ' +\n                          b2.x + ',' + b2.y + ' ');\n            }\n            curve += (end.x + ',' + end.y);\n            return curve;\n        })\n        .style('stroke', function(d) {\n            var reaction_id = this.parentNode.parentNode.__data__.bigg_id,\n                show_missing = (highlight_missing &&\n                                cobra_model !== null &&\n                                !(reaction_id in cobra_model.reactions));\n            if (show_missing) {\n                return 'red';\n            }\n            if (should_color) {\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            return null;\n        })\n        .style('stroke-width', function(d) {\n            if (should_size) {\n                var f = d.data;\n                return f === null ? no_data_size : scale.reaction_size(f);\n            } else {\n                return null;\n            }\n        });\n\n    // new arrowheads\n    var arrowheads = update_selection.select('.arrowheads')\n            .selectAll('.arrowhead')\n            .data(function (d) {\n                var arrowheads = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return arrowheads;\n\n                if (start.node_type == 'metabolite' && (d.reversibility || d.from_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.from_node_coefficient,\n                                        start.node_is_primary),\n                        direction = (b1 === null) ? end : b1,\n                        rotation = utils.to_degrees(utils.get_angle([start, direction])) + 90,\n                        loc = displaced_coords(disp, start, direction, 'start');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.from_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                if (end.node_type == 'metabolite' && (d.reversibility || d.to_node_coefficient > 0)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = get_disp(arrow_size, d.reversibility,\n                                        d.to_node_coefficient,\n                                        end.node_is_primary),\n                        direction = (b2 === null) ? start : b2,\n                        rotation = utils.to_degrees(utils.get_angle([end, direction])) + 90,\n                        loc = displaced_coords(disp, direction, end, 'end');\n                    arrowheads.push({ data: d.data,\n                                      x: loc.x,\n                                      y: loc.y,\n                                      size: arrow_size,\n                                      rotation: rotation,\n                                      show_arrowhead_flux: (((d.to_node_coefficient < 0)==(d.reverse_flux))\n                                                            || d.data==0)\n                                    });\n                }\n                return arrowheads;\n            });\n    arrowheads.enter().append('path')\n        .classed('arrowhead', true);\n    // update arrowheads\n    arrowheads.attr('d', function(d) {\n        return ('M' + [-d.size.width / 2, 0] +\n                ' L' + [0, d.size.height] +\n                ' L' + [d.size.width / 2, 0] + ' Z');\n    }).attr('transform', function(d) {\n        return 'translate(' + d.x + ',' + d.y + ')rotate(' + d.rotation + ')';\n    }).style('fill', function(d) {\n        if (should_color) {\n            if (d.show_arrowhead_flux) {\n                // show the flux\n                var f = d.data;\n                return f===null ? no_data_color : scale.reaction_color(f);\n            } else {\n                // if the arrowhead is not filled because it is reversed\n                return '#FFFFFF';\n            }\n        }\n        // default fill color\n        return null;\n    }).style('stroke', function(d) {\n        if (should_color) {\n            // show the flux color in the stroke whether or not the fill is present\n            var f = d.data;\n            return f===null ? no_data_color : scale.reaction_color(f);\n        }\n        // default stroke color\n        return null;\n    });\n    // remove\n    arrowheads.exit().remove();\n\n    // new stoichiometry labels\n    var stoichiometry_labels = update_selection.select('.stoichiometry-labels')\n            .selectAll('.stoichiometry-label')\n            .data(function (d) {\n                var labels = [],\n                    start = drawn_nodes[d.from_node_id],\n                    b1 = d.b1,\n                    end = drawn_nodes[d.to_node_id],\n                    b2 = d.b2,\n                    disp_factor = 1.5;\n                // hide_secondary_metabolites option\n                if (hide_secondary_metabolites &&\n                    ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                     (start['node_type']=='metabolite' && !start.node_is_primary)))\n                    return labels;\n\n                if (start.node_type=='metabolite' && (Math.abs(d.from_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b1 === null) ? end : b1;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, start));\n                    var loc = displaced_coords(disp, start, direction, 'start');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.from_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                if (end.node_type=='metabolite' && (Math.abs(d.to_node_coefficient) != 1)) {\n                    var arrow_size = get_arrow_size(d.data, should_size),\n                        disp = disp_factor * get_disp(arrow_size, false, 0, end.node_is_primary),\n                        direction = (b2 === null) ? start : b2;\n                    direction = utils.c_plus_c(direction, utils.rotate_coords(direction, 0.5, end));\n                    var loc = displaced_coords(disp, direction, end, 'end');\n                    loc = utils.c_plus_c(loc, {x:0, y:7});\n                    labels.push({ coefficient: Math.abs(d.to_node_coefficient),\n                                  x: loc.x,\n                                  y: loc.y,\n                                  data: d.data });\n                }\n                return labels;\n            });\n\n    // add labels\n    stoichiometry_labels.enter()\n        .append('text')\n        .attr('class', 'stoichiometry-label')\n        .attr('text-anchor', 'middle');\n    // update stoichiometry_labels\n    stoichiometry_labels\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .text(function(d) {\n            return d.coefficient;\n        })\n        .style('fill', function (d) {\n            if (should_color) {\n                // show the flux color\n                var f = d.data;\n                return f === null ? no_data_color : scale.reaction_color(f);\n            }\n            // default segment color\n            return null;\n        });\n    // remove\n    stoichiometry_labels.exit().remove();\n\n    this.callback_manager.run('update_segment', this, update_selection);\n}\n\nfunction create_bezier(enter_selection) {\n    var g = enter_selection.append('g')\n            .attr('id', function(d) { return d.bezier_id; })\n            .attr('class', function(d) { return 'bezier'; });\n    g.append('path')\n        .attr('class', 'connect-line');\n    g.append('circle')\n        .attr('class', function(d) { return 'bezier-circle '+d.bezier; })\n        .style('stroke-width', String(1)+'px')\n        .attr('r', String(7)+'px');\n\n    this.callback_manager.run('create_bezier', this, enter_selection);\n}\n\nfunction update_bezier(update_selection, show_beziers, drag_behavior,\n                       mouseover, mouseout, drawn_nodes, drawn_reactions) {\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n\n    if (!show_beziers) {\n        update_selection.attr('visibility', 'hidden');\n        return;\n    } else {\n        update_selection.attr('visibility', 'visible');\n    }\n\n    // hide secondary\n    update_selection\n        .style('visibility', function(d) {\n            var seg_data = drawn_reactions[d.reaction_id].segments[d.segment_id],\n                start = drawn_nodes[seg_data.from_node_id],\n                end = drawn_nodes[seg_data.to_node_id];\n            if (hide_secondary_metabolites &&\n                ((end['node_type']=='metabolite' && !end.node_is_primary) ||\n                 (start['node_type']=='metabolite' && !start.node_is_primary)))\n                return 'hidden';\n            return null;\n        });\n\n    // draw bezier points\n    update_selection.select('.bezier-circle')\n        .call(this.behavior.turn_off_drag)\n        .call(drag_behavior)\n        .on('mouseover', mouseover)\n        .on('mouseout', mouseout)\n        .attr('transform', function(d) {\n            if (d.x==null || d.y==null) return '';\n            return 'translate('+d.x+','+d.y+')';\n        });\n\n    // update bezier line\n    update_selection\n        .select('.connect-line')\n        .attr('d', function(d) {\n            var node,\n                segment_d = drawn_reactions[d.reaction_id].segments[d.segment_id];\n            node = (d.bezier=='b1' ?\n                    drawn_nodes[segment_d.from_node_id] :\n                    drawn_nodes[segment_d.to_node_id]);\n            if (d.x==null || d.y==null || node.x==null || node.y==null)\n                return '';\n            return 'M'+d.x+', '+d.y+' '+(node.x)+','+(node.y);\n        });\n\n    this.callback_manager.run('update_bezier', this, update_selection);\n}\n\nfunction create_node(enter_selection, drawn_nodes, drawn_reactions) {\n    /** Run on enter selection for nodes.\n\n     Arguments\n     ---------\n\n     enter_selection: The D3.js enter selection.\n\n     drawn_nodes: The nodes object (e.g. Map.nodes).\n\n     drawn_reactions: The reactions object (e.g. Map.reactions).\n\n     */\n\n    // create nodes\n    var g = enter_selection\n            .append('g')\n            .attr('class', 'node')\n            .attr('id', function(d) { return 'n'+d.node_id; });\n\n    // create metabolite circle and label\n    g.append('circle')\n        .attr('class', function(d) {\n            var c = 'node-circle';\n            if (d.node_type!==null)\n                c += (' ' + d.node_type + '-circle');\n            return c;\n        });\n    // labels\n    var metabolite_groups = g.filter(function(d) {\n        return d.node_type=='metabolite';\n    });\n    metabolite_groups.append('text')\n        .attr('class', 'node-label label');\n    metabolite_groups.append('title'); // tooltip\n\n    this.callback_manager.run('create_node', this, enter_selection);\n}\n\nfunction update_node(update_selection, scale, has_data_on_nodes,\n                     mousedown_fn, click_fn, mouseover_fn, mouseout_fn,\n                     drag_behavior, label_drag_behavior) {\n    /** Run on the update selection for nodes.\n\n     Arguments\n     ---------\n\n     update_selection: The D3.js update selection.\n\n     scale: A Scale object.\n\n     has_data_on_nodes: Boolean to determine whether data needs to be drawn.\n\n     mousedown_fn: A function to call on mousedown for a node.\n\n     click_fn: A function to call on click for a node.\n\n     mouseover_fn: A function to call on mouseover for a node.\n\n     mouseout_fn: A function to call on mouseout for a node.\n\n     drag_behavior: The D3.js drag behavior object for the nodes.\n\n     label_drag_behavior: The D3.js drag behavior object for the node labels.\n\n     */\n\n    // update circle and label location\n    var hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites'),\n        primary_r = this.settings.get_option('primary_metabolite_radius'),\n        secondary_r = this.settings.get_option('secondary_metabolite_radius'),\n        marker_r = this.settings.get_option('marker_radius'),\n        hide_all_labels = this.settings.get_option('hide_all_labels'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        identifiers_in_tooltip = (identifiers_on_map == 'bigg_id' ? 'name' : 'bigg_id'),\n        metabolite_data_styles = this.settings.get_option('metabolite_styles'),\n        no_data_style = { color: this.settings.get_option('metabolite_no_data_color'),\n                          size: this.settings.get_option('metabolite_no_data_size') };\n\n\n    var mg = update_selection\n            .select('.node-circle')\n            .attr('transform', function(d) {\n                return 'translate('+d.x+','+d.y+')';\n            })\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('r', function(d) {\n                if (d.node_type == 'metabolite') {\n                    var should_scale = (has_data_on_nodes &&\n                                        metabolite_data_styles.indexOf('size') != -1);\n                    if (should_scale) {\n                        var f = d.data;\n                        return f===null ? no_data_style['size'] : scale.metabolite_size(f);\n                    } else {\n                        return d.node_is_primary ? primary_r : secondary_r;\n                    }\n                }\n                // midmarkers and multimarkers\n                return marker_r;\n            })\n            .style('fill', function(d) {\n                if (d.node_type=='metabolite') {\n                    var should_color_data = (has_data_on_nodes &&\n                                             metabolite_data_styles.indexOf('color') != -1);\n                    if (should_color_data) {\n                        var f = d.data;\n                        return f===null ? no_data_style['color'] : scale.metabolite_color(f);\n                    } else {\n                        return null;\n                    }\n                }\n                // midmarkers and multimarkers\n                return null;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(drag_behavior)\n            .on('mousedown', mousedown_fn)\n            .on('click', click_fn)\n            .on('mouseover', mouseover_fn)\n            .on('mouseout', mouseout_fn);\n\n    // update node label visibility\n    var node_label = update_selection\n            .select('.node-label')\n            .attr('visibility', hide_all_labels ? 'hidden' : 'visible');\n    if (!hide_all_labels) {\n        node_label\n            .style('visibility', function(d) {\n                return (hide_secondary_metabolites && !d.node_is_primary) ? 'hidden' : null;\n            })\n            .attr('transform', function(d) {\n                return 'translate('+d.label_x+','+d.label_y+')';\n            })\n            .text(function(d) {\n                var t = d[identifiers_on_map];\n                if (has_data_on_nodes && metabolite_data_styles.indexOf('text') != -1)\n                    t += ' ' + d.data_string;\n                return t;\n            })\n            .call(this.behavior.turn_off_drag)\n            .call(label_drag_behavior);\n\n        // tooltip\n        update_selection.select('title').text(function(d) {\n            return d[identifiers_in_tooltip];\n        });\n    }\n\n    this.callback_manager.run('update_node', this, update_selection);\n}\n\nfunction create_text_label(enter_selection) {\n    enter_selection.append('g')\n        .attr('id', function(d) { return 'l'+d.text_label_id; })\n        .attr('class', 'text-label')\n        .append('text')\n        .attr('class', 'label');\n\n    this.callback_manager.run('create_text_label', this, enter_selection);\n}\n\nfunction update_text_label(update_selection) {\n    var mousedown_fn = this.behavior.text_label_mousedown,\n        click_fn = this.behavior.text_label_click,\n        drag_behavior = this.behavior.selectable_drag,\n        turn_off_drag = this.behavior.turn_off_drag;\n\n    update_selection\n        .select('.label')\n        .text(function(d) { return d.text; })\n        .attr('transform', function(d) { return 'translate('+d.x+','+d.y+')';})\n        .on('mousedown', mousedown_fn)\n        .on('click', click_fn)\n        .call(turn_off_drag)\n        .call(drag_behavior);\n\n    this.callback_manager.run('update_text_label', this, update_selection);\n}\n\nfunction displaced_coords(reaction_arrow_displacement, start, end, displace) {\n    utils.check_undefined(arguments, ['reaction_arrow_displacement', 'start', 'end', 'displace']);\n\n    var length = reaction_arrow_displacement,\n        hyp = utils.distance(start, end),\n        new_x, new_y;\n    if (!length || !hyp) console.error('Bad value');\n    if (displace=='start') {\n        new_x = start.x + length * (end.x - start.x) / hyp,\n        new_y = start.y + length * (end.y - start.y) / hyp;\n    } else if (displace=='end') {\n        new_x = end.x - length * (end.x - start.x) / hyp,\n        new_y = end.y - length * (end.y - start.y) / hyp;\n    } else { console.error('bad displace value: ' + displace); }\n    return {x: new_x, y: new_y};\n}\n","/** KeyManager */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar KeyManager = utils.make_class();\n// static methods\nKeyManager.reset_held_keys = reset_held_keys;\n// instance methods\nKeyManager.prototype = {\n    init: init,\n    update: update,\n    toggle: toggle,\n    add_escape_listener: add_escape_listener,\n    add_enter_listener: add_enter_listener,\n    add_key_listener: add_key_listener\n};\nmodule.exports = KeyManager;\n\n\n// static methods\nfunction reset_held_keys(h) {\n    h.command = false;\n    h.control = false;\n    h.option = false;\n    h.shift = false;\n}\n\n\n// instance methods\nfunction init(unique_map_id, assigned_keys, input_list, ctrl_equals_cmd) {\n    /** Assign keys for commands.\n\n     */\n\n    // identify this key manager\n    if (unique_map_id===undefined) unique_map_id = null;\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    if (assigned_keys===undefined) this.assigned_keys = {};\n    else this.assigned_keys = assigned_keys;\n    if (input_list===undefined) this.input_list = [];\n    else this.input_list = input_list;\n\n    if (ctrl_equals_cmd===undefined) ctrl_equals_cmd = true;\n    this.ctrl_equals_cmd = ctrl_equals_cmd;\n\n    this.held_keys = {};\n    reset_held_keys(this.held_keys);\n\n    this.enabled = true;\n\n    this.update();\n}\n\n\nfunction update() {\n    var held_keys = this.held_keys,\n        keys = this.assigned_keys,\n        self = this;\n\n    var modifier_keys = { command: 91,\n                          command_right: 93,\n                          control: 17,\n                          option: 18,\n                          shift: 16 };\n\n    try {\n        d3.select(window).on('keydown.key_manager' + this.unique_string, null);\n        d3.select(window).on('keyup.key_manager' + this.unique_string, null);\n    } catch (err) {\n        console.log('Not in a browser, so key manager does not work');\n        return;\n    }\n\n    if (!(this.enabled)) return;\n\n    d3.select(window).on('keydown.key_manager' + this.unique_string, function(ctrl_equals_cmd, input_list) {\n        var kc = d3.event.keyCode,\n            meaningless = true;\n        // check the inputs\n        var input_visible = false;\n        input_list.forEach(function(input) {\n            if (input.is_visible()) input_visible = true;\n        });\n        toggle_modifiers(modifier_keys, held_keys, kc, true);\n        for (var key_id in keys) {\n            var assigned_key = keys[key_id];\n            if (check_key(assigned_key, kc, held_keys, ctrl_equals_cmd)) {\n                meaningless = false;\n                if (!(assigned_key.ignore_with_input && input_visible)) {\n                    if (assigned_key.fn) {\n                        assigned_key.fn.call(assigned_key.target);\n                    } else {\n                        console.warn('No function for key');\n                    }\n                    // prevent browser action\n                    d3.event.preventDefault();\n                }\n            }\n        }\n        // Sometimes modifiers get 'stuck', so reset them once in a while.\n        // Only do this when a meaningless key is pressed\n        for (var k in modifier_keys)\n            if (modifier_keys[k] == kc) meaningless = false;\n        if (meaningless)\n            reset_held_keys(held_keys);\n    }.bind(null, this.ctrl_equals_cmd, this.input_list))\n        .on('keyup.key_manager' + this.unique_string, function() {\n            toggle_modifiers(modifier_keys, held_keys,\n                             d3.event.keyCode, false);\n        });\n    function toggle_modifiers(mod, held, kc, on_off) {\n        for (var k in mod)\n            if (mod[k] == kc)\n                held[k] = on_off;\n    }\n    function check_key(key, pressed, held, ctrl_equals_cmd) {\n        if (key.key != pressed) return false;\n        var mod = utils.clone(key.modifiers);\n        if (mod === undefined)\n            mod = { control: false,\n                    command: false,\n                    option: false,\n                    shift: false };\n        for (var k in held) {\n            if (ctrl_equals_cmd &&\n                mod['control'] &&\n                (k=='command' || k=='command_right' || k=='control') &&\n                (held['command'] || held['command_right'] || held['control'])) {\n                continue;\n            }\n            if (mod[k] === undefined) mod[k] = false;\n            if (mod[k] != held[k]) return false;\n        }\n        return true;\n    }\n}\nfunction toggle(on_off) {\n    /** Turn the brush on or off\n\n     */\n    if (on_off===undefined) on_off = !this.enabled;\n\n    this.enabled = on_off;\n    this.update();\n}\nfunction add_enter_listener(callback, id) {\n    /** Call the callback when the enter key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener(callback, 13, id);\n}\nfunction add_escape_listener(callback, id) {\n    /** Call the callback when the escape key is pressed, then\n     unregisters the listener.\n\n     */\n    return this.add_key_listener(callback, 27, id);\n}\nfunction add_key_listener(callback, kc, id) {\n    /** Call the callback when the key is pressed, then unregisters the\n     listener.\n\n     */\n\n    var event_name = 'keydown.' + kc;\n    if (id !== undefined)\n        event_name += ('.' + id);\n    event_name += this.unique_string;\n\n    var selection = d3.select(window);\n    selection.on(event_name, function() {\n        if (d3.event.keyCode==kc) {\n            callback();\n        }\n    });\n    return {\n        clear: function() {\n            selection.on(event_name, null);\n        }\n    };\n}\n","/** Map\n\n Defines the metabolic map data, and manages drawing and building.\n\n Arguments\n ---------\n\n svg: The parent SVG container for the map.\n\n css:\n\n selection: A d3 selection for a node to place the map inside.\n\n selection:\n\n zoom_container:\n\n settings:\n\n cobra_model:\n\n canvas_size_and_loc:\n\n enable_search:\n\n map_name: (Optional, Default: 'new map')\n\n map_id: (Optional, Default: A string of random characters.)\n\n map_description: (Optional, Default: '')\n\n Callbacks\n ---------\n\n map.callback_manager.run('set_status', null, status);\n map.callback_manager.run('toggle_beziers', null, beziers_enabled);\n map.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n map.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n map.callback_manager.run('deselect_nodes');\n map.callback_manager.run('select_text_label');\n map.callback_manager.run('before_svg_export');\n map.callback_manager.run('after_svg_export');\n map.callback_manager.run('before_convert_map');\n map.callback_manager.run('after_convert_map');\n this.callback_manager.run('calc_data_stats__reaction', null, changed);\n this.callback_manager.run('calc_data_stats__metabolite', null, changed);\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar Draw = require('./Draw');\nvar Behavior = require('./Behavior');\nvar Scale = require('./Scale');\nvar build = require('./build');\nvar UndoStack = require('./UndoStack');\nvar CallbackManager = require('./CallbackManager');\nvar KeyManager = require('./KeyManager');\nvar Canvas = require('./Canvas');\nvar data_styles = require('./data_styles');\nvar SearchIndex = require('./SearchIndex');\n\nvar bacon = require('baconjs');\n\n\nvar Map = utils.make_class();\n// class methods\nMap.from_data = from_data;\n// instance methods\nMap.prototype = {\n    // setup\n    init: init,\n    // more setup\n    setup_containers: setup_containers,\n    reset_containers: reset_containers,\n    // appearance\n    set_status: set_status,\n    clear_map: clear_map,\n    // selection\n    select_all: select_all,\n    select_none: select_none,\n    invert_selection: invert_selection,\n    select_selectable: select_selectable,\n    select_metabolite_with_id: select_metabolite_with_id,\n    select_single_node: select_single_node,\n    deselect_nodes: deselect_nodes,\n    select_text_label: select_text_label,\n    deselect_text_labels: deselect_text_labels,\n    // build\n    new_reaction_from_scratch: new_reaction_from_scratch,\n    extend_nodes: extend_nodes,\n    extend_reactions: extend_reactions,\n    new_reaction_for_metabolite: new_reaction_for_metabolite,\n    cycle_primary_node: cycle_primary_node,\n    toggle_selected_node_primary: toggle_selected_node_primary,\n    new_text_label: new_text_label,\n    edit_text_label: edit_text_label,\n    // delete\n    delete_selected: delete_selected,\n    delete_selectable: delete_selectable,\n    delete_node_data: delete_node_data,\n    delete_segment_data: delete_segment_data,\n    delete_reaction_data: delete_reaction_data,\n    delete_text_label_data: delete_text_label_data,\n    // find\n    get_selected_node_ids: get_selected_node_ids,\n    get_selected_nodes: get_selected_nodes,\n    get_selected_text_label_ids: get_selected_text_label_ids,\n    get_selected_text_labels: get_selected_text_labels,\n    segments_and_reactions_for_nodes: segments_and_reactions_for_nodes,\n    // draw\n    draw_everything: draw_everything,\n    // draw reactions\n    draw_all_reactions: draw_all_reactions,\n    draw_these_reactions: draw_these_reactions,\n    clear_deleted_reactions: clear_deleted_reactions,\n    // draw nodes\n    draw_all_nodes: draw_all_nodes,\n    draw_these_nodes: draw_these_nodes,\n    clear_deleted_nodes: clear_deleted_nodes,\n    // draw text_labels\n    draw_all_text_labels: draw_all_text_labels,\n    draw_these_text_labels: draw_these_text_labels,\n    clear_deleted_text_labels: clear_deleted_text_labels,\n    // draw beziers\n    draw_all_beziers: draw_all_beziers,\n    draw_these_beziers: draw_these_beziers,\n    clear_deleted_beziers: clear_deleted_beziers,\n    toggle_beziers: toggle_beziers,\n    hide_beziers: hide_beziers,\n    show_beziers: show_beziers,\n    // data\n    has_cobra_model: has_cobra_model,\n    apply_reaction_data_to_map: apply_reaction_data_to_map,\n    apply_metabolite_data_to_map: apply_metabolite_data_to_map,\n    apply_gene_data_to_map: apply_gene_data_to_map,\n    // data statistics\n    get_data_statistics: get_data_statistics,\n    calc_data_stats: calc_data_stats,\n    // zoom\n    zoom_extent_nodes: zoom_extent_nodes,\n    zoom_extent_canvas: zoom_extent_canvas,\n    _zoom_extent: _zoom_extent,\n    get_size: get_size,\n    zoom_to_reaction: zoom_to_reaction,\n    zoom_to_node: zoom_to_node,\n    zoom_to_text_label: zoom_to_text_label,\n    highlight_reaction: highlight_reaction,\n    highlight_node: highlight_node,\n    highlight_text_label: highlight_text_label,\n    highlight: highlight,\n    // io\n    save: save,\n    map_for_export: map_for_export,\n    save_svg: save_svg,\n    convert_map: convert_map\n};\nmodule.exports = Map;\n\n\n// -------------------------------------------------------------------------\n// setup\n\nfunction init(svg, css, selection, zoom_container, settings,\n              cobra_model, canvas_size_and_loc, enable_search,\n              map_name, map_id, map_description) {\n    if (canvas_size_and_loc===null) {\n        var size = zoom_container.get_size();\n        canvas_size_and_loc = {x: -size.width, y: -size.height,\n                               width: size.width*3, height: size.height*3};\n    }\n\n    if (map_name === undefined || map_name === null || map_name == '')\n        map_name = 'new_map';\n    else\n        map_name = String(map_name);\n    if (map_id === undefined || map_id === null || map_id == '')\n        map_id = utils.generate_map_id();\n    else\n        map_id = String(map_id);\n    if (map_description === undefined || map_description === null)\n        map_description = '';\n    else\n        map_description = String(map_description);\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // set up the defs\n    this.svg = svg;\n    this.defs = utils.setup_defs(svg, css);\n\n    // make the canvas\n    this.canvas = new Canvas(selection, canvas_size_and_loc);\n\n    this.setup_containers(selection);\n    this.sel = selection;\n    this.zoom_container = zoom_container;\n\n    this.settings = settings;\n\n    // set the model AFTER loading the datasets\n    this.cobra_model = cobra_model;\n\n    this.largest_ids = { reactions: -1,\n                         nodes: -1,\n                         segments: -1,\n                         text_labels: -1 };\n\n    // make the scales\n    this.scale = new Scale();\n    // initialize stats\n    this.calc_data_stats('reaction');\n    this.calc_data_stats('metabolite');\n    this.scale.connect_to_settings(this.settings, this,\n                                   get_data_statistics.bind(this));\n\n    // make the undo/redo stack\n    this.undo_stack = new UndoStack();\n\n    // make a behavior object\n    this.behavior = new Behavior(this, this.undo_stack);\n\n    // draw manager\n    this.draw = new Draw(this.behavior, this.settings);\n\n    // make a key manager\n    this.key_manager = new KeyManager(this.settings.get_option('unique_map_id'));\n\n    // make the search index\n    this.enable_search = enable_search;\n    this.search_index = new SearchIndex();\n\n    // map properties\n    this.map_name = map_name;\n    this.map_id = map_id;\n    this.map_description = map_description;\n\n    // deal with the window\n    var window_translate = {'x': 0, 'y': 0},\n        window_scale = 1;\n\n    // hide beziers\n    this.beziers_enabled = false;\n\n    // data\n    this.has_data_on_reactions = false;\n    this.has_data_on_nodes = false;\n\n    this.nodes = {};\n    this.reactions = {};\n    this.beziers = {};\n    this.text_labels = {};\n\n    // update data with null to populate data-specific attributes\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n\n    // rotation mode off\n    this.rotation_on = false;\n};\n\n// -------------------------------------------------------------------------\n// Import\n\nfunction from_data(map_data, svg, css, selection, zoom_container, settings,\n                   cobra_model, enable_search) {\n    /** Load a json map and add necessary fields for rendering.\n\n     */\n\n    var canvas = map_data[1].canvas,\n        map_name = map_data[0].map_name,\n        map_id = map_data[0].map_id,\n        map_description = (map_data[0].map_description.replace(/(\\nLast Modified.*)+$/g, '')\n                           + '\\nLast Modified ' + Date(Date.now()).toString()),\n        map = new Map(svg, css, selection, zoom_container, settings,\n                      cobra_model, canvas, enable_search,\n                      map_name, map_id, map_description);\n\n    map.reactions = map_data[1].reactions;\n    map.nodes = map_data[1].nodes;\n    map.text_labels = map_data[1].text_labels;\n\n    for (var n_id in map.nodes) {\n        var node = map.nodes[n_id];\n\n        // clear all the connected segments\n        node.connected_segments = [];\n\n        //  populate the nodes search index.\n        if (enable_search) {\n            if (node.node_type!='metabolite') continue;\n            map.search_index.insert('n'+n_id, { 'name': node.bigg_id,\n                                                'data': { type: 'metabolite',\n                                                          node_id: n_id }});\n            map.search_index.insert('n_name'+n_id, { 'name': node.name,\n                                                     'data': { type: 'metabolite',\n                                                               node_id: n_id }});\n        }\n    }\n\n    // Propagate coefficients and reversibility, build the connected\n    // segments, add bezier points, and populate the reaction search index.\n    for (var r_id in map.reactions) {\n        var reaction = map.reactions[r_id];\n\n        // reaction search index\n        if (enable_search) {\n            map.search_index.insert('r' + r_id,\n                                    { 'name': reaction.bigg_id,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            map.search_index.insert('r_name' + r_id,\n                                    { 'name': reaction.name,\n                                      'data': { type: 'reaction',\n                                                reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                map.search_index.insert('r' + r_id + '_g' + g_id,\n                                        { 'name': gene.bigg_id,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n                map.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                        { 'name': gene.name,\n                                          'data': { type: 'reaction',\n                                                    reaction_id: r_id }});\n            }\n        }\n\n        // keep track of any bad segments\n        var segments_to_delete = [];\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id];\n\n            // propagate reversibility\n            segment.reversibility = reaction.reversibility;\n\n            // if there is an error with to_ or from_ nodes, remove this segment\n            if (!(segment.from_node_id in map.nodes) || !(segment.to_node_id in map.nodes)) {\n                console.warn('Bad node references in segment ' + s_id + '. Deleting segment.');\n                segments_to_delete.push(s_id);\n                continue\n            }\n\n            var from_node = map.nodes[segment.from_node_id],\n                to_node = map.nodes[segment.to_node_id];\n\n            // propagate coefficients\n            reaction.metabolites.forEach(function(met) {\n                if (met.bigg_id==from_node.bigg_id) {\n                    segment.from_node_coefficient = met.coefficient;\n                } else if (met.bigg_id==to_node.bigg_id) {\n                    segment.to_node_coefficient = met.coefficient;\n                }\n            });\n\n            // build connected segments\n            [from_node, to_node].forEach(function(node) {\n                node.connected_segments.push({ segment_id: s_id,\n                                               reaction_id: r_id });\n            });\n\n            // If the metabolite has no bezier points, then add them.\n            var start = map.nodes[segment.from_node_id],\n                end = map.nodes[segment.to_node_id];\n            if (start['node_type']=='metabolite' || end['node_type']=='metabolite') {\n                var midpoint = utils.c_plus_c(start, utils.c_times_scalar(utils.c_minus_c(end, start), 0.5));\n                if (segment.b1 === null) segment.b1 = midpoint;\n                if (segment.b2 === null) segment.b2 = midpoint;\n            }\n\n        }\n        // delete the bad segments\n        segments_to_delete.forEach(function(s_id) {\n            delete reaction.segments[s_id];\n        });\n    }\n\n    // add text_labels to the search index\n    if (enable_search) {\n        for (var label_id in map.text_labels) {\n            var label = map.text_labels[label_id];\n            map.search_index.insert('l'+label_id, { 'name': label.text,\n                                                    'data': { type: 'text_label',\n                                                              text_label_id: label_id }});\n        }\n    }\n\n    // populate the beziers\n    map.beziers = build.new_beziers_for_reactions(map.reactions);\n\n    // get largest ids for adding new reactions, nodes, text labels, and\n    // segments\n    map.largest_ids.reactions = get_largest_id(map.reactions);\n    map.largest_ids.nodes = get_largest_id(map.nodes);\n    map.largest_ids.text_labels = get_largest_id(map.text_labels);\n\n    var largest_segment_id = 0;\n    for (var id in map.reactions) {\n        largest_segment_id = get_largest_id(map.reactions[id].segments,\n                                            largest_segment_id);\n    }\n    map.largest_ids.segments = largest_segment_id;\n\n    // update data with null to populate data-specific attributes\n    map.apply_reaction_data_to_map(null);\n    map.apply_metabolite_data_to_map(null);\n    map.apply_gene_data_to_map(null);\n\n    return map;\n\n    // definitions\n    function get_largest_id(obj, current_largest) {\n        /** Return the largest integer key in obj, or current_largest, whichever is bigger. */\n        if (current_largest===undefined) current_largest = 0;\n        if (obj===undefined) return current_largest;\n        return Math.max.apply(null, Object.keys(obj).map(function(x) {\n            return parseInt(x);\n        }).concat([current_largest]));\n    }\n}\n\n// ---------------------------------------------------------------------\n// more setup\n\nfunction setup_containers(sel) {\n    sel.append('g')\n        .attr('id', 'reactions');\n    sel.append('g')\n        .attr('id', 'nodes');\n    sel.append('g')\n        .attr('id', 'beziers');\n    sel.append('g')\n        .attr('id', 'text-labels');\n}\nfunction reset_containers() {\n    this.sel.select('#reactions')\n        .selectAll('.reaction')\n        .remove();\n    this.sel.select('#nodes')\n        .selectAll('.node')\n        .remove();\n    this.sel.select('#beziers')\n        .selectAll('.bezier')\n        .remove();\n    this.sel.select('#text-labels')\n        .selectAll('.text-label')\n        .remove();\n}\n\n// -------------------------------------------------------------------------\n// Appearance\n\nfunction set_status(status, time) {\n    /** Set the status of the map, with an optional expiration\n     time. Rendering the status is taken care of by the Builder.\n\n     Arguments\n     ---------\n\n     status: The status string.\n\n     time: An optional time, in ms, after which the status is set to ''.\n\n     */\n\n    this.callback_manager.run('set_status', null, status);\n    // clear any other timers on the status bar\n    clearTimeout(this._status_timer);\n    this._status_timer = null;\n\n    if (time!==undefined) {\n        this._status_timer = setTimeout(function() {\n            this.callback_manager.run('set_status', null, '');\n        }.bind(this), time);\n    }\n}\nfunction clear_map() {\n    this.reactions = {};\n    this.beziers = {};\n    this.nodes = {};\n    this.text_labels = {};\n    this.map_name = 'new_map';\n    this.map_id = utils.generate_map_id();\n    this.map_description = '';\n    // reaction_data onto existing map reactions\n    this.apply_reaction_data_to_map(null);\n    this.apply_metabolite_data_to_map(null);\n    this.apply_gene_data_to_map(null);\n    this.draw_everything();\n}\nfunction has_cobra_model() {\n    return (this.cobra_model !== null);\n}\nfunction draw_everything() {\n    /** Draw the all reactions, nodes, & text labels.\n\n     */\n    this.draw_all_reactions(true, true); // also draw beziers\n    this.draw_all_nodes(true);\n    this.draw_all_text_labels();\n}\n\nfunction draw_all_reactions(draw_beziers, clear_deleted) {\n    /** Draw all reactions, and clear deleted reactions.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n    if (clear_deleted===undefined) clear_deleted = true;\n\n    // Draw all reactions.\n    var reaction_ids = [];\n    for (var reaction_id in this.reactions) {\n        reaction_ids.push(reaction_id);\n    }\n    // If draw_beziers is true, just draw them all, rather than deciding\n    // which ones to draw.\n    this.draw_these_reactions(reaction_ids, false);\n    if (draw_beziers && this.beziers_enabled)\n        this.draw_all_beziers();\n\n    // Clear all deleted reactions.\n    if (clear_deleted)\n        this.clear_deleted_reactions(draw_beziers);\n}\n\nfunction draw_these_reactions(reaction_ids, draw_beziers) {\n    /** Draw specific reactions.\n\n     Does nothing with exit selection. Use clear_deleted_reactions to remove\n     reactions from the DOM.\n\n     Arguments\n     ---------\n\n     reactions_ids: An array of reaction_ids to update.\n\n     draw_beziers: (Boolean, default True) Whether to also draw the bezier\n     control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // find reactions for reaction_ids\n    var reaction_subset = utils.object_slice_for_ids_ref(this.reactions,\n                                                         reaction_ids);\n\n    // function to update reactions\n    var update_fn = function(sel) {\n        return this.draw.update_reaction(sel, this.scale, this.cobra_model,\n                                         this.nodes, this.defs,\n                                         this.has_data_on_reactions);\n    }.bind(this);\n\n    // draw the reactions\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', reaction_subset,\n                         'reaction_id', this.draw.create_reaction.bind(this.draw),\n                         update_fn);\n\n    if (draw_beziers) {\n        // particular beziers to draw\n        var bezier_ids = build.bezier_ids_for_reaction_ids(reaction_subset);\n        this.draw_these_beziers(bezier_ids);\n    }\n}\n\nfunction clear_deleted_reactions(draw_beziers) {\n    /** Remove any reactions that are not in *this.reactions*.\n\n     Arguments\n     ---------\n\n     draw_beziers: (Boolean, default True) Whether to also clear deleted\n     bezier control points.\n\n     */\n    if (draw_beziers===undefined) draw_beziers = true;\n\n    // remove deleted reactions and segments\n    utils.draw_an_object(this.sel, '#reactions', '.reaction', this.reactions, 'reaction_id',\n                         null,\n                         clear_deleted_segments,\n                         function(sel) { sel.remove(); });\n\n    if (draw_beziers==true)\n        this.clear_deleted_beziers();\n\n    // definitions\n    function clear_deleted_segments(update_selection) {\n        // draw segments\n        utils.draw_a_nested_object(update_selection, '.segment-group', 'segments', 'segment_id',\n                                   null,\n                                   null,\n                                   function(sel) { sel.remove(); });\n    };\n}\n\nfunction draw_all_nodes(clear_deleted) {\n    /** Draw all nodes, and clear deleted nodes.\n\n     Arguments\n     ---------\n\n     clear_deleted: (Optional, Default: true) Boolean, if true, then also\n     clear deleted nodes.\n\n     */\n    if (clear_deleted === undefined) clear_deleted = true;\n\n    var node_ids = [];\n    for (var node_id in this.nodes) {\n        node_ids.push(node_id);\n    }\n    this.draw_these_nodes(node_ids);\n\n    // clear the deleted nodes\n    if (clear_deleted)\n        this.clear_deleted_nodes();\n}\n\nfunction draw_these_nodes(node_ids) {\n    /** Draw specific nodes.\n\n     Does nothing with exit selection. Use clear_deleted_nodes to remove\n     nodes from the DOM.\n\n     Arguments\n     ---------\n\n     nodes_ids: An array of node_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var node_subset = utils.object_slice_for_ids_ref(this.nodes, node_ids);\n\n    // functions to create and update nodes\n    var create_fn = function(sel) {\n        return this.draw.create_node(sel,\n                                     this.nodes,\n                                     this.reactions);\n    }.bind(this),\n        update_fn = function(sel) {\n            return this.draw.update_node(sel,\n                                         this.scale,\n                                         this.has_data_on_nodes,\n                                         this.behavior.selectable_mousedown,\n                                         this.behavior.selectable_click,\n                                         this.behavior.node_mouseover,\n                                         this.behavior.node_mouseout,\n                                         this.behavior.selectable_drag,\n                                         this.behavior.node_label_drag);\n        }.bind(this);\n\n    // draw the nodes\n    utils.draw_an_object(this.sel, '#nodes', '.node', node_subset, 'node_id',\n                         create_fn, update_fn);\n}\n\nfunction clear_deleted_nodes() {\n    /** Remove any nodes that are not in *this.nodes*.\n\n     */\n    // run remove for exit selection\n    utils.draw_an_object(this.sel, '#nodes', '.node', this.nodes, 'node_id',\n                         null, null, function(sel) { sel.remove(); });\n}\n\nfunction draw_all_text_labels() {\n    // Draw all text_labels.\n    var text_label_ids = [];\n    for (var text_label_id in this.text_labels) {\n        text_label_ids.push(text_label_id);\n    }\n    this.draw_these_text_labels(text_label_ids);\n\n    // Clear all deleted text_labels.\n    this.clear_deleted_text_labels();\n}\n\nfunction draw_these_text_labels(text_label_ids) {\n    /** Draw specific text_labels.\n\n     Does nothing with exit selection. Use clear_deleted_text_labels to remove\n     text_labels from the DOM.\n\n     Arguments\n     ---------\n\n     text_labels_ids: An array of text_label_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var text_label_subset = utils.object_slice_for_ids_ref(this.text_labels, text_label_ids);\n\n    // function to update text_labels\n    var update_fn = function(sel) {\n        return this.draw.update_text_label(sel, this.behavior);;\n    }.bind(this);\n\n    // draw the text_labels\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         text_label_subset, 'text_label_id',\n                         this.draw.create_text_label.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_text_labels() {\n    /** Remove any text_labels that are not in *this.text_labels*.\n\n     */\n    // clear deleted\n    utils.draw_an_object(this.sel, '#text-labels', '.text-label',\n                         this.text_labels, 'text_label_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction draw_all_beziers() {\n    /** Draw all beziers, and clear deleted reactions.\n\n     */\n    var bezier_ids = [];\n    for (var bezier_id in this.beziers) {\n        bezier_ids.push(bezier_id);\n    }\n    this.draw_these_beziers(bezier_ids);\n\n    // clear delete beziers\n    this.clear_deleted_beziers();\n}\n\nfunction draw_these_beziers(bezier_ids) {\n    /** Draw specific beziers.\n\n     Does nothing with exit selection. Use clear_deleted_beziers to remove\n     beziers from the DOM.\n\n     Arguments\n     ---------\n\n     beziers_ids: An array of bezier_ids to update.\n\n     */\n    // find reactions for reaction_ids\n    var bezier_subset = utils.object_slice_for_ids_ref(this.beziers, bezier_ids);\n\n    // function to update beziers\n    var update_fn = function(sel) {\n        return this.draw.update_bezier(sel,\n                                       this.beziers_enabled,\n                                       this.behavior.bezier_drag,\n                                       this.behavior.bezier_mouseover,\n                                       this.behavior.bezier_mouseout,\n                                       this.nodes,\n                                       this.reactions);\n    }.bind(this);\n\n    // draw the beziers\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', bezier_subset,\n                         'bezier_id', this.draw.create_bezier.bind(this.draw),\n                         update_fn);\n}\n\nfunction clear_deleted_beziers() {\n    /** Remove any beziers that are not in *this.beziers*.\n\n     */\n    // remove deleted\n    utils.draw_an_object(this.sel, '#beziers', '.bezier', this.beziers,\n                         'bezier_id', null, null,\n                         function(sel) { sel.remove(); });\n}\n\nfunction show_beziers() {\n    this.toggle_beziers(true);\n}\n\nfunction hide_beziers() {\n    this.toggle_beziers(false);\n}\n\nfunction toggle_beziers(on_off) {\n    if (on_off===undefined) this.beziers_enabled = !this.beziers_enabled;\n    else this.beziers_enabled = on_off;\n    this.draw_all_beziers();\n    this.callback_manager.run('toggle_beziers', null, this.beziers_enabled);\n}\n\nfunction apply_reaction_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style');\n    var has_data = data_styles.apply_reaction_data_to_reactions(this.reactions, data,\n                                                                styles, compare_style);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\nfunction apply_metabolite_data_to_map(data) {\n    /**  Returns True if the scale has changed.\n\n     */\n    var styles = this.settings.get_option('metabolite_styles'),\n        compare_style = this.settings.get_option('metabolite_compare_style');\n\n    var has_data = data_styles.apply_metabolite_data_to_nodes(this.nodes, data,\n                                                              styles, compare_style);\n    this.has_data_on_nodes = has_data;\n\n    return this.calc_data_stats('metabolite');\n}\n\nfunction apply_gene_data_to_map(gene_data_obj) {\n    /** Returns True if the scale has changed.\n\n     Arguments\n     ---------\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { rule: 'rule_string', genes: { gene_id: value } } }\n\n     */\n    var styles = this.settings.get_option('reaction_styles'),\n        compare_style = this.settings.get_option('reaction_compare_style'),\n        identifiers_on_map = this.settings.get_option('identifiers_on_map'),\n        and_method_in_gene_reaction_rule = this.settings.get_option('and_method_in_gene_reaction_rule');\n\n    var has_data = data_styles.apply_gene_data_to_reactions(this.reactions, gene_data_obj,\n                                                            styles, identifiers_on_map,\n                                                            compare_style,\n                                                            and_method_in_gene_reaction_rule);\n    this.has_data_on_reactions = has_data;\n\n    return this.calc_data_stats('reaction');\n}\n\n// ------------------------------------------------\n// Data domains\nfunction get_data_statistics() {\n    return this.data_statistics;\n}\n\nfunction calc_data_stats(type) {\n    /** Returns True if the stats have changed.\n\n     Arguments\n     ---------\n\n     type: Either 'metabolite' or 'reaction'\n\n     */\n\n    if (['reaction', 'metabolite'].indexOf(type) == -1)\n        throw new Error('Bad type ' + type);\n\n    // make the data structure\n    if (!('data_statistics' in this)) {\n        this.data_statistics = {};\n        this.data_statistics[type] = {};\n    } else if (!(type in this.data_statistics)) {\n        this.data_statistics[type] = {};\n    }\n\n    var same = true;\n    // default min and max\n    var vals = [];\n    if (type == 'metabolite') {\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            // check number\n            if (node.data !== null)\n                vals.push(node.data);\n        }\n    } else if (type == 'reaction') {\n        for (var reaction_id in this.reactions) {\n            var reaction = this.reactions[reaction_id];\n            // check number\n            if (reaction.data !== null)\n                vals.push(reaction.data);\n        }\n    }\n\n    // calculate these statistics\n    var quartiles = utils.quartiles(vals),\n        funcs = [['min', on_array(Math.min)],\n                 ['max', on_array(Math.max)],\n                 ['mean', utils.mean],\n                 ['Q1', function() { return quartiles[0]; }],\n                 ['median', function() { return quartiles[1]; }],\n                 ['Q3', function() { return quartiles[2]; }]];\n    funcs.forEach(function(ar) {\n        var new_val, name = ar[0];\n        if (vals.length == 0) {\n            new_val = null;\n        } else {\n            var fn = ar[1];\n            new_val = fn(vals);\n        }\n        if (new_val != this.data_statistics[type][name])\n            same = false;\n        this.data_statistics[type][name] = new_val;\n    }.bind(this));\n\n    if (type == 'reaction')\n        this.callback_manager.run('calc_data_stats__reaction', null, !same);\n    else\n        this.callback_manager.run('calc_data_stats__metabolite', null, !same);\n    return !same;\n\n    // definitions\n    function on_array(fn) {\n        return function (array) { return fn.apply(null, array); };\n    }\n}\n\n// ---------------------------------------------------------------------\n// Node interaction\n\nfunction get_coords_for_node(node_id) {\n    var node = this.nodes[node_id],\n        coords = {'x': node.x, 'y': node.y};\n    return coords;\n}\nfunction get_selected_node_ids() {\n    var selected_node_ids = [];\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) { selected_node_ids.push(d.node_id); });\n    return selected_node_ids;\n}\nfunction get_selected_nodes() {\n    var selected_nodes = {},\n        self = this;\n    this.sel.select('#nodes')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_nodes[d.node_id] = this.nodes[d.node_id];\n        }.bind(this));\n    return selected_nodes;\n}\nfunction get_selected_text_label_ids() {\n    var selected_text_label_ids = [];\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) { selected_text_label_ids.push(d.text_label_id); });\n    return selected_text_label_ids;\n}\nfunction get_selected_text_labels() {\n    var selected_text_labels = {},\n        self = this;\n    this.sel.select('#text-labels')\n        .selectAll('.selected')\n        .each(function(d) {\n            selected_text_labels[d.text_label_id] = this.text_labels[d.text_label_id];\n        }.bind(this));\n    return selected_text_labels;\n}\n\nfunction select_all() {\n    /** Select all nodes and text labels.\n\n     */\n    this.sel.selectAll('#nodes,#text-labels')\n        .selectAll('.node,.text-label')\n        .classed('selected', true);\n}\n\nfunction select_none() {\n    /** Deselect all nodes and text labels.\n\n     */\n    this.sel.selectAll('.selected')\n        .classed('selected', false);\n}\n\nfunction invert_selection() {\n    /** Invert selection of nodes and text labels.\n\n     */\n    var selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label');\n    selection.classed('selected', function() {\n        return !d3.select(this).classed('selected');\n    });\n}\n\nfunction select_metabolite_with_id(node_id) {\n    /** Select a metabolite with the given id, and turn off the reaction\n     target.\n\n     */\n    // deselect all text labels\n    this.deselect_text_labels();\n\n    var node_selection = this.sel.select('#nodes').selectAll('.node'),\n        coords,\n        selected_node;\n    node_selection.classed('selected', function(d) {\n        var selected = String(d.node_id) == String(node_id);\n        if (selected) {\n            selected_node = d;\n            coords = { x: d.x, y: d.y };\n        }\n        return selected;\n    });\n    this.sel.selectAll('.start-reaction-target').style('visibility', 'hidden');\n    this.callback_manager.run('select_metabolite_with_id', null, selected_node, coords);\n}\nfunction select_selectable(node, d) {\n    /** Select a metabolite or text label, and manage the shift key.\n\n     */\n    var classable_selection = this.sel.selectAll('#nodes,#text-labels')\n            .selectAll('.node,.text-label'),\n        shift_key_on = this.key_manager.held_keys.shift,\n        classable_node;\n    if (d3.select(node).attr('class').indexOf('text-label') == -1) {\n        // node\n        classable_node = node.parentNode;\n    } else {\n        // text-label\n        classable_node = node;\n    }\n    // toggle selection\n    if (shift_key_on) {\n        // toggle this node\n        d3.select(classable_node)\n            .classed('selected', !d3.select(classable_node).classed('selected'));\n    } else {\n        // unselect all other nodes, and select this one\n        classable_selection.classed('selected', false);\n        d3.select(classable_node).classed('selected', true);\n    }\n    // run the select_metabolite callback\n    var selected_nodes = this.sel.select('#nodes').selectAll('.selected'),\n        node_count = 0,\n        coords,\n        selected_node;\n    selected_nodes.each(function(d) {\n        selected_node = d;\n        coords = { x: d.x, y: d.y };\n        node_count++;\n    });\n    this.callback_manager.run('select_selectable', null, node_count, selected_node, coords);\n}\nfunction select_single_node() {\n    /** Unselect all but one selected node, and return the node.\n\n     If no nodes are selected, return null.\n\n     */\n    var out = null,\n        self = this,\n        node_selection = this.sel.select('#nodes').selectAll('.selected');\n    node_selection.classed('selected', function(d, i) {\n        if (i==0) {\n            out = d;\n            return true;\n        } else {\n            return false;\n        }\n    });\n    return out;\n}\nfunction deselect_nodes() {\n    var node_selection = this.sel.select('#nodes').selectAll('.node');\n    node_selection.classed('selected', false);\n    this.callback_manager.run('deselect_nodes');\n}\nfunction select_text_label(sel, d) {\n    // deselect all nodes\n    this.deselect_nodes();\n    // find the new selection\n    // Ignore shift key and only allow single selection for now\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', function(p) { return d === p; });\n    var selected_text_labels = this.sel.select('#text-labels').selectAll('.selected'),\n        coords;\n    selected_text_labels.each(function(d) {\n        coords = { x: d.x, y: d.y };\n    });\n    this.callback_manager.run('select_text_label');\n}\nfunction deselect_text_labels() {\n    var text_label_selection = this.sel.select('#text-labels').selectAll('.text-label');\n    text_label_selection.classed('selected', false);\n}\n\n// ---------------------------------------------------------------------\n// Delete\n\nfunction delete_selected() {\n    /** Delete the selected nodes and associated segments and reactions, and selected labels.\n\n     Undoable.\n\n     */\n    var selected_nodes = this.get_selected_nodes(),\n        selected_text_labels = this.get_selected_text_labels();\n    if (Object.keys(selected_nodes).length >= 1 ||\n        Object.keys(selected_text_labels).length >= 1)\n        this.delete_selectable(selected_nodes, selected_text_labels, true);\n}\nfunction delete_selectable(selected_nodes, selected_text_labels, should_draw) {\n    /** Delete the nodes and associated segments and reactions. Undoable.\n\n     Arguments\n     ---------\n\n     selected_nodes: An object that is a subset of map.nodes.\n\n     selected_text_labels: An object that is a subset of map.text_labels.\n\n     should_draw: A boolean argument to determine whether to draw the changes to the map.\n\n     */\n\n    var out = this.segments_and_reactions_for_nodes(selected_nodes),\n        segment_objs_w_segments = out.segment_objs_w_segments, // TODO repeated values here\n        reactions = out.reactions;\n\n    // copy nodes to undelete\n    var saved_nodes = utils.clone(selected_nodes),\n        saved_segment_objs_w_segments = utils.clone(segment_objs_w_segments),\n        saved_reactions = utils.clone(reactions),\n        saved_text_labels = utils.clone(selected_text_labels),\n        delete_and_draw = function(nodes, reactions, segment_objs,\n                                   selected_text_labels) {\n            // delete nodes, segments, and reactions with no segments\n            this.delete_node_data(Object.keys(selected_nodes));\n            this.delete_segment_data(segment_objs); // also deletes beziers\n            this.delete_reaction_data(Object.keys(reactions));\n            this.delete_text_label_data(Object.keys(selected_text_labels));\n\n            // apply the reaction and node data\n            var changed_r_scale = false,\n                changed_m_scale = false;\n            if (this.has_data_on_reactions)\n                changed_r_scale = this.calc_data_stats('reaction');\n            if (this.has_data_on_nodes)\n                changed_m_scale = this.calc_data_stats('metabolite');\n\n            // redraw\n            if (should_draw) {\n                if (changed_r_scale)\n                    this.draw_all_reactions(true, true);\n                else\n                    this.clear_deleted_reactions(); // also clears segments and beziers\n                if (changed_m_scale)\n                    this.draw_all_nodes(true);\n                else\n                    this.clear_deleted_nodes();\n                this.clear_deleted_text_labels();\n            }\n        }.bind(this);\n\n    // delete\n    delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                    selected_text_labels);\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // redraw the saved nodes, reactions, and segments\n\n        this.extend_nodes(saved_nodes);\n        this.extend_reactions(saved_reactions);\n        var reaction_ids_to_draw = Object.keys(saved_reactions);\n        for (var segment_id in saved_segment_objs_w_segments) {\n            var segment_obj = saved_segment_objs_w_segments[segment_id];\n\n            var segment = segment_obj.segment;\n            this.reactions[segment_obj.reaction_id]\n                .segments[segment_obj.segment_id] = segment;\n\n            // updated connected nodes\n            [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n                // not necessary for the deleted nodes\n                if (node_id in saved_nodes) return;\n                var node = this.nodes[node_id];\n                node.connected_segments.push({ reaction_id: segment_obj.reaction_id,\n                                               segment_id: segment_obj.segment_id });\n            }.bind(this));\n\n            // extend the beziers\n            var seg_id = segment_obj.segment_id,\n                r_id = segment_obj.reaction_id,\n                seg_o = {};\n            seg_o[seg_id] = segment_obj.segment;\n            utils.extend(this.beziers, build.new_beziers_for_segments(seg_o, r_id));\n\n            if (reaction_ids_to_draw.indexOf(segment_obj.reaction_id)==-1)\n                reaction_ids_to_draw.push(segment_obj.reaction_id);\n        }\n\n        // apply the reaction and node data\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(reaction_ids_to_draw);\n        } else {\n            if (should_draw) this.draw_these_reactions(reaction_ids_to_draw);\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (should_draw) {\n                if (scale_changed) this.draw_all_nodes(false);\n                else this.draw_these_nodes(Object.keys(saved_nodes));\n            }\n        } else {\n            if (should_draw) this.draw_these_nodes(Object.keys(saved_nodes));\n        }\n\n        // redraw the saved text_labels\n        utils.extend(this.text_labels, saved_text_labels);\n        if (should_draw) this.draw_these_text_labels(Object.keys(saved_text_labels));\n        // copy text_labels to re-delete\n        selected_text_labels = utils.clone(saved_text_labels);\n\n        // copy nodes to re-delete\n        selected_nodes = utils.clone(saved_nodes);\n        segment_objs_w_segments = utils.clone(saved_segment_objs_w_segments);\n        reactions = utils.clone(saved_reactions);\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        delete_and_draw(selected_nodes, reactions, segment_objs_w_segments,\n                        selected_text_labels);\n    }.bind(this));\n}\n\nfunction delete_node_data(node_ids) {\n    /** Delete nodes, and remove from search index.\n     */\n    node_ids.forEach(function(node_id) {\n        if (this.enable_search && this.nodes[node_id].node_type=='metabolite') {\n            var found = (this.search_index.remove('n' + node_id)\n                         && this.search_index.remove('n_name' + node_id));\n            if (!found)\n                console.warn('Could not find deleted metabolite in search index');\n        }\n        delete this.nodes[node_id];\n    }.bind(this));\n}\n\nfunction delete_segment_data(segment_objs) {\n    /** Delete segments, update connected_segments in nodes, and delete\n     bezier points.\n\n     segment_objs: Object with values like { reaction_id: '123', segment_id: '456' }\n\n     */\n    for (var segment_id in segment_objs) {\n        var segment_obj = segment_objs[segment_id];\n        var reaction = this.reactions[segment_obj.reaction_id];\n\n        // segment already deleted\n        if (!(segment_obj.segment_id in reaction.segments)) return;\n\n        var segment = reaction.segments[segment_obj.segment_id];\n        // updated connected nodes\n        [segment.from_node_id, segment.to_node_id].forEach(function(node_id) {\n            if (!(node_id in this.nodes)) return;\n            var node = this.nodes[node_id];\n            node.connected_segments = node.connected_segments.filter(function(so) {\n                return so.segment_id != segment_obj.segment_id;\n            });\n        }.bind(this));\n\n        // remove beziers\n        ['b1', 'b2'].forEach(function(bez) {\n            var bez_id = build.bezier_id_for_segment_id(segment_obj.segment_id, bez);\n            delete this.beziers[bez_id];\n        }.bind(this));\n\n        delete reaction.segments[segment_obj.segment_id];\n    }\n}\nfunction delete_reaction_data(reaction_ids) {\n    /** Delete reactions, segments, and beziers, and remove reaction from\n     search index.\n\n     */\n    reaction_ids.forEach(function(reaction_id) {\n        // remove beziers\n        var reaction = this.reactions[reaction_id];\n        for (var segment_id in reaction.segments) {\n            ['b1', 'b2'].forEach(function(bez) {\n                var bez_id = build.bezier_id_for_segment_id(segment_id, bez);\n                delete this.beziers[bez_id];\n            }.bind(this));\n        }\n        // delete reaction\n        delete this.reactions[reaction_id];\n        // remove from search index\n        var found = (this.search_index.remove('r' + reaction_id)\n                     && this.search_index.remove('r_name' + reaction_id));\n        if (!found)\n            console.warn('Could not find deleted reaction ' +\n                         reaction_id + ' in search index');\n        for (var g_id in reaction.genes) {\n            var found = (this.search_index.remove('r' + reaction_id + '_g' + g_id)\n                         && this.search_index.remove('r' + reaction_id + '_g_name' + g_id));\n            if (!found)\n                console.warn('Could not find deleted gene ' +\n                             g_id + ' in search index');\n        }\n    }.bind(this));\n}\nfunction delete_text_label_data(text_label_ids) {\n    /** delete text labels for an array of ids\n     */\n    text_label_ids.forEach(function(text_label_id) {\n        // delete label\n        delete this.text_labels[text_label_id];\n        // remove from search index\n        var found = this.search_index.remove('l'+text_label_id);\n        if (!found)\n            console.warn('Could not find deleted text label in search index');\n    }.bind(this));\n}\n\n// ---------------------------------------------------------------------\n// Building\n\nfunction new_reaction_from_scratch(starting_reaction, coords, direction) {\n    /** Draw a reaction on a blank canvas.\n\n     starting_reaction: bigg_id for a reaction to draw.\n     coords: coordinates to start drawing\n\n     */\n\n    // If there is no cobra model, error\n    if (!this.cobra_model) return console.error('No CobraModel. Cannot build new reaction');\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = utils.clone(this.cobra_model.reactions[starting_reaction]);\n\n    // create the first node\n    for (var metabolite_id in cobra_reaction.metabolites) {\n        var coefficient = cobra_reaction.metabolites[metabolite_id],\n            metabolite = this.cobra_model.metabolites[metabolite_id];\n        if (coefficient < 0) {\n            var selected_node_id = String(++this.largest_ids.nodes),\n                label_d = { x: 30, y: 10 },\n                selected_node = { connected_segments: [],\n                                  x: coords.x,\n                                  y: coords.y,\n                                  node_is_primary: true,\n                                  label_x: coords.x + label_d.x,\n                                  label_y: coords.y + label_d.y,\n                                  name: metabolite.name,\n                                  bigg_id: metabolite_id,\n                                  node_type: 'metabolite' },\n                new_nodes = {};\n            new_nodes[selected_node_id] = selected_node;\n            break;\n        }\n    }\n\n    // draw\n    extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes);\n\n    // draw the reaction\n    var out = this.new_reaction_for_metabolite(starting_reaction,\n                                               selected_node_id,\n                                               direction, false),\n        reaction_redo = out.redo,\n        reaction_undo = out.undo;\n\n    // add to undo/redo stack\n    this.undo_stack.push(function() {\n        // undo\n        // first undo the reaction\n        reaction_undo();\n        // get the nodes to delete\n        this.delete_node_data(Object.keys(new_nodes));\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        // draw\n        this.clear_deleted_nodes();\n        // deselect\n        this.deselect_nodes();\n    }.bind(this), function () {\n        // redo\n        // clone the nodes and reactions, to redo this action later\n        extend_and_draw_metabolite.apply(this, [new_nodes, selected_node_id]);\n        // now redo the reaction\n        reaction_redo();\n    }.bind(this));\n\n    return null;\n\n    // definitions\n    function extend_and_draw_metabolite(new_nodes, selected_node_id) {\n        this.extend_nodes(new_nodes);\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.apply_metabolite_data_to_nodes(new_nodes);\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes([selected_node_id]);\n        } else {\n            this.draw_these_nodes([selected_node_id]);\n        }\n    }\n}\n\nfunction extend_nodes(new_nodes) {\n    /** Add new nodes to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_type != 'metabolite')\n                continue;\n            this.search_index.insert('n' + node_id,\n                                     { 'name': node.bigg_id,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n            this.search_index.insert('n_name' + node_id,\n                                     { 'name': node.name,\n                                       'data': { type: 'metabolite',\n                                                 node_id: node_id }});\n        }\n    }\n    utils.extend(this.nodes, new_nodes);\n}\nfunction extend_reactions(new_reactions) {\n    /** Add new reactions to data and search index.\n\n     */\n    if (this.enable_search) {\n        for (var r_id in new_reactions) {\n            var reaction = new_reactions[r_id];\n            this.search_index.insert('r' + r_id, { 'name': reaction.bigg_id,\n                                                   'data': { type: 'reaction',\n                                                             reaction_id: r_id }});\n            this.search_index.insert('r_name' + r_id, { 'name': reaction.name,\n                                                        'data': { type: 'reaction',\n                                                                  reaction_id: r_id }});\n            for (var g_id in reaction.genes) {\n                var gene = reaction.genes[g_id];\n                this.search_index.insert('r' + r_id + '_g' + g_id,\n                                         { 'name': gene.bigg_id,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n                this.search_index.insert('r' + r_id + '_g_name' + g_id,\n                                         { 'name': gene.name,\n                                           'data': { type: 'reaction',\n                                                     reaction_id: r_id }});\n            }\n        }\n    }\n    utils.extend(this.reactions, new_reactions);\n}\n\nfunction new_reaction_for_metabolite(reaction_bigg_id, selected_node_id,\n                                     direction, apply_undo_redo) {\n    /** Build a new reaction starting with selected_met.\n\n     Undoable\n\n     Arguments\n     ---------\n\n     reaction_bigg_id: The BiGG ID of the reaction to draw.\n\n     selected_node_id: The ID of the node to begin drawing with.\n\n     direction: The direction to draw in.\n\n     apply_undo_redo: (Optional, Default: true) If true, then add to the\n     undo stack. Otherwise, just return the undo and redo functions.\n\n     Returns\n     -------\n\n     { undo: undo_function,\n     redo: redo_function }\n\n     */\n\n    // default args\n    if (apply_undo_redo === undefined) apply_undo_redo = true;\n\n    // get the metabolite node\n    var selected_node = this.nodes[selected_node_id];\n\n    // set reaction coordinates and angle\n    // be sure to copy the reaction recursively\n    var cobra_reaction = this.cobra_model.reactions[reaction_bigg_id];\n\n    // build the new reaction\n    var out = build.new_reaction(reaction_bigg_id, cobra_reaction,\n                                 this.cobra_model.metabolites,\n                                 selected_node_id,\n                                 utils.clone(selected_node),\n                                 this.largest_ids,\n                                 this.cobra_model.cofactors,\n                                 direction),\n        new_nodes = out.new_nodes,\n        new_reactions = out.new_reactions,\n        new_beziers = out.new_beziers;\n\n    // draw\n    extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                          new_beziers, selected_node_id]);\n\n    // clone the nodes and reactions, to redo this action later\n    var saved_nodes = utils.clone(new_nodes),\n        saved_reactions = utils.clone(new_reactions),\n        saved_beziers = utils.clone(new_beziers);\n\n    // add to undo/redo stack\n    var undo_fn = function() {\n        // undo\n        // get the nodes to delete\n        delete new_nodes[selected_node_id];\n        this.delete_node_data(Object.keys(new_nodes));\n        this.delete_reaction_data(Object.keys(new_reactions)); // also deletes beziers\n        select_metabolite_with_id.apply(this, [selected_node_id]);\n        // save the nodes and reactions again, for redo\n        new_nodes = utils.clone(saved_nodes);\n        new_reactions = utils.clone(saved_reactions);\n        new_beziers = utils.clone(saved_beziers);\n        // draw\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, true);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.clear_deleted_reactions(true); // also clears segments and beziers\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(true);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.clear_deleted_nodes();\n        }\n    }.bind(this),\n        redo_fn = function () {\n            // redo\n            // clone the nodes and reactions, to redo this action later\n            extend_and_draw_reaction.apply(this, [new_nodes, new_reactions,\n                                                  new_beziers, selected_node_id]);\n        }.bind(this);\n\n    if (apply_undo_redo)\n        this.undo_stack.push(undo_fn, redo_fn);\n\n    return { undo: undo_fn,\n             redo: redo_fn };\n\n    // definitions\n    function extend_and_draw_reaction(new_nodes, new_reactions, new_beziers,\n                                      selected_node_id) {\n        this.extend_reactions(new_reactions);\n        utils.extend(this.beziers, new_beziers);\n        // remove the selected node so it can be updated\n        this.delete_node_data([selected_node_id]); // TODO this is a hack. fix\n        this.extend_nodes(new_nodes);\n\n        // apply the reaction and node data to the scales\n        // if the scale changes, redraw everything\n        if (this.has_data_on_reactions) {\n            var scale_changed = this.calc_data_stats('reaction');\n            if (scale_changed) this.draw_all_reactions(true, false);\n            else this.draw_these_reactions(Object.keys(new_reactions));\n        } else {\n            this.draw_these_reactions(Object.keys(new_reactions));\n        }\n        if (this.has_data_on_nodes) {\n            var scale_changed = this.calc_data_stats('metabolite');\n            if (scale_changed) this.draw_all_nodes(false);\n            else this.draw_these_nodes(Object.keys(new_nodes));\n        } else {\n            this.draw_these_nodes(Object.keys(new_nodes));\n        }\n\n        // select new primary metabolite\n        for (var node_id in new_nodes) {\n            var node = new_nodes[node_id];\n            if (node.node_is_primary && node_id!=selected_node_id) {\n                this.select_metabolite_with_id(node_id);\n                var new_coords = { x: node.x, y: node.y };\n                if (this.zoom_container)\n                    this.zoom_container.translate_off_screen(new_coords);\n            }\n        }\n    }\n\n}\nfunction cycle_primary_node() {\n    var selected_nodes = this.get_selected_nodes();\n    // get the first node\n    var node_id = Object.keys(selected_nodes)[0],\n        node = selected_nodes[node_id],\n        reactions = this.reactions,\n        nodes = this.nodes;\n    // make the other reactants or products secondary\n    // 1. Get the connected anchor nodes for the node\n    var connected_anchor_ids = [],\n        reactions_to_draw;\n    nodes[node_id].connected_segments.forEach(function(segment_info) {\n        reactions_to_draw = [segment_info.reaction_id];\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        connected_anchor_ids.push(segment.from_node_id==node_id ?\n                                  segment.to_node_id : segment.from_node_id);\n    });\n    // can only be connected to one anchor\n    if (connected_anchor_ids.length != 1) {\n        console.error('Only connected nodes with a single reaction can be selected');\n        return;\n    }\n    var connected_anchor_id = connected_anchor_ids[0];\n    // 2. find nodes connected to the anchor that are metabolites\n    var related_node_ids = [node_id];\n    var segments = [];\n    nodes[connected_anchor_id].connected_segments.forEach(function(segment_info) { // deterministic order\n        var segment;\n        try {\n            segment = reactions[segment_info.reaction_id].segments[segment_info.segment_id];\n            if (segment === undefined) throw new Error('undefined segment');\n        } catch (e) {\n            console.warn('Could not find connected segment ' + segment_info.segment_id);\n            return;\n        }\n        var conn_met_id = segment.from_node_id == connected_anchor_id ? segment.to_node_id : segment.from_node_id,\n            conn_node = nodes[conn_met_id];\n        if (conn_node.node_type == 'metabolite' && conn_met_id != node_id) {\n            related_node_ids.push(String(conn_met_id));\n        }\n    });\n    // 3. make sure they only have 1 reaction connection, and check if\n    // they match the other selected nodes\n    for (var i=0; i<related_node_ids.length; i++) {\n        if (nodes[related_node_ids[i]].connected_segments.length > 1) {\n            console.error('Only connected nodes with a single reaction can be selected');\n            return;\n        }\n    }\n    for (var a_selected_node_id in selected_nodes) {\n        if (a_selected_node_id!=node_id && related_node_ids.indexOf(a_selected_node_id) == -1) {\n            console.warn('Selected nodes are not on the same reaction');\n            return;\n        }\n    }\n    // 4. change the primary node, and change coords, label coords, and beziers\n    var nodes_to_draw = [],\n        last_i = related_node_ids.length - 1,\n        last_node = nodes[related_node_ids[last_i]],\n        last_is_primary = last_node.node_is_primary,\n        last_coords = { x: last_node.x, y: last_node.y,\n                        label_x: last_node.label_x, label_y: last_node.label_y };\n    if (last_node.connected_segments.length > 1)\n        console.warn('Too many connected segments for node ' + last_node.node_id);\n    var last_segment_info = last_node.connected_segments[0], // guaranteed above to have only one\n        last_segment;\n    try {\n        last_segment = reactions[last_segment_info.reaction_id].segments[last_segment_info.segment_id];\n        if (last_segment === undefined) throw new Error('undefined segment');\n    } catch (e) {\n        console.error('Could not find connected segment ' + last_segment_info.segment_id);\n        return;\n    }\n    var last_bezier = { b1: last_segment.b1, b2: last_segment.b2 },\n        primary_node_id;\n    related_node_ids.forEach(function(related_node_id) {\n        var node = nodes[related_node_id],\n            this_is_primary = node.node_is_primary,\n            these_coords = { x: node.x, y: node.y,\n                             label_x: node.label_x, label_y: node.label_y },\n            this_segment_info = node.connected_segments[0],\n            this_segment = reactions[this_segment_info.reaction_id].segments[this_segment_info.segment_id],\n            this_bezier = { b1: this_segment.b1, b2: this_segment.b2 };\n        node.node_is_primary = last_is_primary;\n        node.x = last_coords.x; node.y = last_coords.y;\n        node.label_x = last_coords.label_x; node.label_y = last_coords.label_y;\n        this_segment.b1 = last_bezier.b1; this_segment.b2 = last_bezier.b2;\n        last_is_primary = this_is_primary;\n        last_coords = these_coords;\n        last_bezier = this_bezier;\n        if (node.node_is_primary) primary_node_id = related_node_id;\n        nodes_to_draw.push(related_node_id);\n    });\n    // 5. cycle the connected_segments array so the next time, it cycles differently\n    var old_connected_segments = nodes[connected_anchor_id].connected_segments,\n        last_i = old_connected_segments.length - 1,\n        new_connected_segments = [old_connected_segments[last_i]];\n    old_connected_segments.forEach(function(segment, i) {\n        if (last_i==i) return;\n        new_connected_segments.push(segment);\n    });\n    nodes[connected_anchor_id].connected_segments = new_connected_segments;\n    // 6. draw the nodes\n    this.draw_these_nodes(nodes_to_draw);\n    this.draw_these_reactions(reactions_to_draw);\n    // 7. select the primary node\n    this.select_metabolite_with_id(primary_node_id);\n    return;\n}\n\nfunction toggle_selected_node_primary() {\n    /** Toggle the primary/secondary status of each selected node.\n\n     Undoable.\n\n     */\n    var selected_node_ids = this.get_selected_node_ids(),\n        go = function(ids) {\n            var nodes_to_draw = {},\n                hide_secondary_metabolites = this.settings.get_option('hide_secondary_metabolites');\n            ids.forEach(function(id) {\n                if (!(id in this.nodes)) {\n                    console.warn('Could not find node: ' + id);\n                    return;\n                }\n                var node = this.nodes[id];\n                if (node.node_type == 'metabolite') {\n                    node.node_is_primary = !node.node_is_primary;\n                    nodes_to_draw[id] = node;\n                }\n            }.bind(this));\n            // draw the nodes\n            this.draw_these_nodes(Object.keys(nodes_to_draw));\n            // draw associated reactions\n            if (hide_secondary_metabolites) {\n                var out = this.segments_and_reactions_for_nodes(nodes_to_draw),\n                    reaction_ids_to_draw_o = {};\n                for (var id in out.segment_objs_w_segments) {\n                    var r_id = out.segment_objs_w_segments[id].reaction_id;\n                    reaction_ids_to_draw_o[r_id] = true;\n                }\n                this.draw_these_reactions(Object.keys(reaction_ids_to_draw_o));\n            }\n        }.bind(this);\n\n    // go\n    go(selected_node_ids);\n\n    // add to the undo stack\n    this.undo_stack.push(function () {\n        go(selected_node_ids);\n    }, function () {\n        go(selected_node_ids);\n    });\n}\n\nfunction segments_and_reactions_for_nodes(nodes) {\n    /** Get segments and reactions that should be deleted with node deletions\n\n     */\n    var segment_objs_w_segments = {},\n        these_reactions = {},\n        segment_ids_for_reactions = {},\n        reactions = this.reactions;\n    // for each node\n    for (var node_id in nodes) {\n        var node = nodes[node_id];\n        // find associated segments and reactions\n        node.connected_segments.forEach(function(segment_obj) {\n            var segment;\n            try {\n                segment = reactions[segment_obj.reaction_id].segments[segment_obj.segment_id];\n                if (segment === undefined) throw new Error('undefined segment');\n            } catch (e) {\n                console.warn('Could not find connected segments for node');\n                return;\n            }\n            var segment_obj_w_segment = utils.clone(segment_obj);\n            segment_obj_w_segment['segment'] = utils.clone(segment);\n            segment_objs_w_segments[segment_obj.segment_id] = segment_obj_w_segment;\n            if (!(segment_obj.reaction_id in segment_ids_for_reactions))\n                segment_ids_for_reactions[segment_obj.reaction_id] = [];\n            segment_ids_for_reactions[segment_obj.reaction_id].push(segment_obj.segment_id);\n        });\n    }\n    // find the reactions that should be deleted because they have no segments left\n    for (var reaction_id in segment_ids_for_reactions) {\n        var reaction = reactions[reaction_id],\n            these_ids = segment_ids_for_reactions[reaction_id],\n            has = true;\n        for (var segment_id in reaction.segments) {\n            if (these_ids.indexOf(segment_id)==-1) has = false;\n        }\n        if (has) these_reactions[reaction_id] = reaction;\n    }\n    return { segment_objs_w_segments: segment_objs_w_segments, reactions: these_reactions };\n}\n\nfunction new_text_label(coords, text) {\n    // make an label\n    var out = build.new_text_label(this.largest_ids, text, coords);\n    this.text_labels[out.id] = out.label;\n    var sel = this.draw_these_text_labels([out.id]);\n    // add to the search index\n    this.search_index.insert('l' + out.id, { 'name': text,\n                                             'data': { type: 'text_label',\n                                                       text_label_id: out.id }});\n    return out.id;\n}\n\nfunction edit_text_label(text_label_id, new_value, should_draw) {\n    // save old value\n    var saved_value = this.text_labels[text_label_id].text,\n        edit_and_draw = function(new_val, should_draw) {\n            // set the new value\n            this.text_labels[text_label_id].text = new_val;\n            if (should_draw) this.draw_these_text_labels([text_label_id]);\n            // update in the search index\n            var record_id = 'l' + text_label_id,\n                found = this.search_index.remove(record_id);\n            if (!found)\n                console.warn('Could not find modified text label in search index');\n            this.search_index.insert(record_id, { 'name': new_val,\n                                                  'data': { type: 'text_label',\n                                                            text_label_id: text_label_id }});\n        }.bind(this);\n\n    // edit the label\n    edit_and_draw(new_value, should_draw);\n\n    // add to undo stack\n    this.undo_stack.push(function() {\n        edit_and_draw(saved_value, should_draw);\n    }, function () {\n        edit_and_draw(new_value, should_draw);\n    });\n}\n\n// -------------------------------------------------------------------------\n// Zoom\n\nfunction zoom_extent_nodes(margin) {\n    /** Zoom to fit all the nodes.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'nodes');\n}\nfunction zoom_extent_canvas(margin) {\n    /** Zoom to fit the canvas.\n\n     margin: optional argument to set the margins as a fraction of height.\n\n     Returns error if one is raised.\n\n     */\n    this._zoom_extent(margin, 'canvas');\n}\nfunction _zoom_extent(margin, mode) {\n    /** Zoom to fit the canvas or all the nodes. Returns error if one is\n     raised.\n\n     Arguments\n     ---------\n\n     margin: optional argument to set the margins.\n\n     mode: Values are 'nodes', 'canvas'.\n\n     */\n\n    // optional args\n    if (margin===undefined) margin = (mode=='nodes' ? 0.2 : 0);\n    if (mode===undefined) mode = 'canvas';\n\n    var new_zoom, new_pos,\n        size = this.get_size();\n    // scale margin to window size\n    margin = margin * size.height;\n\n    if (mode=='nodes') {\n        // get the extent of the nodes\n        var min = { x: null, y: null }, // TODO make infinity?\n            max = { x: null, y: null };\n        for (var node_id in this.nodes) {\n            var node = this.nodes[node_id];\n            if (min.x===null) min.x = node.x;\n            if (min.y===null) min.y = node.y;\n            if (max.x===null) max.x = node.x;\n            if (max.y===null) max.y = node.y;\n\n            min.x = Math.min(min.x, node.x);\n            min.y = Math.min(min.y, node.y);\n            max.x = Math.max(max.x, node.x);\n            max.y = Math.max(max.y, node.y);\n        }\n        // set the zoom\n        new_zoom = Math.min((size.width - margin*2) / (max.x - min.x),\n                            (size.height - margin*2) / (max.y - min.y));\n        new_pos = { x: - (min.x * new_zoom) + margin + ((size.width - margin*2 - (max.x - min.x)*new_zoom) / 2),\n                    y: - (min.y * new_zoom) + margin + ((size.height - margin*2 - (max.y - min.y)*new_zoom) / 2) };\n    } else if (mode=='canvas') {\n        // center the canvas\n        new_zoom =  Math.min((size.width - margin*2) / (this.canvas.width),\n                             (size.height - margin*2) / (this.canvas.height));\n        new_pos = { x: - (this.canvas.x * new_zoom) + margin + ((size.width - margin*2 - this.canvas.width*new_zoom) / 2),\n                    y: - (this.canvas.y * new_zoom) + margin + ((size.height - margin*2 - this.canvas.height*new_zoom) / 2) };\n    } else {\n        return console.error('Did not recognize mode');\n    }\n    debugger;\n    this.zoom_container.go_to(new_zoom, new_pos);\n    return null;\n}\n\nfunction get_size() {\n    return this.zoom_container.get_size();\n}\n\nfunction zoom_to_reaction(reaction_id) {\n    var reaction = this.reactions[reaction_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - reaction.label_x * new_zoom + size.width/2,\n                    y: - reaction.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_node(node_id) {\n    var node = this.nodes[node_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - node.label_x * new_zoom + size.width/2,\n                    y: - node.label_y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction zoom_to_text_label(text_label_id) {\n    var text_label = this.text_labels[text_label_id],\n        new_zoom = 0.5,\n        size = this.get_size(),\n        new_pos = { x: - text_label.x * new_zoom + size.width/2,\n                    y: - text_label.y * new_zoom + size.height/2 };\n    this.zoom_container.go_to(new_zoom, new_pos);\n}\n\nfunction highlight_reaction(reaction_id) {\n    this.highlight(this.sel.selectAll('#r'+reaction_id).selectAll('text'));\n}\n\nfunction highlight_node(node_id) {\n    this.highlight(this.sel.selectAll('#n'+node_id).selectAll('text'));\n}\n\nfunction highlight_text_label(text_label_id) {\n    this.highlight(this.sel.selectAll('#l'+text_label_id).selectAll('text'));\n}\n\nfunction highlight(sel) {\n    this.sel.selectAll('.highlight')\n        .classed('highlight', false);\n    if (sel !== null) {\n        sel.classed('highlight', true);\n    }\n}\n\n// -------------------------------------------------------------------------\n// IO\n\nfunction save() {\n    utils.download_json(this.map_for_export(), this.map_name);\n}\nfunction map_for_export() {\n    var out = [{ \"map_name\": this.map_name,\n                 \"map_id\": this.map_id,\n                 \"map_description\": this.map_description,\n                 \"homepage\": \"https://escher.github.io\",\n                 \"schema\": \"https://escher.github.io/escher/jsonschema/1-0-0#\"\n               },\n               { reactions: utils.clone(this.reactions),\n                 nodes: utils.clone(this.nodes),\n                 text_labels: utils.clone(this.text_labels),\n                 canvas: this.canvas.size_and_location() }\n              ];\n\n    // remove extra data\n    for (var r_id in out[1].reactions) {\n        var reaction = out[1].reactions[r_id],\n            new_reaction = {};\n        ['name', 'bigg_id','reversibility', 'label_x', 'label_y',\n         'gene_reaction_rule', 'genes', 'metabolites'\n        ].forEach(function(attr) {\n            new_reaction[attr] = reaction[attr];\n        });\n        new_reaction['segments'] = {};\n        for (var s_id in reaction.segments) {\n            var segment = reaction.segments[s_id],\n                new_segment = {};\n            ['from_node_id', 'to_node_id', 'b1', 'b2'\n            ].forEach(function(attr) {\n                new_segment[attr] = segment[attr];\n            });\n            new_reaction['segments'][s_id] = new_segment;\n        }\n        out[1].reactions[r_id] = new_reaction;\n    }\n    for (var n_id in out[1].nodes) {\n        var node = out[1].nodes[n_id],\n            new_node = {},\n            attrs;\n        if (node.node_type == 'metabolite') {\n            attrs = ['node_type', 'x', 'y', 'bigg_id', 'name', 'label_x', 'label_y',\n                     'node_is_primary'];\n        } else {\n            attrs = ['node_type', 'x', 'y'];\n        }\n        attrs.forEach(function(attr) {\n            new_node[attr] = node[attr];\n        });\n        out[1].nodes[n_id] = new_node;\n    }\n    for (var t_id in out[1].text_labels) {\n        var text_label = out[1].text_labels[t_id],\n            new_text_label = {},\n            attrs = [\"x\", \"y\", \"text\"];\n        attrs.forEach(function(attr) {\n            new_text_label[attr] = text_label[attr];\n        });\n        out[1].text_labels[t_id] = new_text_label;\n    }\n    // canvas\n    var canvas_el = out[1].canvas,\n        new_canvas_el = {},\n        attrs = [\"x\", \"y\", \"width\", \"height\"];\n    attrs.forEach(function(attr) {\n        new_canvas_el[attr] = canvas_el[attr];\n    });\n    out[1].canvas = new_canvas_el;\n\n    return out;\n}\nfunction save_svg() {\n    // run the before callback\n    this.callback_manager.run('before_svg_export');\n\n    // turn of zoom and translate so that illustrator likes the map\n    var window_scale = this.zoom_container.window_scale,\n        window_translate = this.zoom_container.window_translate,\n        canvas_size_and_loc = this.canvas.size_and_location(),\n        mouse_node_size_and_trans = { w: this.canvas.mouse_node.attr('width'),\n                                      h: this.canvas.mouse_node.attr('height'),\n                                      transform:  this.canvas.mouse_node.attr('transform')};\n    this.zoom_container.go_to(1.0, {x: -canvas_size_and_loc.x, y: -canvas_size_and_loc.y}, false);\n    this.svg.attr('width', canvas_size_and_loc.width);\n    this.svg.attr('height', canvas_size_and_loc.height);\n    this.canvas.mouse_node.attr('width', '0px');\n    this.canvas.mouse_node.attr('height', '0px');\n    this.canvas.mouse_node.attr('transform', null);\n    // hide the segment control points\n    var hidden_sel = this.sel.selectAll('.multimarker-circle,.midmarker-circle,#canvas')\n            .style('visibility', 'hidden');\n\n    // do the epxort\n    utils.download_svg('saved_map', this.svg, true);\n\n    // revert everything\n    this.zoom_container.go_to(window_scale, window_translate, false);\n    this.svg.attr('width', null);\n    this.svg.attr('height', null);\n    this.canvas.mouse_node.attr('width', mouse_node_size_and_trans.w);\n    this.canvas.mouse_node.attr('height', mouse_node_size_and_trans.h);\n    this.canvas.mouse_node.attr('transform', mouse_node_size_and_trans.transform);\n    // unhide the segment control points\n    hidden_sel.style('visibility', null);\n\n    // run the after callback\n    this.callback_manager.run('after_svg_export');\n}\n\nfunction convert_map() {\n    /** Assign the descriptive names and gene_reaction_rules from the model\n     to the map.\n\n     If no map is loaded, then throw an Error.\n\n     If some reactions are not in the model, then warn in the status.\n\n     */\n    // run the before callback\n    this.callback_manager.run('before_convert_map');\n\n    // check the model\n    if (!this.has_cobra_model()) throw Error('No COBRA model loaded.');\n    var model = this.cobra_model;\n\n    // ids for reactions and metabolites not found in the model\n    var reactions_not_found = {},\n        reaction_attrs = ['name', 'gene_reaction_rule', 'genes'],\n        met_nodes_not_found = {},\n        metabolite_attrs = ['name'],\n        found;\n    // convert reactions\n    for (var reaction_id in this.reactions) {\n        var reaction = this.reactions[reaction_id];\n        found = false;\n        // find in cobra model\n        for (var model_reaction_id in model.reactions) {\n            var model_reaction = model.reactions[model_reaction_id];\n            if (model_reaction.bigg_id == reaction.bigg_id) {\n                reaction_attrs.forEach(function(attr) {\n                    reaction[attr] = model_reaction[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            reactions_not_found[reaction_id] = true;\n    }\n    // convert metabolites\n    for (var node_id in this.nodes) {\n        var node = this.nodes[node_id];\n        // only look at metabolites\n        if (node.node_type != 'metabolite') continue;\n        found = false;\n        // find in cobra model\n        for (var model_metabolite_id in model.metabolites) {\n            var model_metabolite = model.metabolites[model_metabolite_id];\n            if (model_metabolite.bigg_id == node.bigg_id) {\n                metabolite_attrs.forEach(function(attr) {\n                    node[attr] = model_metabolite[attr];\n                });\n                found = true;\n            }\n        }\n        if (!found)\n            met_nodes_not_found[node_id] = true;\n    }\n\n    // status\n    var n_reactions_not_found = Object.keys(reactions_not_found).length,\n        n_met_nodes_not_found = Object.keys(met_nodes_not_found).length,\n        status_delay = 3000;\n    if (n_reactions_not_found == 0 &&\n        n_met_nodes_not_found == 0) {\n        this.set_status('Successfully converted attributes.', status_delay);\n    } else if (n_met_nodes_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else if (n_reactions_not_found == 0) {\n        this.set_status('Converted attributes, but count not find ' + n_met_nodes_not_found +\n                        ' metabolites in the model.', status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    } else {\n        this.set_status('Converted attributes, but count not find ' + n_reactions_not_found +\n                        ' reactions and ' + n_met_nodes_not_found + ' metabolites in the model.',\n                        status_delay);\n        this.settings.set_conditional('highlight_missing', true);\n    }\n\n    // redraw\n    this.draw_everything();\n\n    // run the after callback\n    this.callback_manager.run('after_convert_map');\n}\n","/** PlacedDiv. A container to position an html div to match the coordinates of a\n SVG element. */\n\nvar utils = require('./utils');\n\n\nvar PlacedDiv = utils.make_class();\n// instance methods\nPlacedDiv.prototype = {\n    init: init,\n    is_visible: is_visible,\n    place: place,\n    hide: hide\n};\nmodule.exports = PlacedDiv;\n\n\n// definitions\nfunction init(div, map, displacement) {\n    // make the input box\n    this.div = div;\n\n    if (displacement===undefined)\n        displacement = {x: 0, y: 0};\n    this.displacement = displacement;\n\n    this.map = map;\n}\n\nfunction is_visible() {\n    return this.div.style('display') != 'none';\n}\n\nfunction place(coords) {\n    /** Position the html div to match the given SVG coordinates.\n\n     */\n    // show the input\n    this.div.style('display', null);\n\n    // move the new input\n    var window_translate = this.map.zoom_container.window_translate,\n        window_scale = this.map.zoom_container.window_scale,\n        map_size = this.map.get_size(),\n        left = Math.max(20,\n                        Math.min(map_size.width - 270,\n                                 (window_scale * coords.x + window_translate.x - this.displacement.x))),\n        top = Math.max(20,\n                       Math.min(map_size.height - 40,\n                                (window_scale * coords.y + window_translate.y - this.displacement.y)));\n    this.div.style('position', 'absolute')\n        .style('display', 'block')\n        .style('left', left+'px')\n        .style('top', top+'px');\n}\n\nfunction hide() {\n    this.div.style('display', 'none');\n}\n","/** A QuickJump menu to move between maps.\n\n Arguments\n ---------\n\n sel: The d3 selection of an html node to place the menu inside.\n\n options: An array of map names to jump to.\n\n load_callback: A callback function that accepts two arguments: map_name,\n and another callback which returns true or false for success or failure\n (callback purgatory).\n\n */\n\nvar utils = require('./utils');\n\n\nvar QuickJump = utils.make_class();\n// instance methods\nQuickJump.prototype = {\n    init: init,\n    reset_selection: reset_selection,\n    replace_state_for_map_name: replace_state_for_map_name\n};\nmodule.exports = QuickJump;\n\n\n// instance methods\nfunction init(sel, load_callback) {\n    // set up the menu\n    var select_sel = sel.append('select')\n            .attr('id', 'quick-jump-menu')\n            .attr('class', 'form-control');\n    this.selector = select_sel;\n\n    // get the options to show\n    var url_comp = utils.parse_url_components(window),\n        current = ('map_name' in url_comp) ? url_comp.map_name : null,\n        quick_jump_path = ('quick_jump_path' in url_comp) ? url_comp.quick_jump_path : null,\n        options = ('quick_jump' in url_comp) ? url_comp.quick_jump : [],\n        default_value = '— Jump to map —',\n        view_options = [default_value].concat(options);\n    if (current !== null) {\n        view_options = view_options.filter(function(o) {\n            return o != current;\n        });\n    }\n\n    select_sel.selectAll('option')\n        .data(view_options)\n        .enter()\n        .append('option')\n        .text(function(d) {\n            // works whether or not a '.' is present\n            return d.split('.').slice(-1)[0];\n        });\n\n    // only show if there are options\n    select_sel.style('display', view_options.length > 1 ? 'block' : 'none');\n\n    // on selection\n    var change_map = function(map_name) {\n        load_callback(map_name, quick_jump_path, function(success) {\n            if (success)\n                this.replace_state_for_map_name(map_name);\n            else\n                this.reset_selection();\n        }.bind(this));\n    }.bind(this);\n\n    select_sel.on('change', function() {\n        // get the new map\n        var map_name = this.options[this.selectedIndex].__data__;\n        change_map(map_name);\n    });\n}\n\nfunction reset_selection() {\n    this.selector.node().selectedIndex = 0;\n}\n\nfunction replace_state_for_map_name(map_name) {\n    /** Just changes the url to match the new map name. Does not actually\n     manage the HTML5 history.\n\n     */\n\n    // update the url with the new map\n    var url = window.location.href\n            .replace(/(map_name=)([^&]+)(&|$)/, '$1' + map_name + '$3');\n    window.history.replaceState('Not implemented', '', url);\n}\n","/** Scale */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nvar Scale = utils.make_class();\nScale.prototype = {\n    init: init,\n    connect_to_settings: connect_to_settings\n};\nmodule.exports = Scale;\n\n\nfunction init() {\n    this.x = d3.scale.linear();\n    this.y = d3.scale.linear();\n    this.x_size = d3.scale.linear();\n    this.y_size = d3.scale.linear();\n    this.size = d3.scale.linear();\n    this.reaction_color = d3.scale.linear().clamp(true);\n    this.reaction_size = d3.scale.linear().clamp(true);\n    this.metabolite_color = d3.scale.linear().clamp(true);\n    this.metabolite_size = d3.scale.linear().clamp(true);\n    this.scale_path = function(path) {\n        var x_fn = this.x, y_fn = this.y;\n        // TODO: scale arrow width\n        var str = d3.format(\".2f\"),\n            path = path.replace(/(M|L)([0-9-.]+),?\\s*([0-9-.]+)/g, function (match, p0, p1, p2) {\n                return p0 + [str(x_fn(parseFloat(p1))), str(y_fn(parseFloat(p2)))].join(', ');\n            }),\n            reg = /C([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)\\s*([0-9-.]+),?\\s*([0-9-.]+)/g;\n        path = path.replace(reg, function (match, p1, p2, p3, p4, p5, p6) {\n            return 'C'+str(x_fn(parseFloat(p1)))+','+\n                str(y_fn(parseFloat(p2)))+' '+\n                str(x_fn(parseFloat(p3)))+','+\n                str(y_fn(parseFloat(p4)))+' '+\n                [str(x_fn(parseFloat(p5)))+','+str(y_fn(parseFloat(p6)))];\n        });\n        return path;\n    }.bind(this);\n    this.scale_decimals = function(path, scale_fn, precision) {\n        var str = d3.format(\".\"+String(precision)+\"f\");\n        path = path.replace(/([0-9.]+)/g, function (match, p1) {\n            return str(scale_fn(parseFloat(p1)));\n        });\n        return path;\n    };\n}\n\nfunction connect_to_settings(settings, map, get_data_statistics) {\n    // domains\n    var update_reaction = function(s) {\n        var out = sort_scale(s, get_data_statistics()['reaction']);\n        this.reaction_color.domain(out.domain);\n        this.reaction_size.domain(out.domain);\n        this.reaction_color.range(out.color_range);\n        this.reaction_size.range(out.size_range);\n    }.bind(this);\n    var update_metabolite = function(s) {\n        var out = sort_scale(s, get_data_statistics()['metabolite']);\n        this.metabolite_color.domain(out.domain);\n        this.metabolite_size.domain(out.domain);\n        this.metabolite_color.range(out.color_range);\n        this.metabolite_size.range(out.size_range);\n    }.bind(this);\n\n    // scale changes\n    settings.streams['reaction_scale'].onValue(update_reaction);\n    settings.streams['metabolite_scale'].onValue(update_metabolite);\n    // stats changes\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) update_reaction(settings.get_option('reaction_scale'));\n    });\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) update_metabolite(settings.get_option('metabolite_scale'));\n    });\n\n    // definitions\n    function sort_scale(scale, stats) {\n        var sorted = scale.map(function(x) {\n            var v;\n            if (x.type in stats)\n                v = stats[x.type];\n            else if (x.type == 'value')\n                v = x.value;\n            else\n                throw new Error('Bad domain type ' + x.type);\n            return { v: v,\n                     color: x.color,\n                     size: x.size };\n        }).sort(function(a, b) {\n            return a.v - b.v;\n        });\n        return { domain: sorted.map(function(x) { return x.v; }),\n                 color_range: sorted.map(function(x) { return x.color; }),\n                 size_range: sorted.map(function(x) { return x.size; }) };\n    }\n}\n","/** ScaleEditor. An interactive UI to edit color and size scales.\n\n Attributes\n ----------\n\n sel: A d3 selection.\n\n type: A type, that should be unique on the page.\n\n settings: The Settings object.\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar bacon = require('baconjs');\n\n\nvar ScaleEditor = utils.make_class();\n// instance methods\nScaleEditor.prototype = {\n    init: init,\n    update: update,\n    update_no_data: update_no_data,\n    _data_not_loaded: _data_not_loaded\n};\nmodule.exports = ScaleEditor;\n\n\n// instance methods\nfunction init(sel, type, settings, get_data_statistics) {\n    // sels\n    var grad_id = 'grad' + type + this.unique_string;\n    this.w = 400;\n    this.h = 30;\n    this.x = 20;\n    this.input_width = 90;\n    this.input_height = 24;\n    var b = sel.append('div')\n            .attr('class', 'scale-editor');\n    // no data loaded\n    this.data_not_loaded = b.append('div')\n        .attr('class', 'data-not-loaded')\n        .text((type == 'reaction' ? 'Reaction and gene' : 'Metabolite') + ' data not loaded');\n    // label\n    this.input_label_group = b.append('div')\n        .attr('class', 'input-label-group');\n    // no data\n    var nd = b.append('div')\n            .style('top', this.input_height * 3 + 56 + 10 + 'px')\n            .attr('class', 'no-data');\n    nd.append('span').text('Styles for ' + type + 's with no data')\n        .attr('class', 'no-data-heading');\n    this.no_data_container = nd.append('div');\n    var c = b.append('div')\n            .attr('class', 'centered');\n    this.add_group = c.append('div');\n    this.trash_group = c.append('div')\n        .attr('class', 'trash-container');\n    var svg = c.append('svg')\n            .attr('class', 'scale-svg');\n    this.input_group = c.append('div')\n        .attr('class', 'input-container');\n    this.gradient = svg.append('defs')\n        .append('linearGradient')\n        .attr('id', grad_id);\n    svg.append('rect')\n        .attr('class', 'rect')\n        .attr('fill', 'url(#' + grad_id + ')')\n        .attr('width', this.w + 'px')\n        .attr('height', this.h + 'px')\n        .attr('x', this.x + 'px'),\n    this.pickers_group = svg.append('g');\n\n    // settings\n    this.type = type;\n    this.settings = settings;\n    this.get_data_statistics = get_data_statistics;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    // collect data\n    this.no_data = {};\n    ['color', 'size'].forEach(function(s) {\n        this.no_data[s] = null;\n        this.settings.streams[this.type + '_no_data_' + s].onValue(function(val) {\n            this.no_data[s] = val;\n            this.update_no_data();\n        }.bind(this));\n    }.bind(this));\n\n    this.settings.streams[type + '_scale'].onValue(function(scale) {\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n}\n\nfunction update() {\n    var scale = this.scale,\n        stats = this.get_data_statistics()[this.type],\n        bar_w = 14,\n        bar_h = 35,\n        x_disp = this.x,\n        data_not_loaded = this._data_not_loaded();\n\n    // Must have max and min. Otherwise, assume that no data is loaded.\n    if (data_not_loaded) {\n        scale = [{ type: 'min', 'color': null, 'size': null },\n                 { type: 'max', 'color': null, 'size': null }];\n        stats = { 'min': 0, 'max': 1 };\n    }\n\n    var sc = d3.scale.linear()\n            .domain([0, this.w])\n            .range([stats.min, stats.max]),\n        sc_size = d3.scale.linear()\n            .domain([0, this.w])\n            .range([0, stats.max - stats.min]);\n\n    // ---------------------------------------------------------------------\n    // convenience functions\n    var bring_to_front = function(d, i) {\n        // bring an input set to the front\n        this.input_group.selectAll('.input-set').each(function(d2) {\n            d3.select(this).classed('selected-set', d === d2);\n        });\n    }.bind(this);\n\n    var get_this_val = function(d) {\n        return (d.type == 'value') ? d.value : stats[d.type];\n    };\n\n    var set_scale = function(scale) {\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this);\n\n    // ---------------------------------------------------------------------\n    // make the gradient\n    var sorted_domain = scale.map(function(d) {\n        return { frac: (get_this_val(d) - stats.min) / (stats.max - stats.min),\n                 color: d.color };\n    }).filter(function(d) {\n        return (d.frac >= 0 && d.frac <= 1.0);\n    }).sort(function(a, b) {\n        return a.frac - b.frac;\n    });\n    var stops = this.gradient.selectAll('stop')\n            .data(sorted_domain);\n    stops.enter()\n        .append('stop');\n    stops.attr('offset', function(d) {\n        return d.frac * 100 + '%';\n    }).style('stop-color', function (d) {\n        return d.color === null ? '#F1ECFA' : d.color;\n    });\n    stops.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // no data sign\n\n    this.data_not_loaded.style('visibility', (data_not_loaded ? null : 'hidden'));\n\n    // ---------------------------------------------------------------------\n    // make the pickers\n    var pickers = this.pickers_group\n            .selectAll('.picker')\n            .data(scale);\n    // drag\n    var drag = d3.behavior.drag();\n    drag.on('drag', function(d, i) {\n        // on drag, make it a value type\n        if (['value', 'min', 'max'].indexOf(scale[i].type) === -1) {\n            // get the current value and set it\n            scale[i].value = get_this_val(d);\n            scale[i].type = 'value';\n        }\n        // change the model on drag\n        var new_d = scale[i].value + sc_size(d3.event.dx),\n            buf = sc_size(bar_w + 2);\n        if (new_d > stats.max - buf) new_d = stats.max - buf;\n        if (new_d < stats.min + buf) new_d = stats.min + buf;\n        // round to 2 decimals\n        new_d = Math.floor(new_d * 100.0) / 100.0;\n        scale[i].value = new_d;\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // enter\n    pickers.enter()\n        .append('g')\n        .attr('class', 'picker')\n        .style('cursor', 'pointer')\n        .append('rect');\n    // update\n    pickers.select('rect')\n        .attr('x', function(d, i) {\n            var val = get_this_val(d),\n                buf = bar_w + 2;\n            if (d.type == 'value' && val <= stats.min)\n                return sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            if (d.type == 'value' && val >= stats.max)\n                return sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            return sc.invert(val) - (bar_w / 2) + x_disp;\n        })\n        .attr('width', bar_w + 'px')\n        .attr('height', bar_h + 'px')\n        .call(drag)\n        .on('mousedown', bring_to_front);\n    // exit\n    pickers.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the delete buttons\n    var trashes = this.trash_group.selectAll('span')\n            .data(scale);\n    // enter\n    trashes.enter()\n        .append('span');\n    // update\n    trashes.attr('class', function(d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return null;\n        return 'trash glyphicon glyphicon-trash';\n    }).style('left', function(d) {\n        return sc.invert(get_this_val(d)) - (bar_w / 2) + x_disp + 'px';\n    }).on('click', function (d, i) {\n        if (d.type == 'min' || d.type == 'max')\n            return;\n        scale = scale.slice(0, i).concat(scale.slice(i + 1));\n        this.settings.set_conditional(this.type + '_scale', scale);\n        this.scale = scale;\n        this.update();\n    }.bind(this));\n    // exit\n    trashes.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // make the add button\n    var add = this.add_group.selectAll('.add')\n            .data(['add']);\n    // enter\n    add.enter()\n        .append('span')\n        .attr('class', 'add glyphicon glyphicon-plus');\n    // update\n    add.on('click', function (d) {\n        if (data_not_loaded) return;\n\n        var new_d = (stats.max + stats.min) / 2,\n            buf = sc_size(bar_w + 2),\n            last_ind = 0;\n        // try to make the new point not overlap\n        for (var j = 0, l = scale.length; j < l; j++) {\n            var th = get_this_val(scale[j]);\n            if (Math.abs(th - new_d) < buf) {\n                new_d = new_d + buf;\n                if (new_d > stats.max - buf) new_d = stats.max - buf;\n                if (new_d < stats.min + buf) new_d = stats.min + buf;\n            }\n            if (new_d > th)\n                last_ind = j;\n        }\n        // add\n        scale.push({ type: 'value',\n                     value: new_d,\n                     color: scale[last_ind].color,\n                     size: scale[last_ind].size });\n        set_scale(scale);\n    }.bind(this));\n    // exit\n    add.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // input labels\n    var labels = this.input_label_group.selectAll('.row-label')\n            .data(['Value:', 'Color:', 'Size:']);\n    // enter\n    labels.enter().append('div')\n        .attr('class', 'row-label')\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px');\n    // update\n    labels\n        .style('top', function(d, i) {\n            return 56 + (i * this.input_height) + 'px';\n        }.bind(this))\n        .text(function(d) { return d; });\n    // exit\n    labels.exit().remove();\n\n    // ---------------------------------------------------------------------\n    // inputs\n    var inputs = this.input_group.selectAll('.input-set')\n            .data(scale);\n\n    // enter\n    var i = inputs.enter()\n            .append('div')\n            .attr('class', 'input-set');\n    i.append('input')\n        .attr('class', 'domain-input')\n        .style('width', this.input_width + 'px');\n    // type picker\n    i.append('select')\n        .attr('class', 'domain-type-picker'),\n    // color input\n    i.append('input')\n        .attr('class', 'color-input')\n        .style('width', this.input_width + 'px');\n    i.append('input')\n        .attr('type', 'color')\n        .style('visibility', function() {\n            // hide the input if the HTML5 color picker is not supported\n            return (this.type == 'text') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    i.append('input')\n        .attr('class', 'size-input')\n        .style('width', this.input_width + 'px');\n\n    // update\n    inputs.style('height', this.input_height * 3 + 'px')\n        .style('width', this.input_width + 'px')\n        .style('left', function(d) {\n            var val = get_this_val(d),\n                buf = bar_w + 2,\n                l;\n            if (d.type == 'value' && val <= stats.min)\n                l = sc.invert(stats.min) - (bar_w / 2) + x_disp - buf;\n            else if (d.type == 'value' && val >= stats.max)\n                l = sc.invert(stats.max) - (bar_w / 2) + x_disp + buf;\n            else\n                l = sc.invert(val) - (bar_w / 2) + x_disp;\n            // don't go over the right edge of the bar\n            if (l + this.input_width > this.w + this.x)\n                l = l - this.input_width + (bar_w / 2);\n            return l + 'px';\n        }.bind(this))\n        .on('mousedown', bring_to_front);\n\n    var format = d3.format('.4g');\n    inputs.select('.domain-input')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            if (d.type == 'value') {\n                this.value = get_this_val(d);\n                this.disabled = false;\n            } else {\n                this.value = d.type + ' (' + format(get_this_val(d)) + ')';\n                this.disabled = true;\n            }\n        }).on('change', function(d, i) {\n            var buf = sc_size(bar_w + 2),\n                new_d = parseFloat(this.value);\n            scale[i].value = new_d;\n            set_scale(scale);\n        });\n    // update type picker\n    var select = inputs.select('.domain-type-picker'),\n        // get the function types, except min and max\n        stat_types = (['value'].concat(Object.keys(stats))\n                      .filter(function(x) {\n                          return x != 'min' && x != 'max';\n                      })),\n        opts = select.selectAll('option').data(stat_types);\n    opts.enter().append('option');\n    opts.attr('value', function(d) { return d; })\n        .text(function(d) { return d; });\n    opts.exit().remove();\n    select.style('visibility', function(d) {\n        return (d.type == 'min' || d.type == 'max') ? 'hidden' : null;\n    })\n        .style('left', (this.input_width - 20) + 'px')\n        .style('width', '20px')\n        .each(function (d, i) {\n            var sind = 0;\n            d3.select(this).selectAll('option').each(function(_, i) {\n                if (this.value == d.type)\n                    sind = i;\n            });\n            this.selectedIndex = sind;\n        }).on('change', function(d, i) {\n            // set the value to the current location\n            if (this.value == 'value')\n                scale[i].value = stats[d.type];\n            // switch to the new type\n            scale[i].type = this.value;\n            // reload\n            set_scale(scale);\n        });\n    // update color input\n    inputs.select('.color-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.color-picker')\n        .style('left', (this.input_width - this.input_height) + 'px')\n        .style('top', this.input_height + 'px')\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = (d.color === null ? '#dddddd' : d.color);\n            this.disabled = (d.color === null);\n        }).on('change', function(d, i) {\n            scale[i].color = this.value;\n            set_scale(scale);\n        });\n    inputs.select('.size-input')\n        .style('height', this.input_height + 'px')\n        .style('top', this.input_height * 2 + 'px')\n        .each(function (d, i) {\n            this.value = (d.size === null ? '' : d.size);\n            this.disabled = (d.size === null);\n        }).on('change', function(d, i) {\n            scale[i].size = parseFloat(this.value);\n            set_scale(scale);\n        });\n\n    // exit\n    inputs.exit().remove();\n}\n\nfunction update_no_data() {\n    var no_data = this.no_data,\n        data_not_loaded = this._data_not_loaded(),\n        label_w = 40;\n\n    var ins = this.no_data_container\n            .selectAll('.input-group')\n            .data([['color', 'Color:'], ['size', 'Size:']]);\n    // enter\n    var t = ins.enter().append('div')\n            .attr('class', 'input-group');\n    t.append('span');\n    t.append('input');\n    t.append('input')\n        .attr('type', 'color')\n        .style('visibility', function(d) {\n            // hide the input if the HTML5 color picker is not supported,\n            // or if this is a size box\n            return (this.type == 'text' || d[0] != 'color') ? 'hidden' : null;\n        })\n        .attr('class', 'color-picker');\n    // update\n    ins.select('span')\n        .text(function(d) { return d[1]; })\n        .style('height', this.input_height + 'px')\n        .style('line-height', this.input_height + 'px')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this));\n    var get_o = function(kind) {\n        return this.settings.get_option(this.type + '_no_data_' + kind);\n    }.bind(this);\n    ins.select('input')\n        .style('left', function(d, i) {\n            return (label_w + (label_w + this.input_width + 10) * i) + 'px';\n        }.bind(this))\n        .style('height', this.input_height + 'px')\n        .style('width', this.input_width + 'px')\n        .each(function(d) {\n            // initial value\n            this.value = data_not_loaded ? '' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d) {\n            var val = d3.event.target.value;\n            if (d[0] == 'size')\n                val = parseFloat(val);\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    ins.select('.color-picker')\n        .style('left', function(d, i) {\n            return ((label_w + this.input_width) * (i + 1) - this.input_height) + 'px';\n        }.bind(this))\n        .style('width', this.input_height + 'px')\n        .style('height', this.input_height + 'px')\n        .each(function (d, i) {\n            this.value = data_not_loaded ? '#dddddd' : no_data[d[0]];\n            this.disabled = data_not_loaded;\n        })\n        .on('change', function(d, i) {\n            var val = d3.event.target.value;\n            this.no_data[d[0]] = val;\n            this.settings.set_conditional(this.type + '_no_data_' + d[0], val);\n            this.update_no_data();\n        }.bind(this));\n    // exit\n    ins.exit().remove();\n}\n\nfunction _data_not_loaded() {\n    var stats = this.get_data_statistics()[this.type];\n    return (stats.max === null || stats.min === null);\n}\n","/** SearchBar */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\n\nvar SearchBar = utils.make_class();\n// instance methods\nSearchBar.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    update: update,\n    next: next,\n    previous: previous\n};\nmodule.exports = SearchBar;\n\n\n// instance methods\nfunction init(sel, search_index, map) {\n    var container = sel.attr('class', 'search-container')\n            .style('display', 'none');\n    this.input = container.append('input')\n        .attr('class', 'search-bar');\n    var group = container.append('div').attr('class', 'btn-group btn-group-sm');\n    group.append('button')\n        .attr(\"class\", \"btn btn-default\")\n        .on('click', this.previous.bind(this))\n        .append('span').attr('class', \"glyphicon glyphicon-chevron-left\");\n    group.append('button')\n        .attr(\"class\", \"btn btn-default\")\n        .on('click', this.next.bind(this))\n        .append('span').attr('class', \"glyphicon glyphicon-chevron-right\");\n    this.counter = container.append('div')\n        .attr('class', 'search-counter');\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default close-button\")\n        .on('click', function() {\n            this.toggle(false);\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    this.callback_manager = new CallbackManager();\n\n    this.selection = container;\n    this.map = map;\n    this.search_index = search_index;\n\n    this.current = 1;\n    this.results = null;\n\n    var on_input_fn = function(input) {\n        this.current = 1;\n        this.results = this.search_index.find(input.value);\n        this.update();\n    }.bind(this, this.input.node());\n    this.input.on('input', utils.debounce(on_input_fn, 200));\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) this.is_active = !this.is_active;\n    else this.is_active = on_off;\n\n    if (this.is_active) {\n        this.selection.style('display', null);\n        this.counter.text(\"\");\n        this.input.node().value = \"\";\n        this.input.node().focus();\n        // escape key\n        this.escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.toggle(false);\n            }.bind(this), 'settings');\n        // enter key\n        this.enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.next();\n            }.bind(this), 'settings');\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        this.map.highlight(null);\n        this.selection.style(\"display\", \"none\");\n        this.results = null;\n        if (this.escape) this.escape.clear();\n        this.escape = null;\n        if (this.enter) this.enter.clear();\n        this.enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction update() {\n    if (this.results == null) {\n        this.counter.text(\"\");\n        this.map.highlight(null);\n    } else if (this.results.length == 0) {\n        this.counter.text(\"0 / 0\");\n        this.map.highlight(null);\n    } else {\n        this.counter.text(this.current + \" / \" + this.results.length);\n        var r = this.results[this.current - 1];\n        if (r.type=='reaction') {\n            this.map.zoom_to_reaction(r.reaction_id);\n            this.map.highlight_reaction(r.reaction_id);\n        } else if (r.type=='metabolite') {\n            this.map.zoom_to_node(r.node_id);\n            this.map.highlight_node(r.node_id);\n        } else if (r.type=='text_label') {\n            this.map.zoom_to_text_label(r.text_label_id);\n            this.map.highlight_text_label(r.text_label_id);\n        } else {\n            throw new Error('Bad search index data type: ' + r.type);\n        }\n    }\n}\nfunction next() {\n    if (this.results == null) return;\n    if (this.current==this.results.length)\n        this.current = 1;\n    else\n        this.current += 1;\n    this.update();\n}\nfunction previous() {\n    if (this.results == null) return;\n    if (this.current==1)\n        this.current = this.results.length;\n    else\n        this.current -= 1;\n    this.update();\n}\n","/** SearchIndex. Define an index for searching for reaction and metabolites in\n the map.\n\n The index is stored in SearchIndex.index, an object of id/record pairs.\n\n */\n\nvar utils = require('./utils');\n\n\nvar SearchIndex = utils.make_class();\nSearchIndex.prototype = {\n    init: init,\n    insert: insert,\n    remove: remove,\n    find: find\n};\nmodule.exports = SearchIndex;\n\n\n// definitions\nfunction init() {\n    this.index = {};\n}\n\n\nfunction insert(id, record, overwrite, check_record) {\n    /** Insert a record into the index.\n\n     id: A unique string id.\n\n     record: Records have the form:\n\n     { 'name': '',\n     'data': {} }\n\n     Search is performed on substrings of the name.\n\n     overwrite: (Default false) For faster performance, make overwrite true,\n     and records will be inserted without checking for an existing record.\n\n     check_record: (Default false) For faster performance, make check_record\n     false. If true, records will be checked to make sure they have name and\n     data attributes.\n\n     Returns undefined.\n\n     */\n    if (!overwrite && (id in this.index))\n        throw new Error(\"id is already in the index\");\n    if (check_record && !(('name' in record) && ('data' in record)))\n        throw new Error(\"malformed record\");\n    this.index[id] = record;\n}\n\n\nfunction remove(record_id) {\n    /** Remove the matching record.\n\n     Returns true is a record is found, or false if no match is found.\n\n     */\n    if (record_id in this.index) {\n        delete this.index[record_id];\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction find(substring) {\n    /** Find a record that matches the substring.\n\n     Returns an array of data from matching records.\n\n     */\n\n    var re = RegExp(substring, \"i\"), // ignore case\n        matches = [];\n    for (var id in this.index) {\n        var record = this.index[id];\n        if (re.exec(record.name))\n            matches.push(record.data);\n    }\n    return matches;\n\n}\n","/** Settings. A class to manage settings for a Map.\n\n Arguments\n ---------\n\n set_option: A function, fn(key), that returns the option value for the\n key.\n\n get_option: A function, fn(key, value), that sets the option for the key\n and value.\n\n conditional_options: The options to that are conditionally accepted when\n changed. Changes can be abandoned by calling abandon_changes(), or accepted\n by calling accept_changes().\n\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\nvar bacon = require('baconjs');\n\n\nvar Settings = utils.make_class();\n// instance methods\nSettings.prototype = {\n    init: init,\n    set_conditional: set_conditional,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes\n};\nmodule.exports = Settings;\n\n\n// instance methods\nfunction init(set_option, get_option, conditional_options) {\n    this.set_option = set_option;\n    this.get_option = get_option;\n\n    // manage accepting/abandoning changes\n    this.status_bus = new bacon.Bus();\n\n    // force an update of ui components\n    this.force_update_bus = new bacon.Bus();\n\n    // modify bacon.observable\n    bacon.Observable.prototype.convert_to_conditional_stream = _convert_to_conditional_stream;\n    bacon.Observable.prototype.force_update_with_bus = _force_update_with_bus;\n\n    // create the options\n    this.busses = {};\n    this.streams = {};\n    for (var i = 0, l = conditional_options.length; i < l; i++) {\n        var name = conditional_options[i],\n            out = _create_conditional_setting(name, get_option(name), set_option,\n                                              this.status_bus, this.force_update_bus);\n        this.busses[name] = out.bus;\n        this.streams[name] = out.stream;\n    }\n}\n\nfunction _convert_to_conditional_stream(status_stream) {\n    /** Hold on to event when hold_property is true, and only keep them\n     if accept_property is true (when hold_property becomes false).\n\n     */\n\n    // true if hold is pressed\n    var is_not_hold_event = status_stream\n            .map(function(x) { return x=='hold'; })\n            .not()\n            .toProperty(true),\n        is_not_first_clear = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && (x=='accepted' || x=='rejected'));\n            }).not(),\n        is_not_first_hold = status_stream\n            .scan(false, function(c, x) {\n                // first clear only\n                return (c==false && x=='hold');\n            }).not(),\n        combined = bacon.combineAsArray(this, status_stream),\n        held = combined\n            .scan([], function(c, x) {\n                if (x[1]=='hold') {\n                    c.push(x[0]);\n                    return c;\n                } else if (x[1]=='accept') {\n                    return c;\n                } else if (x[1]=='reject') {\n                    return [];\n                } else if (x[1]=='rejected' || x[1]=='accepted') {\n                    return [x[0]];\n                } else {\n                    throw Error('bad status ' + x[1]);\n                }\n            })\n    // don't pass in events until the end of a hold\n            .filter(is_not_hold_event)\n    // ignore the event when clear is passed\n            .filter(is_not_first_clear)\n    // ignore the event when hold is passed\n            .filter(is_not_first_hold)\n            .flatMap(function(ar) {\n                return bacon.fromArray(ar);\n            }),\n        unheld = this.filter(is_not_hold_event);\n    return unheld.merge(held);\n}\n\nfunction _force_update_with_bus(bus) {\n    return bacon\n        .combineAsArray(this, bus.toProperty(false))\n        .map(function(t) {\n            return t[0];\n        });\n}\n\nfunction _create_conditional_setting(name, initial_value, set_option,\n                                     status_bus, force_update_bus) {\n    // set up the bus\n    var bus = new bacon.Bus();\n    // make the event stream\n    var stream = bus\n    // conditionally accept changes\n            .convert_to_conditional_stream(status_bus)\n    // force updates\n            .force_update_with_bus(force_update_bus);\n\n    // get the latest\n    stream.onValue(function(v) {\n        set_option(name, v);\n    });\n\n    // push the initial value\n    bus.push(initial_value);\n\n    return { bus: bus, stream: stream };\n}\n\nfunction set_conditional(name, value) {\n    /** Set the value of a conditional setting, one that will only be\n     accepted if this.accept_changes() is called.\n\n     Arguments\n     ---------\n\n     name: The option name\n\n     value: The new value\n\n     */\n\n    if (!(name in this.busses))\n        throw new Error('Invalid setting name');\n    this.busses[name].push(value);\n}\n\nfunction hold_changes() {\n    this.status_bus.push('hold');\n}\n\nfunction abandon_changes() {\n    this.status_bus.push('reject');\n    this.status_bus.push('rejected');\n    this.force_update_bus.push(true);\n}\n\nfunction accept_changes() {\n    this.status_bus.push('accept');\n    this.status_bus.push('accepted');\n}\n","/** SettingsMenu */\n\n'strict mode';\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\nvar ScaleEditor = require('./ScaleEditor');\n\n\nvar SettingsMenu = utils.make_class();\n// instance methods\nSettingsMenu.prototype = {\n    init: init,\n    is_visible: is_visible,\n    toggle: toggle,\n    hold_changes: hold_changes,\n    abandon_changes: abandon_changes,\n    accept_changes: accept_changes,\n    style_gui: style_gui,\n    view_gui: view_gui\n};\nmodule.exports = SettingsMenu;\n\n\n// instance methods\nfunction init(sel, settings, map, toggle_abs_and_apply_data) {\n    this.sel = sel;\n    this.settings = settings;\n    this.draw = false;\n\n    var unique_map_id = this.settings.get_option('unique_map_id');\n    this.unique_string = (unique_map_id === null ? '' : '.' + unique_map_id);\n\n    var background = sel.append('div')\n            .attr('class', 'settings-box-background')\n            .style('display', 'none'),\n        container = background.append('div')\n            .attr('class', 'settings-box-container')\n            .style('display', 'none');\n\n    // done button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button\")\n        .on('click', function() {\n            this.accept_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-ok\");\n    // quit button\n    container.append('button')\n        .attr(\"class\", \"btn btn-sm btn-default settings-button settings-button-close\")\n        .on('click', function() {\n            this.abandon_changes();\n        }.bind(this))\n        .append(\"span\").attr(\"class\",  \"glyphicon glyphicon-remove\");\n\n    var box = container.append('div')\n            .attr('class', 'settings-box');\n\n    // Tip\n    box.append('div')\n        .text('Tip: Hover over an option to see more details about it.')\n        .classed('settings-tip', true);\n    box.append('hr');\n\n    // view and build\n    box.append('div').text('View and build options')\n        .attr('class', 'settings-section-heading-large');\n    this.view_gui(box.append('div'));\n\n    // reactions\n    box.append('hr');\n    box.append('div')\n        .text('Reactions').attr('class', 'settings-section-heading-large');\n    var rse = new ScaleEditor(box.append('div'), 'reaction', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__reaction', function(changed) {\n        if (changed) {\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n    box.append('div')\n        .text('Reaction or Gene data').attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'reaction', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('reaction', on_off);\n            rse.update();\n            rse.update_no_data();\n        }\n    });\n\n    // metabolite data\n    box.append('hr');\n    box.append('div').text('Metabolites')\n        .attr('class', 'settings-section-heading-large');\n    var mse = new ScaleEditor(box.append('div'), 'metabolite', this.settings,\n                              map.get_data_statistics.bind(map));\n    map.callback_manager.set('calc_data_stats__metabolite', function(changed) {\n        if (changed) {\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n    box.append('div').text('Metabolite data')\n        .attr('class', 'settings-section-heading');\n    this.style_gui(box.append('div'), 'metabolite', function(on_off) {\n        if (toggle_abs_and_apply_data) {\n            toggle_abs_and_apply_data('metabolite', on_off);\n            mse.update();\n            mse.update_no_data();\n        }\n    });\n\n    this.callback_manager = new CallbackManager();\n\n    this.map = map;\n    this.selection = container;\n    this.background = background;\n}\nfunction is_visible() {\n    return this.selection.style('display') != 'none';\n}\nfunction toggle(on_off) {\n    if (on_off===undefined) on_off = !this.is_visible();\n\n    if (on_off) {\n        // hold changes until accepting/abandoning\n        this.hold_changes();\n        // show the menu\n        this.selection.style(\"display\", \"inline-block\");\n        this.background.style(\"display\", \"block\");\n        this.selection.select('input').node().focus();\n        // escape key\n        this.escape = this.map.key_manager\n            .add_escape_listener(function() {\n                this.abandon_changes();\n            }.bind(this), 'settings');\n        // enter key\n        this.enter = this.map.key_manager\n            .add_enter_listener(function() {\n                this.accept_changes();\n            }.bind(this), 'settings');\n        // run the show callback\n        this.callback_manager.run('show');\n    } else {\n        // draw on finish\n        if (this.draw) this.map.draw_everything();\n        // hide the menu\n        this.selection.style(\"display\", \"none\");\n        this.background.style(\"display\", \"none\");\n        if (this.escape) this.escape.clear();\n        if (this.enter) this.enter.clear();\n        this.escape = null;\n        this.enter = null;\n        // run the hide callback\n        this.callback_manager.run('hide');\n    }\n}\nfunction hold_changes() {\n    this.settings.hold_changes();\n}\nfunction abandon_changes() {\n    this.draw = false;\n    this.settings.abandon_changes();\n    this.toggle(false);\n}\nfunction accept_changes() {\n    this.sel.selectAll('input').each(function (s) {\n        this.blur();\n    });\n    this.draw = true;\n    this.settings.accept_changes();\n    this.toggle(false);\n}\n\nfunction style_gui(sel, type, abs_callback) {\n    /** A UI to edit style.\n\n     */\n\n    var t = sel.append('table').attr('class', 'settings-table'),\n        settings = this.settings;\n\n    // styles\n    t.append('tr').call(function(r) {\n        r.append('td').text('Options:')\n            .attr('class', 'options-label')\n            .attr('title', ('Options for ' + type + ' data.'));\n        var cell = r.append('td');\n\n        var styles = [['Absolute value', 'abs',\n                       ('If checked, use the absolute value when ' +\n                        'calculating colors and sizes of ' + type + 's on the map')],\n                      ['Size', 'size',\n                       ('If checked, then size the ' +\n                        (type == 'metabolite' ? 'radius of metabolite circles ' : 'thickness of reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Color', 'color',\n                       ('If checked, then color the ' +\n                        (type == 'metabolite' ? 'metabolite circles ' : 'reaction lines ') +\n                        'according to the value of the ' + type + ' data')],\n                      ['Text (Show data in label)', 'text',\n                       ('If checked, then show data values in the ' + type + ' ' +\n                        'labels')]],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var streams = [],\n            get_styles = function() {\n                var styles = [];\n                cell.selectAll('input')\n                    .each(function(d) { if (this.checked) styles.push(d[1]); });\n                return styles;\n            };\n        s.append('input').attr('type', 'checkbox')\n            .on('change', function(d) {\n                settings.set_conditional(type + '_styles', get_styles());\n                if (d[1] == 'abs')\n                    abs_callback(this.checked);\n            }).each(function(d) {\n                // subscribe to changes in the model\n                settings.streams[type + '_styles'].onValue(function(ar) {\n                    // check the box if the style is present\n                    this.checked = (ar.indexOf(d[1]) != -1);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; })\n            .attr('title', function(d) { return d[2]; });\n    });\n\n    // compare_style\n    t.append('tr').call(function(r) {\n        r.append('td')\n            .text('Comparison:')\n            .attr('class', 'options-label')\n            .attr('title', ('The function that will be used to compare ' +\n                            'datasets, when paired data is loaded'));\n        var cell = r.append('td')\n                .attr('title', ('The function that will be used to compare ' +\n                                'datasets, when paired data is loaded'));;\n\n        var styles = [['Fold Change', 'fold'],\n                      ['Log2(Fold Change)', 'log2_fold'],\n                      ['Difference', 'diff']],\n            style_cells = cell.selectAll('.option-group')\n                .data(styles),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the radio\n        s.append('input').attr('type', 'radio')\n            .attr('name', type + '_compare_style' + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(type + '_compare_style', this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[type + '_compare_style'].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span')\n            .text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    // gene-specific settings\n    if (type=='reaction') {\n        var t = sel.append('table').attr('class', 'settings-table')\n                .attr('title', ('The function that will be used to evaluate ' +\n                                'AND connections in gene reaction rules (AND ' +\n                                'connections generally connect components of ' +\n                                'an enzyme complex)'));\n\n        // and_method_in_gene_reaction_rule\n        t.append('tr').call(function(r) {\n            r.append('td')\n                .text('Method for evaluating AND:')\n                .attr('class', 'options-label-wide');\n            var cell = r.append('td');\n\n            var styles = [['Mean', 'mean'], ['Min', 'min']],\n                style_cells = cell.selectAll('.option-group')\n                    .data(styles),\n                s = style_cells.enter()\n                    .append('label')\n                    .attr('class', 'option-group');\n\n            // make the radio\n            var name = 'and_method_in_gene_reaction_rule';\n            s.append('input').attr('type', 'radio')\n                .attr('name', name + this.unique_string)\n                .attr('value', function(d) { return d[1]; })\n                .on('change', function() {\n                    if (this.checked)\n                        settings.set_conditional(name, this.value);\n                })\n                .each(function() {\n                    // subscribe to changes in the model\n                    settings.streams[name].onValue(function(value) {\n                        // check the box for the new value\n                        this.checked = (this.value == value);\n                    }.bind(this));\n                });\n            s.append('span')\n                .text(function(d) { return d[0]; });\n        }.bind(this));\n\n    }\n}\n\nfunction view_gui(s, option_name, string, options) {\n\n    // columns\n    var settings = this.settings;\n\n    var t = s.append('table').attr('class', 'settings-table');\n    t.append('tr').call(function(r) {\n        // identifiers\n        r.attr('title', ('The identifiers that are show in the reaction, ' +\n                         'gene, and metabolite labels on the map.'));\n        r.append('td').text('Identifiers:')\n            .attr('class', 'options-label');\n        var cell = r.append('td');\n\n        var options = [['ID\\'s', 'bigg_id'], ['Descriptive names', 'name']],\n            style_cells = cell.selectAll('.option-group')\n                .data(options),\n            s = style_cells.enter()\n                .append('label')\n                .attr('class', 'option-group');\n\n        // make the checkbox\n        var name = 'identifiers_on_map';\n        s.append('input').attr('type', 'radio')\n            .attr('name', name + this.unique_string)\n            .attr('value', function(d) { return d[1]; })\n            .on('change', function() {\n                if (this.checked)\n                    settings.set_conditional(name, this.value);\n            })\n            .each(function() {\n                // subscribe to changes in the model\n                settings.streams[name].onValue(function(value) {\n                    // check the box for the new value\n                    this.checked = (this.value == value);\n                }.bind(this));\n            });\n        s.append('span').text(function(d) { return d[0]; });\n\n    }.bind(this));\n\n    var boolean_options = [\n        ['scroll_behavior', 'Scroll to zoom (instead of scroll to pan)',\n         ('If checked, then the scroll wheel and trackpad will control zoom ' +\n          'rather than pan.'), {'zoom': true, 'pan': false}],\n        ['use_3d_transform', 'Responsive pan and zoom (best for latest Chrome, Firefox, and IE)',\n         ('Depending on your browser, this option may help or hurt ' +\n          'performance when panning and zooming.')],\n        ['hide_secondary_metabolites', 'Hide secondary metabolites',\n         ('If checked, then only the primary metabolites ' +\n          'will be displayed.')],\n        ['show_gene_reaction_rules', 'Show gene reaction rules',\n         ('If checked, then gene reaction rules will be displayed ' +\n          'below each reaction label. (Gene reaction rules are always ' +\n          'shown when gene data is loaded.)')],\n        ['hide_all_labels', 'Hide reaction, gene, and metabolite labels',\n         ('If checked, hide all reaction, gene, and metabolite labels')],\n        ['allow_building_duplicate_reactions', 'Allow duplicate reactions',\n         ('If checked, then allow duplicate reactions during model building.')],\n        ['highlight_missing', 'Highlight reactions not in model',\n         ('If checked, then highlight in red all the ' +\n          'reactions on the map that are not present in ' +\n          'the loaded model.')],\n    ];\n\n    var opts = s.append('div').attr('class', 'settings-container')\n            .selectAll('.option-group')\n            .data(boolean_options);\n    // enter\n    var e = opts.enter()\n            .append('label')\n            .attr('class', 'option-group full-line');\n    e.append('input').attr('type', 'checkbox');\n    e.append('span');\n    // update\n    opts.attr('title', function(d) { return d[2]; });\n    opts.select('input')\n        .on('change', function(d) {\n            if (d.length >= 4) { // not a boolean setting\n                for (var key in d[3]) {\n                    if (d[3][key] == this.checked) {\n                        settings.set_conditional(d[0], key);\n                        break;\n                    }\n                }\n            } else { // boolean setting\n                settings.set_conditional(d[0], this.checked);\n            }\n        })\n        .each(function(d) {\n            settings.streams[d[0]].onValue(function(value) {\n                if (d.length >= 4) { // not a boolean setting\n                    this.checked = d[3][value];\n                } else { // boolean setting\n                    this.checked = value;\n                }\n            }.bind(this));\n        });\n    opts.select('span')\n        .text(function(d) { return d[1]; });\n    // exit\n    opts.exit().remove();\n\n    // message about text performance\n    s.append('div')\n        .style('margin-top', '16px')\n        .classed('settings-tip', true)\n        .text('Tip: To increase map performance, turn off text boxes (i.e. labels and gene reaction rules).');\n}\n","/** TextEditInput */\n\nvar utils = require('./utils');\nvar PlacedDiv = require('./PlacedDiv');\nvar build = require('./build');\n\n\nvar TextEditInput = utils.make_class();\n// instance methods\nTextEditInput.prototype = {\n    init: init,\n    setup_map_callbacks: setup_map_callbacks,\n    setup_zoom_callbacks: setup_zoom_callbacks,\n    is_visible: is_visible,\n    show: show,\n    hide: hide,\n    _accept_changes: _accept_changes,\n    _add_and_edit: _add_and_edit\n};\nmodule.exports = TextEditInput;\n\n\n// definitions\nfunction init(selection, map, zoom_container) {\n    var div = selection.append('div')\n            .attr('id', 'text-edit-input');\n    this.placed_div = PlacedDiv(div, map);\n    this.placed_div.hide();\n    this.input = div.append('input');\n\n    this.map = map;\n    this.setup_map_callbacks(map);\n    this.zoom_container = zoom_container;\n    this.setup_zoom_callbacks(zoom_container);\n}\n\nfunction setup_map_callbacks(map) {\n    // input\n    map.callback_manager.set('edit_text_label.text_edit_input', function(target, coords) {\n        this.show(target, coords);\n    }.bind(this));\n\n    // new text_label\n    map.callback_manager.set('new_text_label.text_edit_input', function(coords) {\n        if (this.active_target !== null)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n        this._add_and_edit(coords);\n    }.bind(this));\n\n    map.callback_manager.set('hide_text_label_editor.text_edit_input', function() {\n        this.hide();\n    }.bind(this));\n}\n\nfunction setup_zoom_callbacks(zoom_container) {\n    zoom_container.callback_manager.set('zoom.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n    zoom_container.callback_manager.set('go_to.text_edit_input', function() {\n        if (this.active_target)\n            this._accept_changes(this.active_target.target);\n        this.hide();\n    }.bind(this));\n}\n\nfunction is_visible() {\n    return this.placed_div.is_visible();\n}\n\nfunction show(target, coords) {\n    // save any existing edit\n    if (this.active_target) {\n        this._accept_changes(this.active_target.target);\n    }\n\n    // set the current target\n    this.active_target = { target: target,\n                           coords: coords };\n\n    // set the new value\n    target.each(function(d) {\n        this.input.node().value = d.text;\n    }.bind(this));\n\n    // place the input\n    this.placed_div.place(coords);\n    this.input.node().focus();\n\n    // escape key\n    this.escape = this.map.key_manager\n        .add_escape_listener(function() {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this));\n    // enter key\n    this.enter = this.map.key_manager\n        .add_enter_listener(function(target) {\n            this._accept_changes(target);\n            this.hide();\n        }.bind(this, target));\n}\n\nfunction hide() {\n    // hide the input\n    this.placed_div.hide();\n\n    // clear the value\n    this.input.attr('value', '');\n    this.active_target = null;\n\n    // clear escape\n    if (this.escape)\n        this.escape.clear();\n    this.escape = null;\n    // clear enter\n    if (this.enter)\n        this.enter.clear();\n    this.enter = null;\n    // turn off click listener\n    // this.map.sel.on('click.', null);\n}\n\nfunction _accept_changes(target) {\n    if (this.input.node().value == '') {\n        // delete the label\n        target.each(function(d) {\n            var selected = {};\n            selected[d.text_label_id] = this.map.text_labels[d.text_label_id];\n            this.map.delete_selectable({}, selected, true);\n        }.bind(this));\n    } else {\n        // set the text\n        var text_label_ids = [];\n        target.each(function(d) {\n            this.map.edit_text_label(d.text_label_id, this.input.node().value, true);\n            text_label_ids.push(d.text_label_id);\n        }.bind(this));\n    }\n}\n\nfunction _add_and_edit(coords) {\n    // make an empty label\n    var text_label_id = this.map.new_text_label(coords, '');\n    // apply the cursor to the new label\n    var sel = this.map.sel.select('#text-labels').selectAll('.text-label')\n            .filter(function(d) { return d.text_label_id == text_label_id; });\n    sel.select('text').classed('edit-text-cursor', true);\n    this.show(sel, coords);\n}\n","/** UndoStack. A constructor that can be used to store undo info. */\n\nvar utils = require('./utils');\n\n\nvar UndoStack = utils.make_class();\nUndoStack.prototype = {\n    init: init,\n    push: push,\n    undo: undo,\n    redo: redo\n};\nmodule.exports = UndoStack;\n\n\n// definitions\nfunction init() {\n    var stack_size = 40;\n    this.stack = Array(stack_size);\n    this.current = -1;\n    this.oldest = -1;\n    this.newest = -1;\n    this.end_of_stack = true;\n    this.top_of_stack = true;\n}\n\n\nfunction _incr(a, l) {\n    return a + 1 > l - 1 ? 0 : a + 1;\n}\n\n\nfunction _decr(a, l) {\n    return a - 1 < 0 ? l - 1 : a -  1;\n}\n\n\nfunction push(undo_fn, redo_fn) {\n    this.current = _incr(this.current, this.stack.length);\n    // change the oldest\n    if (this.end_of_stack)\n        this.oldest = this.current;\n    else if (this.oldest == this.current)\n        this.oldest = _incr(this.oldest, this.stack.length);\n    this.stack[this.current] = { undo: undo_fn, redo: redo_fn };\n    this.newest = this.current;\n\n    // top of the stack\n    this.top_of_stack = true;\n    this.end_of_stack = false;\n}\n\n\nfunction undo() {\n    // check that we haven't reached the end\n    if (this.end_of_stack) return console.warn('End of stack.');\n    // run the lastest stack function\n    this.stack[this.current].undo();\n    if (this.current == this.oldest) {\n        // if the next index is less than the oldest, then the stack is dead\n        this.end_of_stack = true;\n    } else {\n        // reference the next fn\n        this.current = _decr(this.current, this.stack.length);\n    }\n\n    // not at the top of the stack\n    this.top_of_stack = false;\n}\n\n\nfunction redo() {\n    // check that we haven't reached the end\n    if (this.top_of_stack) return console.warn('Top of stack.');\n\n    if (!this.end_of_stack)\n        this.current = _incr(this.current, this.stack.length);\n    this.stack[this.current].redo();\n\n    // if at top of stack\n    if (this.current == this.newest)\n        this.top_of_stack = true;\n\n    // not at the end of the stack\n    this.end_of_stack = false;\n}\n","/** ZoomContainer\n *\n *\n */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar CallbackManager = require('./CallbackManager');\n\nvar _ = require('underscore');\n\n\nvar ZoomContainer = utils.make_class();\nZoomContainer.prototype = {\n    init: init,\n    set_scroll_behavior: set_scroll_behavior,\n    set_use_3d_transform: set_use_3d_transform,\n    _update_scroll: _update_scroll,\n    toggle_pan_drag: toggle_pan_drag,\n    go_to: go_to,\n    _go_to_3d: _go_to_3d,\n    _clear_3d: _clear_3d,\n    _go_to_svg: _go_to_svg,\n    zoom_by: zoom_by,\n    zoom_in: zoom_in,\n    zoom_out: zoom_out,\n    get_size: get_size,\n    translate_off_screen: translate_off_screen\n};\nmodule.exports = ZoomContainer;\n\n\n// definitions\nfunction init(selection, scroll_behavior, use_3d_transform, fill_screen) {\n    /** Make a container that will manage panning and zooming. Creates a new\n     SVG element, with a parent div for CSS3 3D transforms.\n\n     Arguments\n     ---------\n\n     selection: A d3 selection of a HTML node to put the zoom container\n     in. Should have a defined width and height.\n\n     scroll_behavior: Either 'zoom' or 'pan'.\n\n     use_3d_transform: If true, then use CSS3 3D transform to speed up pan\n     and zoom.\n\n     fill_screen: If true, then apply styles to body and selection that fill\n     the screen. The styled classes are \"fill-screen-body\" and\n     \"fill-screen-div\".\n\n     */\n\n    // set the selection class\n    selection.classed('escher-container', true);\n\n    // fill screen classes\n    if (fill_screen) {\n        d3.select(\"body\").classed('fill-screen-body', true);\n        selection.classed('fill-screen-div', true);\n    }\n\n    // make the svg\n    var zoom_container = selection.append('div')\n            .attr('class', 'escher-zoom-container');\n\n    var css3_transform_container = zoom_container.append('div')\n            .attr('class', 'escher-3d-transform-container');\n\n    var svg = css3_transform_container.append('svg')\n            .attr(\"class\", \"escher-svg\")\n            .attr('xmlns', \"http://www.w3.org/2000/svg\");\n\n    // set up the zoom container\n    svg.select(\".zoom-g\").remove();\n    var zoomed_sel = svg.append(\"g\")\n            .attr(\"class\", \"zoom-g\");\n\n    // attributes\n    this.selection = selection;\n    this.zoom_container = zoom_container;\n    this.css3_transform_container = css3_transform_container;\n    this.svg = svg;\n    this.zoomed_sel = zoomed_sel;\n    this.window_translate = {x: 0, y: 0};\n    this.window_scale = 1.0;\n\n    this._scroll_behavior = scroll_behavior;\n    this._use_3d_transform = use_3d_transform;\n    this._pan_drag_on = true;\n    this._zoom_behavior = null;\n    this._zoom_timeout = null;\n    this._svg_scale = this.window_scale;\n    this._svg_translate = this.window_translate;\n    // this._last_svg_ms = null;\n\n    // set up the callbacks\n    this.callback_manager = new CallbackManager();\n\n    // update the scroll behavior\n    this._update_scroll();\n}\n\nfunction set_scroll_behavior(scroll_behavior) {\n    /** Set up pan or zoom on scroll.\n     *\n     * Arguments\n     * ---------\n     *\n     * scroll_behavior: 'none', 'pan' or 'zoom'.\n     *\n     */\n\n    this._scroll_behavior = scroll_behavior;\n    this._update_scroll();\n}\n\nfunction set_use_3d_transform(use_3d_transform) {\n    /** Set the option use_3d_transform */\n    this._use_3d_transform = use_3d_transform;\n}\n\nfunction toggle_pan_drag(on_off) {\n    /** Toggle the zoom drag and the cursor UI for it. */\n\n    if (_.isUndefined(on_off)) {\n        this._pan_drag_on = !this._pan_drag_on;\n    } else {\n        this._pan_drag_on = on_off;\n    }\n\n    if (this._pan_drag_on) {\n        // turn on the hand\n        this.zoomed_sel\n            .classed('cursor-grab', true).classed('cursor-grabbing', false);\n        this.zoomed_sel\n            .on('mousedown.cursor', function(sel) {\n                sel.classed('cursor-grab', false).classed('cursor-grabbing', true);\n            }.bind(null, this.zoomed_sel))\n            .on('mouseup.cursor', function(sel) {\n                sel.classed('cursor-grab', true).classed('cursor-grabbing', false);\n            }.bind(null, this.zoomed_sel));\n    } else {\n        // turn off the hand\n        this.zoomed_sel.style('cursor', null)\n            .classed('cursor-grab', false)\n            .classed('cursor-grabbing', false);\n        this.zoomed_sel.on('mousedown.cursor', null);\n        this.zoomed_sel.on('mouseup.cursor', null);\n    }\n\n    // update the behaviors\n    this._update_scroll();\n}\n\nfunction _update_scroll() {\n    /** Update the pan and zoom behaviors. The behaviors are applied to the\n     * css3_transform_container node.\n     *\n     */\n\n    if (!_.contains(['zoom', 'pan', 'none'], this._scroll_behavior)) {\n        throw Error('Bad value for scroll_behavior: ' + this._scroll_behavior);\n    }\n\n    // clear all behaviors\n    this.zoom_container.on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n        .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n        .on(\"wheel.zoom\", null) // disables newer versions of Firefox\n        .on('dblclick.zoom', null)\n        .on('mousewheel.escher', null) // pan scroll behaviors\n        .on('DOMMouseScroll.escher', null)\n        .on('wheel.escher', null)\n        .on(\"mousedown.zoom\", null) // drag behaviors\n        .on(\"touchstart.zoom\", null)\n        .on(\"touchmove.zoom\", null)\n        .on(\"touchend.zoom\", null);\n\n    // This handles dragging to pan, and touch events (in any scroll mode). It\n    // also handles scrolling to zoom (only 'zoom' mode). It also raises an\n    // exception in node, so catch that during testing. This may be a bug with\n    // d3 related to d3 using the global this.document. TODO look into this.\n    try {\n        this._zoom_behavior = d3.behavior.zoom()\n            .on(\"zoom\", function() {\n                this.go_to(d3.event.scale, {x: d3.event.translate[0], y: d3.event.translate[1]});\n            }.bind(this));\n    } catch (err) {\n        console.log('Not in a browser, so d3.behavior.zoom does not work.');\n        this._zoom_behavior = null;\n        return;\n    }\n\n    // set current location\n    this._zoom_behavior.scale(this.window_scale);\n    this._zoom_behavior.translate([this.window_translate.x,\n                                   this.window_translate.y]);\n\n    // set it up\n    this.zoom_container.call(this._zoom_behavior);\n\n    // always turn off double-clicking to zoom\n    this.zoom_container.on('dblclick.zoom', null);\n\n    // if panning is off, then turn off these listeners\n    if (!this._pan_drag_on) {\n        this.zoom_container.on(\"mousedown.zoom\", null)\n            .on(\"touchstart.zoom\", null)\n            .on(\"touchmove.zoom\", null)\n            .on(\"touchend.zoom\", null);\n    }\n\n    // if scroll to zoom is off, then turn off these listeners\n    if (this._scroll_behavior !== 'zoom') {\n        this.zoom_container\n            .on(\"mousewheel.zoom\", null) // zoom scroll behaviors\n            .on(\"DOMMouseScroll.zoom\", null) // disables older versions of Firefox\n            .on(\"wheel.zoom\", null); // disables newer versions of Firefox\n    }\n\n    // add listeners for scrolling to pan\n    if (this._scroll_behavior === 'pan') {\n        // Add the wheel listener\n        var wheel_fn = function() {\n            var ev = d3.event,\n                sensitivity = 0.5;\n            // stop scroll in parent elements\n            ev.stopPropagation();\n            ev.preventDefault();\n            ev.returnValue = false;\n            // change the location\n            var get_directional_disp = function(wheel_delta, delta) {\n                var the_delt = _.isUndefined(wheel_delta) ? delta : -wheel_delta / 1.5;\n                return the_delt * sensitivity;\n            };\n            var new_translate = {\n                x: this.window_translate.x - get_directional_disp(ev.wheelDeltaX, ev.deltaX),\n                y: this.window_translate.y - get_directional_disp(ev.wheelDeltaY, ev.deltaY)\n            };\n            this.go_to(this.window_scale, new_translate, false);\n        }.bind(this);\n\n        // apply it\n        this.zoom_container.on('mousewheel.escher', wheel_fn);\n        this.zoom_container.on('DOMMouseScroll.escher', wheel_fn);\n        this.zoom_container.on('wheel.escher', wheel_fn);\n    }\n}\n\n// functions to scale and translate\nfunction go_to(scale, translate) {\n    /** Zoom the container to a specified location.\n     *\n     * Arguments\n     * ---------\n     *\n     * scale: The scale, between 0 and 1.\n     *\n     * translate: The location, of the form {x: 2.0, y: 3.0}.\n     *\n     */\n\n    utils.check_undefined(arguments, ['scale', 'translate']);\n\n    var use_3d_transform = this._use_3d_transform;\n\n    // check inputs\n    if (!scale) throw new Error('Bad scale value');\n    if (!translate || !('x' in translate) || !('y' in translate) ||\n        isNaN(translate.x) || isNaN(translate.y))\n        return console.error('Bad translate value');\n\n    // save inputs\n    this.window_scale = scale;\n    this.window_translate = translate;\n\n    // save to zoom behavior\n    if (!_.isNull(this._zoom_behavior)) {\n        this._zoom_behavior.scale(scale);\n        var translate_array = [translate.x, translate.y];\n        this._zoom_behavior.translate(translate_array);\n    }\n\n    if (use_3d_transform) { // 3d tranform\n        // cancel all timeouts\n        if (!_.isNull(this._zoom_timeout))\n            clearTimeout(this._zoom_timeout);\n\n        // set the 3d transform\n        this._go_to_3d(scale, translate,\n                       this._svg_scale, this._svg_translate);\n\n        // if another go_to does not happen within the delay time, then\n        // redraw the svg\n        this._zoom_timeout = _.delay(function() {\n            // redraw the svg\n            this._go_to_svg(scale, translate);\n        }.bind(this), 100); // between 100 and 600 seems to be usable\n\n    } else { // no 3d transform\n        this._go_to_svg(scale, translate);\n    }\n\n    this.callback_manager.run('go_to');\n}\n\nfunction _go_to_3d(scale, translate, svg_scale, svg_translate) {\n    /** Zoom & pan the CSS 3D transform container */\n    var n_scale = scale / svg_scale,\n        n_translate = utils.c_minus_c(\n            translate,\n            utils.c_times_scalar(svg_translate, n_scale)\n        ),\n        tranform = ('translate(' + n_translate.x + 'px,' + n_translate.y + 'px) ' +\n                    'scale(' + n_scale + ')');\n    this.css3_transform_container.style('transform', tranform);\n    this.css3_transform_container.style('-webkit-transform', tranform);\n    this.css3_transform_container.style('transform-origin', '0 0');\n    this.css3_transform_container.style('-webkit-transform-origin', '0 0');\n}\n\nfunction _clear_3d() {\n    this.css3_transform_container.style('transform', null);\n    this.css3_transform_container.style('-webkit-transform', null);\n    this.css3_transform_container.style('transform-origin', null);\n    this.css3_transform_container.style('-webkit-transform-origin', null);\n}\n\nfunction _go_to_svg(scale, translate) {\n    /** Zoom & pan the svg element.\n     *\n     * Also runs the svg_start and svg_finish callbacks.\n     *\n     */\n\n    this.callback_manager.run('svg_start');\n\n    // defer to update callbacks\n    _.defer(function() {\n\n        // start time\n        // var start = new Date().getTime();\n\n        // reset the 3d transform\n        this._clear_3d();\n\n        // redraw the svg\n        this.zoomed_sel\n            .attr('transform',\n                  'translate(' + translate.x + ',' + translate.y + ') ' +\n                  'scale(' + scale + ')');\n        // save svg location\n        this._svg_scale = this.window_scale;\n        this._svg_translate = this.window_translate;\n\n        _.defer(function() {\n            // defer for callback after draw\n            this.callback_manager.run('svg_finish');\n\n            // wait a few ms to get a reliable end time\n            // _.delay(function() {\n            //     // end time\n            //     var t = new Date().getTime() - start;\n            //     this._last_svg_ms = t;\n            // }.bind(this), 20);\n        }.bind(this));\n    }.bind(this));\n}\n\nfunction zoom_by(amount) {\n    /** Zoom by a specified multiplier.\n     *\n     * Arguments\n     * ---------\n     *\n     * amount: A multiplier for the zoom. Greater than 1 zooms in and less\n     * than 1 zooms out.\n     *\n     */\n    var size = this.get_size(),\n        shift = { x: size.width/2 - ((size.width/2 - this.window_translate.x) * amount +\n                                     this.window_translate.x),\n                  y: size.height/2 - ((size.height/2 - this.window_translate.y) * amount +\n                                      this.window_translate.y) };\n    this.go_to(this.window_scale * amount,\n               utils.c_plus_c(this.window_translate, shift));\n}\n\nfunction zoom_in() {\n    /** Zoom in by the default amount with the default options. */\n    this.zoom_by(1.5);\n}\n\nfunction zoom_out() {\n    /** Zoom out by the default amount with the default options. */\n    this.zoom_by(0.667);\n}\n\nfunction get_size() {\n    /** Return the size of the zoom container as coordinates.\n     *\n     * e.g. {x: 2, y: 3}\n     *\n     */\n    return { width: parseInt(this.selection.style('width'), 10),\n             height: parseInt(this.selection.style('height'), 10) };\n}\n\nfunction translate_off_screen(coords) {\n    /** Shift window if new reaction will draw off the screen */\n\n    // TODO BUG not accounting for scale correctly\n\n    var margin = 120, // pixels\n        size = this.get_size(),\n        current = {'x': {'min': - this.window_translate.x / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.x / this.window_scale +\n                         (size.width-margin) / this.window_scale },\n                   'y': {'min': - this.window_translate.y / this.window_scale +\n                         margin / this.window_scale,\n                         'max': - this.window_translate.y / this.window_scale +\n                         (size.height-margin) / this.window_scale } };\n    if (coords.x < current.x.min) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.x > current.x.max) {\n        this.window_translate.x = this.window_translate.x -\n            (coords.x - current.x.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n    if (coords.y < current.y.min) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.min) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    } else if (coords.y > current.y.max) {\n        this.window_translate.y = this.window_translate.y -\n            (coords.y - current.y.max) * this.window_scale;\n        this.go_to(this.window_scale, this.window_translate);\n    }\n}\n","/** build */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    new_reaction: new_reaction,\n    rotate_nodes: rotate_nodes,\n    move_node_and_dependents: move_node_and_dependents,\n    new_text_label: new_text_label,\n    bezier_id_for_segment_id: bezier_id_for_segment_id,\n    bezier_ids_for_reaction_ids: bezier_ids_for_reaction_ids,\n    new_beziers_for_segments: new_beziers_for_segments,\n    new_beziers_for_reactions: new_beziers_for_reactions\n};\n\n\n// definitions\nfunction new_reaction(bigg_id, cobra_reaction, cobra_metabolites,\n                      selected_node_id, selected_node,\n                      largest_ids, cofactors, angle) {\n    /** New reaction.\n\n     angle: clockwise from 'right', in degrees\n\n     */\n\n    // rotate the new reaction around the selected metabolite\n    // convert to radians\n    angle = Math.PI / 180 * angle;\n\n    // generate a new integer id\n    var new_reaction_id = String(++largest_ids.reactions);\n\n    // calculate coordinates of reaction\n    var selected_node_coords = { x: selected_node.x,\n                                 y: selected_node.y };\n\n    // rotate main axis around angle with distance\n    var reaction_length = 300,\n        main_axis = [ selected_node_coords,\n                      utils.c_plus_c(selected_node_coords,\n                                     {'x': reaction_length, 'y': 0}) ],\n        center = { 'x': (main_axis[0].x + main_axis[1].x)/2,\n                   'y': (main_axis[0].y + main_axis[1].y)/2 };\n\n    // relative label location\n    var label_d;\n    if (Math.abs(angle) < Math.PI/4 ||\n        Math.abs(angle - Math.PI) < Math.PI/4 ) {\n            label_d = { x: -50, y: -40 };\n        } else {\n            label_d = { x: 30, y: 10 };\n        }\n\n    // relative anchor node distance\n    var anchor_distance = 20;\n\n    // new reaction structure\n    var new_reaction = utils.clone(cobra_reaction);\n    utils.extend(new_reaction,\n                 { label_x: center.x + label_d.x,\n                   label_y: center.y + label_d.y,\n                   segments: {} });\n\n    // set primary metabolites and count reactants/products\n\n    // look for the selected metabolite, and record the indices\n    var reactant_ranks = [], product_ranks = [],\n        reactant_count = 0, product_count = 0,\n        reaction_is_reversed = false;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        // make the metabolites into objects\n        var metabolite = cobra_metabolites[met_bigg_id],\n            coefficient = new_reaction.metabolites[met_bigg_id],\n            formula = metabolite.formula,\n            new_metabolite = { coefficient: coefficient,\n                               bigg_id: met_bigg_id,\n                               name: metabolite.name };\n        if (coefficient < 0) {\n            new_metabolite.index = reactant_count;\n            // score the metabolites. Infinity == selected, >= 1 == carbon containing\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                reactant_ranks.push([new_metabolite.index, Infinity]);\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                reactant_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            reactant_count++;\n        } else {\n            new_metabolite.index = product_count;\n            var carbons = /C([0-9]+)/.exec(formula);\n            if (selected_node.bigg_id==new_metabolite.bigg_id) {\n                product_ranks.push([new_metabolite.index, Infinity]);\n                reaction_is_reversed = true;\n            } else if (carbons && cofactors.indexOf(utils.decompartmentalize(new_metabolite.bigg_id)[0])==-1) {\n                product_ranks.push([new_metabolite.index, parseInt(carbons[1])]);\n            }\n            product_count++;\n        }\n        new_reaction.metabolites[met_bigg_id] = new_metabolite;\n    }\n\n    // get the rank with the highest score\n    var max_rank = function(old, current) { return current[1] > old[1] ? current : old; },\n        primary_reactant_index = reactant_ranks.reduce(max_rank, [0,0])[0],\n        primary_product_index = product_ranks.reduce(max_rank, [0,0])[0];\n\n    // set primary metabolites, and keep track of the total counts\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id];\n        if (metabolite.coefficient < 0) {\n            if (metabolite.index==primary_reactant_index) metabolite.is_primary = true;\n            metabolite.count = reactant_count + 1;\n        } else {\n            if (metabolite.index==primary_product_index) metabolite.is_primary = true;\n            metabolite.count = product_count + 1;\n        }\n    }\n\n    // generate anchor nodes\n    var new_anchors = {},\n        anchors = [ { node_type: 'anchor_reactants',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? 1 : -1), y: 0 } },\n                    { node_type: 'center',\n                      dis: { x: 0, y: 0 } },\n                    { node_type: 'anchor_products',\n                      dis: { x: anchor_distance * (reaction_is_reversed ? -1 : 1), y: 0 } } ],\n        anchor_ids = {};\n    anchors.map(function(n) {\n        var new_id = String(++largest_ids.nodes),\n            general_node_type = (n.node_type=='center' ? 'midmarker' : 'multimarker');\n        new_anchors[new_id] = { node_type: general_node_type,\n                                x: center.x + n.dis.x,\n                                y: center.y + n.dis.y,\n                                connected_segments: [],\n                                name: null,\n                                bigg_id: null,\n                                label_x: null,\n                                label_y: null,\n                                node_is_primary: null };\n        anchor_ids[n.node_type] = new_id;\n    });\n\n    // add the segments, outside to inside\n    var new_anchor_groups = [ [ anchor_ids['anchor_reactants'], anchor_ids['center'] ],\n                              [ anchor_ids['anchor_products'],  anchor_ids['center'] ] ];\n    new_anchor_groups.map(function(l) {\n        var from_id = l[0], to_id = l[1],\n            new_segment_id = String(++largest_ids.segments);\n        new_reaction.segments[new_segment_id] =  { b1: null,\n                                                   b2: null,\n                                                   from_node_id: from_id,\n                                                   to_node_id: to_id,\n                                                   from_node_coefficient: null,\n                                                   to_node_coefficient: null,\n                                                   reversibility: new_reaction.reversibility,\n                                                   data: new_reaction.data,\n                                                   reverse_flux: new_reaction.reverse_flux };\n        new_anchors[from_id].connected_segments.push({ segment_id: new_segment_id,\n                                                       reaction_id: new_reaction_id });\n        new_anchors[to_id].connected_segments.push({ segment_id: new_segment_id,\n                                                     reaction_id: new_reaction_id });\n    });\n\n    // Add the metabolites, keeping track of total reactants and products.\n    var new_nodes = new_anchors;\n    for (var met_bigg_id in new_reaction.metabolites) {\n        var metabolite = new_reaction.metabolites[met_bigg_id],\n            primary_index, from_node_id;\n        if (metabolite.coefficient < 0) {\n            // metabolite.count = reactant_count + 1;\n            primary_index = primary_reactant_index;\n            from_node_id = anchor_ids['anchor_reactants'];\n        } else {\n            // metabolite.count = product_count + 1;\n            primary_index = primary_product_index;\n            from_node_id = anchor_ids['anchor_products'];\n        }\n\n        // calculate coordinates of metabolite components\n        var met_loc = calculate_new_metabolite_coordinates(metabolite,\n                                                           primary_index,\n                                                           main_axis,\n                                                           center,\n                                                           reaction_length,\n                                                           reaction_is_reversed);\n\n        // if this is the existing metabolite\n        if (selected_node.bigg_id==metabolite.bigg_id) {\n            var new_segment_id = String(++largest_ids.segments);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: selected_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // update the existing node\n            selected_node.connected_segments.push({ segment_id: new_segment_id,\n                                                    reaction_id: new_reaction_id });\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        } else {\n            // save new metabolite\n            var new_segment_id = String(++largest_ids.segments),\n                new_node_id = String(++largest_ids.nodes);\n            new_reaction.segments[new_segment_id] = { b1: met_loc.b1,\n                                                      b2: met_loc.b2,\n                                                      from_node_id: from_node_id,\n                                                      to_node_id: new_node_id,\n                                                      from_node_coefficient: null,\n                                                      to_node_coefficient: metabolite.coefficient,\n                                                      reversibility: new_reaction.reversibility,\n                                                      data: new_reaction.data,\n                                                      reverse_flux: new_reaction.reverse_flux };\n            // save new node\n            new_nodes[new_node_id] = { connected_segments: [{ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id }],\n                                       x: met_loc.circle.x,\n                                       y: met_loc.circle.y,\n                                       node_is_primary: Boolean(metabolite.is_primary),\n                                       label_x: met_loc.circle.x + label_d.x,\n                                       label_y: met_loc.circle.y + label_d.y,\n                                       name: metabolite.name,\n                                       bigg_id: metabolite.bigg_id,\n                                       node_type: 'metabolite' };\n            new_nodes[from_node_id].connected_segments.push({ segment_id: new_segment_id,\n                                                              reaction_id: new_reaction_id });\n        }\n    }\n\n    // now take out the extra reaction details\n    var metabolites_array = []\n    for (var bigg_id in new_reaction.metabolites) {\n        metabolites_array.push({'bigg_id': bigg_id,\n                                'coefficient': new_reaction.metabolites[bigg_id].coefficient});\n    }\n    new_reaction.metabolites = metabolites_array;\n\n    // new_reactions object\n    var new_reactions = {};\n    new_reactions[new_reaction_id] = new_reaction;\n\n    // new_beziers object\n    var new_beziers = new_beziers_for_reactions(new_reactions);\n\n    // add the selected node for rotation, and return it as a new (updated) node\n    new_nodes[selected_node_id] = selected_node;\n    rotate_nodes(new_nodes, new_reactions, new_beziers,\n                 angle, selected_node_coords);\n\n    return { new_reactions: new_reactions,\n             new_beziers: new_beziers,\n             new_nodes: new_nodes };\n}\n\nfunction rotate_nodes(selected_nodes, reactions, beziers, angle, center) {\n    /** Rotate the nodes around center.\n\n     selected_nodes: Nodes to rotate.\n     reactions: Only updates beziers for these reactions.\n     beziers: Also update the bezier points.\n     angle: Angle to rotate in radians.\n     center: Point to rotate around.\n\n     */\n\n    // functions\n    var rotate_around = function(coord) {\n        if (coord === null)\n            return null;\n        return utils.rotate_coords(coord, angle, center);\n    };\n\n    // recalculate: node\n    var updated_node_ids = [], updated_reaction_ids = [];\n    for (var node_id in selected_nodes) {\n        var node = selected_nodes[node_id],\n            // rotation distance\n            displacement = rotate_around({ x: node.x, y: node.y }),\n            // move the node\n            updated = move_node_and_labels(node, reactions,\n                                           displacement);\n        // move the bezier points\n        node.connected_segments.map(function(segment_obj) {\n            var reaction = reactions[segment_obj.reaction_id];\n            // If the reaction was not passed in the reactions argument, then ignore\n            if (reaction === undefined) return;\n\n            // rotate the beziers\n            var segment_id = segment_obj.segment_id,\n                segment = reaction.segments[segment_id];\n            if (segment.to_node_id==node_id && segment.b2) {\n                var displacement = rotate_around(segment.b2),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b2');\n                segment.b2 = utils.c_plus_c(segment.b2, displacement);\n                beziers[bez_id].x = segment.b2.x;\n                beziers[bez_id].y = segment.b2.y;\n            } else if (segment.from_node_id==node_id && segment.b1) {\n                var displacement = rotate_around(segment.b1),\n                    bez_id = bezier_id_for_segment_id(segment_id, 'b1');\n                segment.b1 = utils.c_plus_c(segment.b1, displacement);\n                beziers[bez_id].x = segment.b1.x;\n                beziers[bez_id].y = segment.b1.y;\n            }\n        });\n\n        updated_reaction_ids = utils.unique_concat([updated_reaction_ids,\n                                                    updated.reaction_ids]);\n        updated_node_ids.push(node_id);\n    }\n\n    return { node_ids: updated_node_ids,\n             reaction_ids: updated_reaction_ids };\n}\n\nfunction move_node_and_dependents(node, node_id, reactions, beziers, displacement) {\n    /** Move the node and its labels and beziers.\n\n     */\n    var updated = move_node_and_labels(node, reactions, displacement);\n\n    // move beziers\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // If the reaction was not passed in the reactions argument, then ignore\n        if (reaction === undefined) return;\n\n        // update beziers\n        var segment_id = segment_obj.segment_id,\n            segment = reaction.segments[segment_id];\n        [['b1', 'from_node_id'], ['b2', 'to_node_id']].forEach(function(c) {\n            var bez = c[0],\n                node = c[1];\n            if (segment[node]==node_id && segment[bez]) {\n                segment[bez] = utils.c_plus_c(segment[bez], displacement);\n                var tbez = beziers[bezier_id_for_segment_id(segment_id, bez)];\n                tbez.x = segment[bez].x;\n                tbez.y = segment[bez].y;\n            }\n        });\n\n        // add to list of updated reaction ids if it isn't already there\n        if (updated.reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated.reaction_ids.push(segment_obj.reaction_id);\n        }\n    });\n    return updated;\n}\n\nfunction move_node_and_labels(node, reactions, displacement) {\n    node.x = node.x + displacement.x;\n    node.y = node.y + displacement.y;\n\n    // recalculate: node label\n    node.label_x = node.label_x + displacement.x;\n    node.label_y = node.label_y + displacement.y;\n\n    // recalculate: reaction label\n    var updated_reaction_ids = [];\n    node.connected_segments.map(function(segment_obj) {\n        var reaction = reactions[segment_obj.reaction_id];\n        // add to list of updated reaction ids if it isn't already there\n        if (updated_reaction_ids.indexOf(segment_obj.reaction_id) < 0) {\n            updated_reaction_ids.push(segment_obj.reaction_id);\n\n            // update reaction label (but only once per reaction\n            if (node.node_type == 'midmarker') {\n                reaction.label_x = reaction.label_x + displacement.x;\n                reaction.label_y = reaction.label_y + displacement.y;\n            }\n        }\n    });\n    return { reaction_ids: updated_reaction_ids };\n}\n\nfunction calculate_new_metabolite_coordinates(met, primary_index, main_axis, center, dis, is_reversed) {\n    /** Calculate metabolite coordinates for a new reaction metabolite.\n\n     */\n    // new local coordinate system\n    var displacement = main_axis[0],\n        main_axis = [utils.c_minus_c(main_axis[0], displacement),\n                     utils.c_minus_c(main_axis[1], displacement)],\n        center = utils.c_minus_c(center, displacement);\n\n    // Curve parameters\n    var w = 80,  // distance between reactants and between products\n        b1_strength = 0.4,\n        b2_strength = 0.25,\n        w2 = w*0.7,\n        secondary_dis = 40,\n        num_slots = Math.min(2, met.count - 1);\n\n    // size and spacing for primary and secondary metabolites\n    var ds, draw_at_index, r;\n    if (met.is_primary) { // primary\n        ds = 20;\n    } else { // secondary\n        ds = 10;\n        // don't use center slot\n        if (met.index > primary_index) draw_at_index = met.index - 1;\n        else draw_at_index = met.index;\n    }\n\n    var de = dis - ds, // distance between ends of line axis\n        reaction_axis = [{'x': ds, 'y': 0},\n                         {'x': de, 'y': 0}];\n\n    // Define line parameters and axis.\n    // Begin with unrotated coordinate system. +y = Down, +x = Right.\n    var end, circle, b1, b2;\n    // reactants\n    if (((met.coefficient < 0) != is_reversed) && met.is_primary) { // Ali == BADASS\n        end = {'x': reaction_axis[0].x,\n               'y': reaction_axis[0].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + (end.x)*(1-b2_strength),\n              'y': center.y*b2_strength + (end.y)*(1-b2_strength)},\n        circle = {'x': main_axis[0].x,\n                  'y': main_axis[0].y};\n    } else if ((met.coefficient < 0) != is_reversed) {\n        end = {'x': reaction_axis[0].x + secondary_dis,\n               'y': reaction_axis[0].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[0].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[0].y*b1_strength},\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[0].x + secondary_dis,\n                  'y': main_axis[0].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    } else if (((met.coefficient > 0) != is_reversed) && met.is_primary) {        // products\n        end = {'x': reaction_axis[1].x,\n               'y': reaction_axis[1].y};\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x,\n                  'y': main_axis[1].y};\n    } else if ((met.coefficient > 0) != is_reversed) {\n        end = {'x': reaction_axis[1].x - secondary_dis,\n               'y': reaction_axis[1].y + (w2*draw_at_index - w2*(num_slots-1)/2)},\n        b1 = {'x': center.x*(1-b1_strength) + reaction_axis[1].x*b1_strength,\n              'y': center.y*(1-b1_strength) + reaction_axis[1].y*b1_strength};\n        b2 = {'x': center.x*b2_strength + end.x*(1-b2_strength),\n              'y': center.y*b2_strength + end.y*(1-b2_strength)},\n        circle = {'x': main_axis[1].x - secondary_dis,\n                  'y': main_axis[1].y + (w*draw_at_index - w*(num_slots-1)/2)};\n    }\n    var loc = {};\n    loc.b1 = utils.c_plus_c(displacement, b1);\n    loc.b2 = utils.c_plus_c(displacement, b2);\n    loc.circle = utils.c_plus_c(displacement, circle);\n    return loc;\n}\n\nfunction new_text_label(largest_ids, text, coords) {\n    var new_id = String(++largest_ids.text_labels),\n        new_label = { text: text,\n                      x: coords.x,\n                      y: coords.y };\n    return {id: new_id, label: new_label};\n}\n\nfunction bezier_id_for_segment_id(segment_id, bez) {\n    return segment_id+'_'+bez;\n}\n\nfunction bezier_ids_for_reaction_ids(reactions) {\n    /** Return an array of beziers ids for the array of reaction ids.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. a subset of *escher.Map.reactions*.\n\n     */\n    var bezier_ids = [];\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n\n            ['b1', 'b2'].forEach(function(bez) {\n                var seg_bez = segment[bez];\n                if (seg_bez !== null) {\n                    bezier_ids.push(bezier_id_for_segment_id(segment_id, bez));\n                }\n            });\n        }\n    }\n    return bezier_ids;\n}\n\nfunction new_beziers_for_segments(segments, reaction_id) {\n    /** Return an object containing beziers for the segments object.\n\n     Arguments\n     ---------\n\n     segments: A segments object, e.g. *escher.Map.segments*.\n\n     reaction_id: The reaction id for the segments.\n\n     */\n    var beziers = {};\n    for (var segment_id in segments) {\n        var segment = segments[segment_id];\n\n        ['b1', 'b2'].forEach(function(bez) {\n            var seg_bez = segment[bez];\n            if (seg_bez !== null) {\n                var bezier_id = bezier_id_for_segment_id(segment_id, bez);\n                beziers[bezier_id] = {\n                    bezier: bez,\n                    x: seg_bez.x,\n                    y: seg_bez.y,\n                    reaction_id: reaction_id,\n                    segment_id: segment_id\n                };\n            }\n        });\n    }\n    return beziers;\n}\n\nfunction new_beziers_for_reactions(reactions) {\n    /** Return an object containing beziers for the reactions object.\n\n     Arguments\n     ---------\n\n     reactions: A reactions object, e.g. *escher.Map.reactions*.\n\n     */\n    var beziers = {};\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id];\n\n        var these = new_beziers_for_segments(reaction.segments, reaction_id);\n        utils.extend(beziers, these);\n    }\n    return beziers;\n}\n","/**\n * @license\n *\n * complete.ly 1.0.0\n * MIT Licensing\n * Copyright (c) 2013 Lorenzo Puccetti\n *\n * This Software shall be used for doing good things, not bad things.\n *\n * Modified by Zachary King (c) 2014.\n *\n **/\n\nvar utils = require('./utils');\n\nmodule.exports = function(container, config) {\n    document = utils.get_document(container);\n    window = utils.get_window(container);\n\n    config = config || {};\n    config.fontSize =                       config.fontSize   || '13px';\n    config.fontFamily =                     config.fontFamily || 'sans-serif';\n    config.promptInnerHTML =                config.promptInnerHTML || '';\n    config.color =                          config.color || '#333';\n    config.hintColor =                      config.hintColor || '#aaa';\n    config.backgroundColor =                config.backgroundColor || '#fff';\n    config.dropDownBorderColor =            config.dropDownBorderColor || '#aaa';\n    config.dropDownZIndex =                 config.dropDownZIndex || '100'; // to ensure we are in front of everybody\n    config.dropDownOnHoverBackgroundColor = config.dropDownOnHoverBackgroundColor || '#ddd';\n\n    var txtInput = document.createElement('input');\n    txtInput.type ='text';\n    txtInput.spellcheck = false;\n    txtInput.style.fontSize =        config.fontSize;\n    txtInput.style.fontFamily =      config.fontFamily;\n    txtInput.style.color =           config.color;\n    txtInput.style.backgroundColor = config.backgroundColor;\n    txtInput.style.width = '100%';\n    txtInput.style.outline = '0';\n    txtInput.style.border =  '0';\n    txtInput.style.margin =  '0';\n    txtInput.style.padding = '0';\n\n    var txtHint = txtInput.cloneNode();\n    txtHint.disabled='';\n    txtHint.style.position = 'absolute';\n    txtHint.style.top =  '0';\n    txtHint.style.left = '0';\n    txtHint.style.borderColor = 'transparent';\n    txtHint.style.boxShadow =   'none';\n    txtHint.style.color = config.hintColor;\n\n    txtInput.style.backgroundColor ='transparent';\n    txtInput.style.verticalAlign = 'top';\n    txtInput.style.position = 'relative';\n\n    var wrapper = document.createElement('div');\n    wrapper.style.position = 'relative';\n    wrapper.style.outline = '0';\n    wrapper.style.border =  '0';\n    wrapper.style.margin =  '0';\n    wrapper.style.padding = '0';\n\n    var prompt = document.createElement('div');\n    prompt.style.position = 'absolute';\n    prompt.style.outline = '0';\n    prompt.style.margin =  '0';\n    prompt.style.padding = '0';\n    prompt.style.border =  '0';\n    prompt.style.fontSize =   config.fontSize;\n    prompt.style.fontFamily = config.fontFamily;\n    prompt.style.color =           config.color;\n    prompt.style.backgroundColor = config.backgroundColor;\n    prompt.style.top = '0';\n    prompt.style.left = '0';\n    prompt.style.overflow = 'hidden';\n    prompt.innerHTML = config.promptInnerHTML;\n    prompt.style.background = 'transparent';\n    if (document.body === undefined) {\n        throw 'document.body is undefined. The library was wired up incorrectly.';\n    }\n    document.body.appendChild(prompt);\n    var w = prompt.getBoundingClientRect().right; // works out the width of the prompt.\n    wrapper.appendChild(prompt);\n    prompt.style.visibility = 'visible';\n    prompt.style.left = '-'+w+'px';\n    wrapper.style.marginLeft= w+'px';\n\n    wrapper.appendChild(txtHint);\n    wrapper.appendChild(txtInput);\n\n    var dropDown = document.createElement('div');\n    dropDown.style.position = 'absolute';\n    dropDown.style.visibility = 'hidden';\n    dropDown.style.outline = '0';\n    dropDown.style.margin =  '0';\n    dropDown.style.padding = '0';\n    dropDown.style.textAlign = 'left';\n    dropDown.style.fontSize =   config.fontSize;\n    dropDown.style.fontFamily = config.fontFamily;\n    dropDown.style.backgroundColor = config.backgroundColor;\n    dropDown.style.zIndex = config.dropDownZIndex;\n    dropDown.style.cursor = 'default';\n    dropDown.style.borderStyle = 'solid';\n    dropDown.style.borderWidth = '1px';\n    dropDown.style.borderColor = config.dropDownBorderColor;\n    dropDown.style.overflowX= 'hidden';\n    dropDown.style.whiteSpace = 'pre';\n    dropDown.style.overflowY = 'scroll';\n\n    var createDropDownController = function(elem) {\n        var rows = [];\n        var ix = 0;\n        var oldIndex = -1;\n        var current_row = null;\n\n        var onMouseOver =  function() { this.style.outline = '1px solid #ddd'; }\n        var onMouseOut =   function() { this.style.outline = '0'; }\n        var onDblClick =  function(e) {\n            e.preventDefault();\n            p.onmouseselection(this.id);\n        }\n\n        var p = {\n            hide :  function() { elem.style.visibility = 'hidden'; },\n            refresh : function(token, options) {\n                elem.style.visibility = 'hidden';\n                ix = 0;\n                elem.innerHTML ='';\n                var vph = (window.innerHeight || document.documentElement.clientHeight);\n                var rect = elem.parentNode.getBoundingClientRect();\n                var distanceToTop = rect.top - 6;                        // heuristic give 6px\n                var distanceToBottom = vph - rect.bottom -6;  // distance from the browser border.\n\n                rows = [];\n                for (var i = 0; i < options.length; i++) {\n                    // ignore case\n                    var found = options[i].matches.filter(function(match) {\n                        return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                    });\n                    if (found.length == 0)\n                        continue;\n                    var divRow = document.createElement('div');\n                    divRow.style.color = config.color;\n                    divRow.onmouseover = onMouseOver;\n                    divRow.onmouseout =  onMouseOut;\n                    // prevent selection for double click\n                    divRow.onmousedown = function(e) { e.preventDefault(); };\n                    divRow.ondblclick = onDblClick;\n                    divRow.__hint = found[0];\n                    divRow.id = options[i].id;\n                    divRow.innerHTML = options[i].html;\n                    rows.push(divRow);\n                    elem.appendChild(divRow);\n                    if (rows.length >= rs.display_limit)\n                        break;\n                }\n                if (rows.length===0) {\n                    return; // nothing to show.\n                }\n                p.highlight(0);\n\n                // Heuristic (only when the distance to the to top is 4\n                // times more than distance to the bottom\n                if (distanceToTop > distanceToBottom*3) {\n                    // we display the dropDown on the top of the input text\n                    elem.style.maxHeight =  distanceToTop+'px';\n                    elem.style.top ='';\n                    elem.style.bottom ='100%';\n                } else {\n                    elem.style.top = '100%';\n                    elem.style.bottom = '';\n                    elem.style.maxHeight =  distanceToBottom+'px';\n                }\n                elem.style.visibility = 'visible';\n            },\n            highlight : function(index) {\n                if (oldIndex !=-1 && rows[oldIndex]) {\n                    rows[oldIndex].style.backgroundColor = config.backgroundColor;\n                }\n                rows[index].style.backgroundColor = config.dropDownOnHoverBackgroundColor; // <-- should be config\n                oldIndex = index;\n                current_row = rows[index];\n            },\n            // moves the selection either up or down (unless it's not\n            // possible) step is either +1 or -1.\n            move : function(step) {\n                // nothing to move if there is no dropDown. (this happens if\n                // the user hits escape and then down or up)\n                if (elem.style.visibility === 'hidden')\n                    return '';\n                // No circular scrolling\n                if (ix+step === -1 || ix+step === rows.length)\n                    return rows[ix].__hint;\n                ix+=step;\n                p.highlight(ix);\n                return rows[ix].__hint;\n            },\n            onmouseselection : function() {},\n            get_current_row: function () {\n                return current_row;\n            }\n        };\n        return p;\n    }\n\n    var dropDownController = createDropDownController(dropDown);\n\n    dropDownController.onmouseselection = function(id) {\n        rs.onEnter(id)\n        rs.input.focus();\n    }\n\n    wrapper.appendChild(dropDown);\n    container.appendChild(wrapper);\n\n    var spacer,\n        // This will contain the leftSide part of the textfield (the bit that\n        // was already autocompleted)\n        leftSide;\n\n    function calculateWidthForText(text) {\n        if (spacer === undefined) { // on first call only.\n            spacer = document.createElement('span');\n            spacer.style.visibility = 'hidden';\n            spacer.style.position = 'fixed';\n            spacer.style.outline = '0';\n            spacer.style.margin =  '0';\n            spacer.style.padding = '0';\n            spacer.style.border =  '0';\n            spacer.style.left = '0';\n            spacer.style.whiteSpace = 'pre';\n            spacer.style.fontSize =   config.fontSize;\n            spacer.style.fontFamily = config.fontFamily;\n            spacer.style.fontWeight = 'normal';\n            document.body.appendChild(spacer);\n        }\n\n        // Used to encode an HTML string into a plain text.\n        // taken from http://stackoverflow.com/questions/1219860/javascript-jquery-html-encoding\n        spacer.innerHTML = String(text).replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        return spacer.getBoundingClientRect().right;\n    }\n\n\n    var rs = {\n        get_hint :    function(x) { return x; },\n        display_limit: 100,\n        onArrowDown : function() {},               // defaults to no action.\n        onArrowUp :   function() {},               // defaults to no action.\n        onEnter :     function() {},               // defaults to no action.\n        onTab :       function() {},               // defaults to no action.\n        onChange:     function() { rs.repaint() }, // defaults to repainting.\n        startFrom:    0,\n        options:      [],\n\n        // Only to allow easy access to the HTML elements to the final user\n        // (possibly for minor customizations)\n        wrapper : wrapper,\n        input :  txtInput,\n        hint  :  txtHint,\n        dropDown :  dropDown,\n\n        prompt : prompt,\n        setText : function(text) {\n            txtHint.value = text;\n            txtInput.value = text;\n        },\n        getText : function() {\n            return txtInput.value;\n        },\n        hideDropDown : function() {\n            dropDownController.hide();\n        },\n        repaint : function() {\n            var text = txtInput.value;\n            var startFrom =  rs.startFrom;\n            var options =    rs.options;\n            var optionsLength = options.length;\n\n            // breaking text in leftSide and token.\n            var token = text.substring(startFrom);\n            leftSide =  text.substring(0,startFrom);\n\n            // updating the hint.\n            txtHint.value ='';\n            for (var i = 0; i < optionsLength; i++) {\n                var found = options[i].matches.filter(function(match) {\n                    return match.toLowerCase().indexOf(token.toLowerCase()) == 0;\n                });\n                if (found.length == 0)\n                    continue;\n                txtHint.value = rs.get_hint(found[0]);\n                break;\n            }\n\n            // moving the dropDown and refreshing it.\n            dropDown.style.left = calculateWidthForText(leftSide)+'px';\n            dropDownController.refresh(token, rs.options);\n        }\n    };\n\n    var registerOnTextChangeOldValue;\n\n    // Register a callback function to detect changes to the content of the\n    // input-type-text.  Those changes are typically followed by user's\n    // action: a key-stroke event but sometimes it might be a mouse click.\n    var registerOnTextChange = function(txt, callback) {\n        registerOnTextChangeOldValue = txt.value;\n        var handler = function() {\n            var value = txt.value;\n            if (registerOnTextChangeOldValue !== value) {\n                registerOnTextChangeOldValue = value;\n                callback(value);\n            }\n        };\n\n        // For user's actions, we listen to both input events and key up events\n        // It appears that input events are not enough so we defensively listen to key up events too.\n        // source: http://help.dottoro.com/ljhxklln.php\n        //\n        // The cost of listening to three sources should be negligible as the handler will invoke callback function\n        // only if the text.value was effectively changed.\n        txt.addEventListener(\"input\",  handler, false);\n        txt.addEventListener('keyup',  handler, false);\n        txt.addEventListener('change', handler, false);\n    };\n\n\n    registerOnTextChange(txtInput,function(text) { // note the function needs to be wrapped as API-users will define their onChange\n        rs.onChange(text);\n        rs.repaint();\n    });\n\n\n    var keyDownHandler = function(e) {\n        e = e || window.event;\n        var keyCode = e.keyCode;\n\n        if (keyCode == 33) { return; } // page up (do nothing)\n        if (keyCode == 34) { return; } // page down (do nothing);\n\n        // right,  end, tab  (autocomplete triggered)\n        if (keyCode == 39 || keyCode == 35 || keyCode == 9) {\n            // for tabs we need to ensure that we override the default\n            // behaviour: move to the next focusable HTML-element\n            if (keyCode == 9) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (txtHint.value.length == 0) {\n                    // tab was called with no action.\n                    rs.onTab();\n                }\n            }\n            // if there is a hint\n            if (txtHint.value.length > 0) {\n                txtInput.value = txtHint.value;\n                var hasTextChanged = registerOnTextChangeOldValue != txtInput.value\n                // avoid dropDown to appear again\n                registerOnTextChangeOldValue = txtInput.value;\n                // for example imagine the array contains the following\n                // words: bee, beef, beetroot. User has hit enter to get\n                // 'bee' it would be prompted with the dropDown again (as\n                // beef and beetroot also match)\n                if (hasTextChanged) {\n                    // force it.\n                    rs.onChange(txtInput.value);\n                }\n            }\n            return;\n        }\n\n        if (keyCode == 13) { // enter\n            // get current\n            var id = dropDownController.get_current_row().id;\n            rs.onEnter(id);\n            return;\n        }\n\n        if (keyCode == 40) { // down\n            var m = dropDownController.move(+1);\n            if (m == '') { rs.onArrowDown(); }\n            txtHint.value = rs.get_hint(m);\n            return;\n        }\n\n        if (keyCode == 38 ) { // up\n            var m = dropDownController.move(-1);\n            if (m == '') { rs.onArrowUp(); }\n            txtHint.value = rs.get_hint(m);\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        // it's important to reset the txtHint on key down. Think: user\n        // presses a letter (e.g. 'x') and never releases. You get\n        // (xxxxxxxxxxxxxxxxx) and you would see still the hint. Reset the\n        // txtHint. (it might be updated onKeyUp).\n        txtHint.value ='';\n    };\n\n    txtInput.addEventListener(\"keydown\",  keyDownHandler, false);\n    return rs;\n};\n","/** data_styles */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    import_and_check: import_and_check,\n    text_for_data: text_for_data,\n    float_for_data: float_for_data,\n    reverse_flux_for_data: reverse_flux_for_data,\n    gene_string_for_data: gene_string_for_data,\n    csv_converter: csv_converter,\n    genes_for_gene_reaction_rule: genes_for_gene_reaction_rule,\n    evaluate_gene_reaction_rule: evaluate_gene_reaction_rule,\n    replace_gene_in_rule: replace_gene_in_rule,\n    apply_reaction_data_to_reactions: apply_reaction_data_to_reactions,\n    apply_metabolite_data_to_nodes: apply_metabolite_data_to_nodes,\n    apply_gene_data_to_reactions: apply_gene_data_to_reactions\n};\n\n\n// globals\nvar RETURN_ARG = function(x) { return x; },\n    ESCAPE_REG = /([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\n    EMPTY_LINES = /\\n\\s*\\n/g,\n    TRAILING_NEWLINE = /\\n\\s*(\\)*)\\s*$/,\n    AND_OR = /([\\(\\) ])(?:and|or)([\\)\\( ])/ig,\n    ALL_PARENS = /[\\(\\)]/g,\n    // capture an expression surrounded by whitespace and a set of parentheses\n    EXCESS_PARENS = /\\(\\s*(\\S+)\\s*\\)/g,\n    OR = /\\s+or\\s+/i,\n    AND = /\\s+and\\s+/i,\n    // find ORs\n    OR_EXPRESSION = /(^|\\()(\\s*-?[0-9.]+\\s+(?:or\\s+-?[0-9.]+\\s*)+)(\\)|$)/ig,\n    // find ANDS, respecting order of operations (and before or)\n    AND_EXPRESSION = /(^|\\(|or\\s)(\\s*-?[0-9.]+\\s+(?:and\\s+-?[0-9.]+\\s*)+)(\\sor|\\)|$)/ig;\n\n\nfunction import_and_check(data, name, all_reactions) {\n    /** Convert imported data to a style that can be applied to reactions\n     and nodes.\n\n     Arguments\n     ---------\n\n     data: The data object.\n\n     name: Either 'reaction_data', 'metabolite_data', or 'gene_data'\n\n     all_reactions: Required for name == 'gene_data'. Must include all\n     GPRs for the map and model.\n\n     */\n\n    // check arguments\n    if (data===null)\n        return null;\n    if (['reaction_data', 'metabolite_data', 'gene_data'].indexOf(name) == -1)\n        throw new Error('Invalid name argument: ' + name);\n\n    // make array\n    if (!(data instanceof Array)) {\n        data = [data];\n    }\n    // check data\n    var check = function() {\n        if (data===null)\n            return null;\n        if (data.length==1)\n            return null;\n        if (data.length==2)\n            return null;\n        return console.warn('Bad data style: ' + name);\n    };\n    check();\n    data = utils.array_to_object(data);\n\n    if (name == 'gene_data') {\n        if (all_reactions === undefined)\n            throw new Error('Must pass all_reactions argument for gene_data');\n        data = align_gene_data_to_reactions(data, all_reactions);\n    }\n\n    return data;\n\n    // definitions\n    function align_gene_data_to_reactions(data, reactions) {\n        var aligned = {},\n            null_val = [null];\n        // make an array of nulls as the default\n        for (var gene_id in data) {\n            null_val = data[gene_id].map(function() { return null; });\n            break;\n        }\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id],\n                bigg_id = reaction.bigg_id,\n                this_gene_data = {};\n            // save to aligned\n\n            // get the genes if they aren't already there\n            var g = reaction.genes,\n                genes;\n            if (typeof g === 'undefined')\n                genes = genes_for_gene_reaction_rule(reaction.gene_reaction_rule);\n            else\n                genes = g.map(function(x) { return x.bigg_id; });\n\n            genes.forEach(function(gene_id) {\n                var d = data[gene_id];\n                if (typeof d === 'undefined')\n                    d = null_val;\n                this_gene_data[gene_id] = d;\n            });\n            aligned[bigg_id] = this_gene_data;\n        }\n        return aligned;\n    }\n}\n\nfunction float_for_data(d, styles, compare_style) {\n    // all null\n    if (d === null)\n        return null;\n\n    // absolute value\n    var take_abs = (styles.indexOf('abs') != -1);\n\n    if (d.length==1) { // 1 set\n        // 1 null\n        var f = _parse_float_or_null(d[0]);\n        if (f === null)\n            return null;\n        return abs(f, take_abs);\n    } else if (d.length==2) { // 2 sets\n        // 2 null\n        var fs = d.map(_parse_float_or_null);\n        if (fs[0] === null || fs[1] === null)\n            return null;\n\n        if (compare_style == 'diff') {\n            return diff(fs[0], fs[1], take_abs);\n        } else if (compare_style == 'fold') {\n            return check_finite(fold(fs[0], fs[1], take_abs));\n        }\n        else if (compare_style == 'log2_fold') {\n            return check_finite(log2_fold(fs[0], fs[1], take_abs));\n        }\n    } else {\n        throw new Error('Data array must be of length 1 or 2');\n    }\n    throw new Error('Bad data compare_style: ' + compare_style);\n\n    // definitions\n    function check_finite(x) {\n        return isFinite(x) ? x : null;\n    }\n    function abs(x, take_abs) {\n        return take_abs ? Math.abs(x) : x;\n    }\n    function diff(x, y, take_abs) {\n        if (take_abs) return Math.abs(y - x);\n        else return y - x;\n    }\n    function fold(x, y, take_abs) {\n        if (x == 0 || y == 0) return null;\n        var fold = (y >= x ? y / x : - x / y);\n        return take_abs ? Math.abs(fold) : fold;\n    }\n    function log2_fold(x, y, take_abs) {\n        if (x == 0) return null;\n        if (y / x < 0) return null;\n        var log = Math.log(y / x) / Math.log(2);\n        return take_abs ? Math.abs(log) : log;\n    }\n}\n\nfunction reverse_flux_for_data(d) {\n    if (d === null || d[0] === null)\n        return false;\n    return (d[0] < 0);\n}\n\nfunction gene_string_for_data(rule, gene_values, genes, styles,\n                              identifiers_on_map, compare_style) {\n    /** Add gene values to the gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: (string) The gene reaction rule.\n\n     gene_values: The values.\n\n     genes: An array of objects specifying the gene bigg_id and name.\n\n     styles: The reaction styles.\n\n     identifiers_on_map: The type of identifiers ('bigg_id' or 'name').\n\n     compare_style: The comparison style.\n\n     Returns\n     -------\n\n     A list of objects with {\n     bigg_id: The bigg ID.\n     name: The name.\n     text: The new string with formatted data values.\n     }\n\n     The text elements should each appear on a new line.\n\n     */\n\n    var out_text = rule,\n        no_data = (gene_values === null),\n        // keep track of bigg_id's or names to remove repeats\n        genes_found = {};\n\n\n    genes.forEach(function(g_obj) {\n        // get id or name\n        var name = g_obj[identifiers_on_map];\n        if (typeof name === 'undefined')\n            throw new Error('Bad value for identifiers_on_map: ' + identifiers_on_map);\n        // remove repeats that may have found their way into genes object\n        if (typeof genes_found[name] !== 'undefined')\n            return;\n        genes_found[name] = true;\n        // generate the string\n        if (no_data) {\n            out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + '\\n'));\n        } else {\n            var d = gene_values[g_obj.bigg_id];\n            if (typeof d === 'undefined') d = null;\n            var f = float_for_data(d, styles, compare_style),\n                format = (f === null ? RETURN_ARG : d3.format('.3g'));\n            if (d.length==1) {\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, (name + ' (' + null_or_d(d[0], format) + ')\\n'));\n            }\n            else if (d.length==2) {\n                // check if they are all text\n                var new_str,\n                    any_num = d.reduce(function(c, x) {\n                        return c || _parse_float_or_null(x) !== null;\n                    }, false);\n                if (any_num) {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ': ' +\n                               null_or_d(f, format) +\n                               ')\\n');\n                } else {\n                    new_str = (name + ' (' +\n                               null_or_d(d[0], format) + ', ' +\n                               null_or_d(d[1], format) + ')\\n');\n                }\n                out_text = replace_gene_in_rule(out_text, g_obj.bigg_id, new_str);\n            }\n        }\n    });\n    // remove emtpy lines\n    out_text = out_text.replace(EMPTY_LINES, '\\n')\n    // remove trailing newline (with or without parens)\n        .replace(TRAILING_NEWLINE, '$1');\n\n    // split by newlines\n    var result = out_text.split('\\n').map(function(text) {\n        for (var i = 0, l = genes.length; i < l; i++) {\n            var gene = genes[i];\n            if (text.indexOf(gene[identifiers_on_map]) != -1) {\n                return { bigg_id: gene.bigg_id, name: gene.name, text: text };\n                continue;\n            }\n        }\n        // not found, then none\n        return { bigg_id: null, name: null, text: text };\n    });\n    return result;\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? 'nd' : format(d);\n    }\n}\n\nfunction text_for_data(d, f) {\n    if (d === null)\n        return null_or_d(null);\n    if (d.length == 1) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g'));\n        return null_or_d(d[0], format);\n    }\n    if (d.length == 2) {\n        var format = (f === null ? RETURN_ARG : d3.format('.3g')),\n            t = null_or_d(d[0], format);\n        t += ', ' + null_or_d(d[1], format);\n        t += ': ' + null_or_d(f, format);\n        return t;\n    }\n    return '';\n\n    // definitions\n    function null_or_d(d, format) {\n        return d === null ? '(nd)' : format(d);\n    }\n}\n\nfunction csv_converter(csv_rows) {\n    /** Convert data from a csv file to json-style data.\n\n     File must include a header row.\n\n     */\n    // count rows\n    var c = csv_rows[0].length,\n        converted = [];\n    if (c < 2 || c > 3)\n        throw new Error('CSV file must have 2 or 3 columns');\n    // set up rows\n    for (var i = 1; i < c; i++) {\n        converted[i - 1] = {};\n    }\n    // fill\n    csv_rows.slice(1).forEach(function(row) {\n        for (var i = 1, l = row.length; i < l; i++) {\n            converted[i - 1][row[0]] = row[i];\n        }\n    });\n    return converted;\n}\n\nfunction genes_for_gene_reaction_rule(rule) {\n    /** Find unique genes in gene_reaction_rule string.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     Returns\n     -------\n\n     An array of gene strings.\n\n     */\n    var genes = rule\n    // remove ANDs and ORs, surrounded by space or parentheses\n            .replace(AND_OR, '$1$2')\n    // remove parentheses\n            .replace(ALL_PARENS, '')\n    // split on whitespace\n            .split(' ')\n            .filter(function(x) { return x != ''; });\n    // unique strings\n    return utils.unique_strings_array(genes);\n}\n\nfunction evaluate_gene_reaction_rule(rule, gene_values, and_method_in_gene_reaction_rule) {\n    /** Return a value given the rule and gene_values object.\n\n     Arguments\n     ---------\n\n     rule: A boolean string containing gene names, parentheses, AND's and\n     OR's.\n\n     gene_values: Object with gene_ids for keys and numbers for values.\n\n     and_method_in_gene_reaction_rule: Either 'mean' or 'min'.\n\n     */\n\n    var null_val = [null],\n        l = 1;\n    // make an array of nulls as the default\n    for (var gene_id in gene_values) {\n        null_val = gene_values[gene_id].map(function() { return null; });\n        l = null_val.length;\n        break;\n    }\n\n    if (rule == '') return null_val;\n\n    // for each element in the arrays\n    var out = [];\n    for (var i = 0; i < l; i++) {\n        // get the rule\n        var curr_val = rule;\n\n        // put all the numbers into the expression\n        var all_null = true;\n        for (var gene_id in gene_values) {\n            var f = _parse_float_or_null(gene_values[gene_id][i]);\n            if (f === null) {\n                f = 0;\n            } else {\n                all_null = false;\n            }\n            curr_val = replace_gene_in_rule(curr_val, gene_id, f);\n        }\n        if (all_null) {\n            out.push(null);\n            continue;\n        }\n\n        // recursively evaluate\n        while (true) {\n            // arithemtic expressions\n            var new_curr_val = curr_val;\n\n            // take out excessive parentheses\n            new_curr_val = new_curr_val.replace(EXCESS_PARENS, ' $1 ');\n\n            // or's\n            new_curr_val = new_curr_val.replace(OR_EXPRESSION, function(match, p1, p2, p3) {\n                // sum\n                var nums = p2.split(OR).map(parseFloat),\n                    sum = nums.reduce(function(a, b) { return a + b;});\n                return p1 + sum + p3;\n            });\n            // and's\n            new_curr_val = new_curr_val.replace(AND_EXPRESSION, function(match, p1, p2, p3) {\n                // find min\n                var nums = p2.split(AND).map(parseFloat),\n                    val = (and_method_in_gene_reaction_rule == 'min' ?\n                           Math.min.apply(null, nums) :\n                           nums.reduce(function(a, b) { return a + b; }) / nums.length);\n                return p1 + val + p3;\n            });\n            // break if there is no change\n            if (new_curr_val == curr_val)\n                break;\n            curr_val = new_curr_val;\n        }\n        // strict test for number\n        var num = Number(curr_val);\n        if (isNaN(num)) {\n            console.warn('Could not evaluate ' + rule);\n            out.push(null);\n        } else {\n            out.push(num);\n        }\n    }\n    return out;\n}\n\nfunction replace_gene_in_rule(rule, gene_id, val) {\n    // get the escaped string, with surrounding space or parentheses\n    var space_or_par_start = '(^|[\\\\\\s\\\\\\(\\\\\\)])',\n        space_or_par_finish = '([\\\\\\s\\\\\\(\\\\\\)]|$)',\n        escaped = space_or_par_start + escape_reg_exp(gene_id) + space_or_par_finish;\n    return rule.replace(new RegExp(escaped, 'g'),  '$1' + val + '$2');\n\n    // definitions\n    function escape_reg_exp(string) {\n        return string.replace(ESCAPE_REG, \"\\\\$1\");\n    }\n}\n\nfunction apply_reaction_data_to_reactions(reactions, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n\n    if (data === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            d = (reaction.bigg_id in data ? data[reaction.bigg_id] : null),\n            f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        reaction.gene_string = null;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n    }\n    return true;\n}\n\nfunction apply_metabolite_data_to_nodes(nodes, data, styles, compare_style) {\n    /**  Returns True if the scale has changed.\n\n     */\n    if (data === null) {\n        for (var node_id in nodes) {\n            nodes[node_id].data = null;\n            nodes[node_id].data_string = '';\n        }\n        return false;\n    }\n\n    // grab the data\n    for (var node_id in nodes) {\n        var node = nodes[node_id],\n            d = (node.bigg_id in data ? data[node.bigg_id] : null),\n            f = float_for_data(d, styles, compare_style),\n            s = text_for_data(d, f);\n        node.data = f;\n        node.data_string = s;\n    }\n    return true;\n}\n\nfunction apply_gene_data_to_reactions(reactions, gene_data_obj, styles, identifiers_on_map,\n                                      compare_style, and_method_in_gene_reaction_rule) {\n    /** Returns true if data is present\n\n     Arguments\n     ---------\n\n     reactions: The reactions to update.\n\n     gene_data_obj: The gene data object, with the following style:\n\n     { reaction_id: { gene_id: value } }\n\n     styles:  Gene styles array.\n\n     identifiers_on_map:\n\n     compare_style:\n\n     and_method_in_gene_reaction_rule:\n\n     */\n\n    if (gene_data_obj === null) {\n        for (var reaction_id in reactions) {\n            var reaction = reactions[reaction_id];\n            reaction.data = null;\n            reaction.data_string = '';\n            reaction.reverse_flux = false;\n            for (var segment_id in reaction.segments) {\n                var segment = reaction.segments[segment_id];\n                segment.data = null;\n            }\n            reaction.gene_string = null;\n        }\n        return false;\n    }\n\n    // get the null val\n    var null_val = [null];\n    // make an array of nulls as the default\n    for (var reaction_id in gene_data_obj) {\n        for (var gene_id in gene_data_obj[reaction_id]) {\n            null_val = gene_data_obj[reaction_id][gene_id]\n                .map(function() { return null; });\n            break;\n        }\n        break;\n    }\n\n    // apply the datasets to the reactions\n    for (var reaction_id in reactions) {\n        var reaction = reactions[reaction_id],\n            rule = reaction.gene_reaction_rule;\n        // find the data\n        var d, gene_values,\n            r_data = gene_data_obj[reaction.bigg_id];\n        if (typeof r_data !== 'undefined') {\n            gene_values = r_data;\n            d = evaluate_gene_reaction_rule(rule, gene_values,\n                                            and_method_in_gene_reaction_rule);\n        } else {\n            gene_values = {};\n            d = null_val;\n        }\n        var f = float_for_data(d, styles, compare_style),\n            r = reverse_flux_for_data(d),\n            s = text_for_data(d, f);\n        reaction.data = f;\n        reaction.data_string = s;\n        reaction.reverse_flux = r;\n        // apply to the segments\n        for (var segment_id in reaction.segments) {\n            var segment = reaction.segments[segment_id];\n            segment.data = reaction.data;\n            segment.reverse_flux = reaction.reverse_flux;\n        }\n        // always update the gene string\n        reaction.gene_string = gene_string_for_data(rule,\n                                                    gene_values,\n                                                    reaction.genes,\n                                                    styles,\n                                                    identifiers_on_map,\n                                                    compare_style);\n    }\n    return true;\n}\n\nfunction _parse_float_or_null(x) {\n    // strict number casting\n    var f = Number(x);\n    // check for null and '', which haven't been caught yet\n    return (isNaN(f) || parseFloat(x) != f) ? null : f;\n}\n","/**\n* @license\n*\n* Escher\n* Author: Zachary King\n*\n* The MIT License (MIT)\n*\n* This software is Copyright © 2015 The Regents of the University of\n* California. All Rights Reserved.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n* THE SOFTWARE.\n*/\n\nmodule.exports = {\n    Builder: require('./Builder'),\n    Map: require('./Map'),\n    Behavior: require('./Behavior'),\n    KeyManager: require('./KeyManager'),\n    DataMenu: require('./DataMenu'),\n    UndoStack: require('./UndoStack'),\n    CobraModel: require('./CobraModel'),\n    utils: require('./utils'),\n    SearchIndex: require('./SearchIndex'),\n    Settings: require('./Settings'),\n    data_styles: require('./data_styles'),\n    ui: require('./ui'),\n    static: require('./static'),\n    ZoomContainer: require('./ZoomContainer')\n};\n","/** static */\n\n/* global d3 */\n\nvar utils = require('./utils');\n\n\nmodule.exports = {\n    load_map_model_from_url: load_map_model_from_url\n};\n\n\nfunction load_map_model_from_url(map_download_url, model_download_url,\n                                 local_index, options, callback) {\n    var opt = utils.parse_url_components(window, options),\n        to_load = [],\n        load_map = function (fn) { fn(null); },\n        load_model = function (fn) { fn(null); };\n    if (opt.map_name) {\n        var map_path = _get_path('map', opt.map_name,\n                                 local_index, map_download_url);\n        if (map_path) {\n            load_map = function (fn) {\n                d3.json(map_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    if (opt.model_name) {\n        var model_path = _get_path('model', opt.model_name,\n                                   local_index, model_download_url);\n        if (model_path) {\n            load_model = function (fn) {\n                d3.json(model_path, function(error, data) {\n                    if (error) console.warn(error);\n                    fn(data);\n                });\n            };\n        }\n    }\n    load_map(function(map_data) {\n        load_model(function(model_data) {\n            callback(map_data, model_data, options);\n        });\n    });\n}\n\nfunction _get_path(kind, name, index, url) {\n    var match = index[kind+'s'].filter(function(x) {\n        return x[kind+'_name'] == name;\n    });\n    if (match.length == 0)\n        throw new Error('Bad ' + kind + ' ' + name);\n    return (url + encodeURIComponent(match[0].organism) +\n            '/' + encodeURIComponent(match[0][kind+'_name'])) + '.json';\n}\n","/** ui */\n\n/* global d3 */\n\nvar utils = require('./utils');\nvar data_styles = require('./data_styles');\n\nmodule.exports = {\n    individual_button: individual_button,\n    radio_button_group: radio_button_group,\n    button_group: button_group,\n    dropdown_menu: dropdown_menu,\n    set_json_input_button: set_json_input_button,\n    set_json_or_csv_input_button: set_json_or_csv_input_button\n};\n\n\nfunction individual_button(s, button) {\n    var b = s.append('button'),\n        c = b.append('span');\n    if ('id' in button) b.attr('id', button.id);\n    if ('classes' in button) b.attr('class', button.classes);\n\n    // text\n    if ('key_text' in button && 'text' in button && button.key_text !== null)\n        c.text(button.text + button.key_text);\n    else if ('text' in button)\n        c.text(button.text);\n\n    if ('icon' in button) c.classed(button.icon, true);\n    if ('key' in button) set_button(b, button.key);\n    // if ('tooltip' in button)\n    b.attr('title', button.tooltip);\n}\n\nfunction radio_button_group(s) {\n    var s2 = s.append('li')\n            .attr('class', 'btn-group-vertical')\n            .attr('data-toggle', 'buttons');\n    return { button: function(button) {\n        var b = s2.append(\"label\")\n                .attr(\"class\", \"btn btn-default\");\n        b.append('input').attr('type', 'radio');\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction button_group(s) {\n    var s2 = s.attr('class', 'btn-group-vertical');\n    return { button: function(button) {\n        var b = s2.append(\"button\")\n                .attr(\"class\", \"btn btn-default\");\n        var c = b.append(\"span\");\n        if ('id' in button) b.attr('id', button.id);\n\n        // text\n        if ('key_text' in button && 'text' in button && button.key_text !== null)\n            c.text(button.text + button.key_text);\n        else if ('text' in button)\n            c.text(button.text);\n\n        if ('icon' in button) c.classed(button.icon, true);\n        if ('key' in button) set_button(b, button.key);\n        if ('tooltip' in button) b.attr('title', button.tooltip);\n        return this;\n    }};\n}\n\nfunction dropdown_menu(s, name, pull_right) {\n    if (pull_right === undefined) pull_right = false;\n    var s2 = s.append('li')\n            .attr('class', 'dropdown');\n    s2.append('button').text(name+\" \")\n        .attr('class', 'btn btn-link btn-sm dropdown-button')\n        .attr('data-toggle', 'dropdown')\n        .append('b').attr('class', 'caret');\n    var ul = s2.append('ul')\n            .attr('class', 'dropdown-menu')\n            .classed('pull-right', pull_right)\n            .attr('role', 'menu')\n            .attr('aria-labelledby', 'dLabel');\n    return {\n        dropdown: s2,\n        button: function(button) {\n            var li = ul.append(\"li\")\n                    .attr('role', 'presentation')\n                    .datum(button),\n                link = li.append(\"a\")\n                    .attr('href', '#'),\n                icon = link.append('span')\n                    .attr('class', 'dropdown-button-icon'),\n                text = link.append('span')\n                    .attr('class', 'dropdown-button-text');\n            if ('id' in button) li.attr('id', button.id);\n\n            // text\n            if ('key_text' in button && 'text' in button && button.key_text !== null)\n                text.text(\" \"+button.text + button.key_text);\n            else if ('text' in button)\n                text.text(\" \"+button.text);\n\n            if ('icon' in button) icon.classed(button.icon, true);\n\n            if ('key' in button) {\n                set_button(link, button.key);\n            } else if ('input' in button) {\n                var input = button.input,\n                    out = (input.accept_csv ?\n                           set_json_or_csv_input_button(link, li, input.pre_fn,\n                                                        input.fn, input.failure_fn) :\n                           set_json_input_button(link, li, input.pre_fn,\n                                                 input.fn, input.failure_fn));\n                if ('assign' in input && 'key' in input)\n                    input.assign[input.key] = out;\n            }\n            return this;\n        },\n        divider: function() {\n            ul.append(\"li\")\n                .attr('role', 'presentation')\n                .attr('class', 'divider');\n            return this;\n        }\n    };\n}\n\nfunction set_button(b, key) {\n    b.on(\"click\", function() {\n        key.fn.call(key.target);\n    });\n}\n\nfunction set_json_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json(this.files[0],\n                                function(e, d) {\n                                    post_fn(e, d);\n                                    this.value = \"\";\n                                }.bind(this),\n                                pre_fn,\n                                failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n\nfunction set_json_or_csv_input_button(b, s, pre_fn, post_fn, failure_fn) {\n    var input = s.append(\"input\")\n            .attr(\"type\", \"file\")\n            .style(\"display\", \"none\")\n            .on(\"change\", function() {\n                utils.load_json_or_csv(this.files[0],\n                                       data_styles.csv_converter,\n                                       function(e, d) {\n                                           post_fn(e, d);\n                                           this.value = \"\";\n                                       }.bind(this),\n                                       pre_fn,\n                                       failure_fn);\n            });\n    b.on('click', function(e) {\n        input.node().click();\n    });\n    return function() { input.node().click(); };\n}\n","/* global d3, Blob, XMLSerializer */\n\nvar vkbeautify = require('vkbeautify');\nvar saveAs = require('filesaver');\n\n\nmodule.exports = {\n    set_options: set_options,\n    remove_child_nodes: remove_child_nodes,\n    load_css: load_css,\n    load_files: load_files,\n    load_the_file: load_the_file,\n    make_class: make_class,\n    setup_defs: setup_defs,\n    draw_an_object: draw_an_object,\n    draw_a_nested_object: draw_a_nested_object,\n    make_array: make_array,\n    make_array_ref: make_array_ref,\n    compare_arrays: compare_arrays,\n    array_to_object: array_to_object,\n    clone: clone,\n    extend: extend,\n    unique_concat: unique_concat,\n    unique_strings_array: unique_strings_array,\n    debounce: debounce,\n    object_slice_for_ids: object_slice_for_ids,\n    object_slice_for_ids_ref: object_slice_for_ids_ref,\n    c_plus_c: c_plus_c,\n    c_minus_c: c_minus_c,\n    c_times_scalar: c_times_scalar,\n    download_json: download_json,\n    load_json: load_json,\n    load_json_or_csv: load_json_or_csv,\n    download_svg: download_svg,\n    rotate_coords_recursive: rotate_coords_recursive,\n    rotate_coords: rotate_coords,\n    get_angle: get_angle,\n    to_degrees: to_degrees,\n    angle_for_event: angle_for_event,\n    distance: distance,\n    check_undefined: check_undefined,\n    compartmentalize: compartmentalize,\n    decompartmentalize: decompartmentalize,\n    mean: mean,\n    median: median,\n    quartiles: quartiles,\n    random_characters: random_characters,\n    generate_map_id: generate_map_id,\n    check_for_parent_tag: check_for_parent_tag,\n    name_to_url: name_to_url,\n    parse_url_components: parse_url_components,\n    get_document: get_document,\n    get_window: get_window,\n    d3_transform_catch: d3_transform_catch\n};\n\n\n// definitions\nfunction _check_filesaver() {\n    /** Check if Blob is available, and alert if it is not. */\n    try {\n        var isFileSaverSupported = !!new Blob();\n    } catch (e) {\n        alert(\"Blob not supported\");\n    }\n}\n\nfunction set_options(options, defaults, must_be_float) {\n    if (options === undefined || options === null)\n        return defaults;\n    var i = -1,\n        out = {};\n    for (var key in defaults) {\n        var has_key = ((key in options) &&\n                       (options[key] !== null) &&\n                       (options[key] !== undefined));\n        var val = (has_key ? options[key] : defaults[key]);\n        if (must_be_float && key in must_be_float) {\n            val = parseFloat(val);\n            if (isNaN(val)) {\n                if (has_key) {\n                    console.warn('Bad float for option ' + key);\n                    val = parseFloat(defaults[key]);\n                    if (isNaN(val)) {\n                        console.warn('Bad float for default ' + key);\n                        val = null;\n                    }\n                } else {\n                    console.warn('Bad float for default ' + key);\n                    val = null;\n                }\n            }\n        }\n        out[key] = val;\n    }\n    return out;\n}\n\n\nfunction remove_child_nodes(selection) {\n    /** Removes all child nodes from a d3 selection\n\n     */\n    var node = selection.node();\n    while (node.hasChildNodes()) {\n        node.removeChild(node.lastChild);\n    }\n}\n\n\nfunction load_css(css_path, callback) {\n    var css = \"\";\n    if (css_path) {\n        d3.text(css_path, function(error, text) {\n            if (error) {\n                console.warn(error);\n            }\n            css = text;\n            callback(css);\n        });\n    }\n    return false;\n};\nfunction update() {\n    return 'omg yes';\n};\nfunction load_the_file(t, file, callback, value) {\n    // if the value is specified, don't even need to do the ajax query\n    if (value) {\n        if (file) console.warn('File ' + file + ' overridden by value.');\n        callback.call(t, null, value, file);\n        return;\n    }\n    if (!file) {\n        callback.call(t, \"No filename\", null, file);\n        return;\n    }\n    if (ends_with(file, 'json'))\n        d3.json(file, function(e, d) { callback(e, d, file); });\n    else if (ends_with(file, 'css'))\n        d3.text(file, function(e, d) { callback(e, d, file); });\n    else\n        callback.call(t, \"Unrecognized file type\", null, file);\n    return;\n\n    // definitions\n    function ends_with(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n}\nfunction load_files(t, files_to_load, final_callback) {\n    // load multiple files asynchronously\n    // Takes a list of objects: { file: a_filename.json, callback: a_callback_fn }\n    var i = -1, remaining = files_to_load.length, callbacks = {};\n    while (++i < files_to_load.length) {\n        var this_file = files_to_load[i].file;\n        callbacks[this_file] = files_to_load[i].callback;\n        load_the_file(t,\n                      this_file,\n                      function(e, d, file) {\n                          callbacks[file].call(t, e, d);\n                          if (!--remaining) final_callback.call(t);\n                      },\n                      files_to_load[i].value);\n    }\n}\n// makeClass - By Hubert Kauker (MIT Licensed)\n// original by John Resig (MIT Licensed).\n// http://stackoverflow.com/questions/7892884/simple-class-instantiation\nfunction make_class(){\n    var isInternal;\n    var constructor = function(args){\n        if ( this instanceof constructor ) {\n            if ( typeof this.init == \"function\" ) {\n                this.init.apply( this, isInternal ? args : arguments );\n            }\n        } else {\n            isInternal = true;\n            var instance = new constructor( arguments );\n            isInternal = false;\n            return instance;\n        }\n    };\n    return constructor;\n}\n\nfunction setup_defs(svg, style) {\n    // add stylesheet\n    svg.select(\"defs\").remove();\n    var defs = svg.append(\"defs\");\n    // make sure the defs is the first node\n    var node = defs.node();\n    node.parentNode.insertBefore(node, node.parentNode.firstChild);\n    defs.append(\"style\")\n        .attr(\"type\", \"text/css\")\n        .text(style);\n    return defs;\n}\n\nfunction draw_an_object(container_sel, parent_node_selector, children_selector,\n                        object, id_key, create_function, update_function,\n                        exit_function) {\n    /** Run through the d3 data binding steps for an object. Also checks to\n     make sure none of the values in the *object* are undefined, and\n     ignores those.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     parent_node_selector: A selector string for a subselection of\n     container_sel.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object: An object to bind to the selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var draw_object = {};\n    for (var id in object) {\n        if (object[id] === undefined) {\n            console.warn('Undefined value for id ' + id + ' in object. Ignoring.');\n        } else {\n            draw_object[id] = object[id];\n        }\n    }\n\n    var sel = container_sel.select(parent_node_selector)\n            .selectAll(children_selector)\n            .data(make_array_ref(draw_object, id_key),\n                  function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction draw_a_nested_object(container_sel, children_selector, object_data_key,\n                              id_key, create_function, update_function,\n                              exit_function) {\n    /** Run through the d3 data binding steps for an object that is nested\n     within another element with d3 data.\n\n     The create_function, update_function, and exit_function CAN modify the\n     input data object.\n\n     Arguments\n     ---------\n\n     container_sel: A d3 selection containing all objects.\n\n     children_selector: A selector string for each DOM element to bind.\n\n     object_data_key: A key for the parent object containing data for the\n     new selection.\n\n     id_key: The key that will be used to store object IDs in the bound data\n     points.\n\n     create_function: A function for enter selection.\n\n     update_function: A function for update selection.\n\n     exit_function: A function for exit selection.\n\n     */\n    var sel = container_sel.selectAll(children_selector)\n            .data(function(d) {\n                return make_array_ref(d[object_data_key], id_key);\n            }, function(d) { return d[id_key]; });\n    // enter: generate and place reaction\n    if (create_function)\n        sel.enter().call(create_function);\n    // update: update when necessary\n    if (update_function)\n        sel.call(update_function);\n    // exit\n    if (exit_function)\n        sel.exit().call(exit_function);\n}\n\nfunction make_array(obj, id_key) { // is this super slow?\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = clone(obj[key]);\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction make_array_ref(obj, id_key) {\n    /** Turn the object into an array, but only by reference. Faster than\n     make_array.\n\n     */\n    var array = [];\n    for (var key in obj) {\n        // copy object\n        var it = obj[key];\n        // add key as 'id'\n        it[id_key] = key;\n        // add object to array\n        array.push(it);\n    }\n    return array;\n}\n\nfunction compare_arrays(a1, a2) {\n    /** Compares two simple (not-nested) arrays.\n\n     */\n    if (!a1 || !a2) return false;\n    if (a1.length != a2.length) return false;\n    for (var i = 0, l=a1.length; i < l; i++) {\n        if (a1[i] != a2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction array_to_object(arr) {\n    /** Convert an array of objects to an object with all keys and values\n     that are arrays of the same length as arr. Fills in spaces with null.\n\n     For example, [ { a: 1 }, { b: 2 }] becomes { a: [1, null], b: [null, 2] }.\n\n     */\n    // new object\n    var obj = {};\n    // for each element of the array\n    for (var i = 0, l = arr.length; i < l; i++) {\n        var column = arr[i],\n            keys = Object.keys(column);\n        for (var k = 0, nk = keys.length; k < nk; k++) {\n            var id = keys[k];\n            if (!(id in obj)) {\n                var n = [];\n                // fill spaces with null\n                for (var j = 0; j < l; j++) {\n                    n[j] = null;\n                }\n                n[i] = column[id];\n                obj[id] = n;\n            } else {\n                obj[id][i] = column[id];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction clone(obj) {\n    // Handles the array and object types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n    // Handle Array\n    if (obj instanceof Array) {\n        var copy = [];\n        for (var i = 0, len = obj.length; i < len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    // Handle Object\n    if (obj instanceof Object) {\n        var copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nfunction extend(obj1, obj2, overwrite) {\n    /** Extends obj1 with keys/values from obj2. Performs the extension\n     cautiously, and does not override attributes, unless the overwrite\n     argument is true.\n\n     Arguments\n     ---------\n\n     obj1: Object to extend\n\n     obj2: Object with which to extend.\n\n     overwrite: (Optional, Default false) Overwrite attributes in obj1.\n\n     */\n\n    if (overwrite === undefined)\n        overwrite = false;\n\n    for (var attrname in obj2) {\n        if (!(attrname in obj1) || overwrite) // UNIT TEST This\n            obj1[attrname] = obj2[attrname];\n        else\n            throw new Error('Attribute ' + attrname + ' already in object.');\n    }\n}\n\nfunction unique_concat(arrays) {\n    var new_array = [];\n    arrays.forEach(function (a) {\n        a.forEach(function(x) {\n            if (new_array.indexOf(x) < 0)\n                new_array.push(x);\n        });\n    });\n    return new_array;\n}\n\nfunction unique_strings_array(arr) {\n    /** Return unique values in array of strings.\n\n     http://stackoverflow.com/questions/1960473/unique-values-in-an-array\n\n     */\n    var a = [];\n    for (var i = 0, l = arr.length; i < l; i++)\n        if (a.indexOf(arr[i]) === -1)\n            a.push(arr[i]);\n    return a;\n}\n\nfunction debounce(func, wait, immediate) {\n    /** Returns a function, that, as long as it continues to be invoked, will\n     not be triggered.\n\n     The function will be called after it stops being called for N\n     milliseconds. If `immediate` is passed, trigger the function on the leading\n     edge, instead of the trailing.\n\n     */\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\nfunction object_slice_for_ids(obj, ids) {\n    /** Return a copy of the object with just the given ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = clone(obj[ids[i]]);\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction object_slice_for_ids_ref(obj, ids) {\n    /** Return a reference of the object with just the given ids. Faster\n     than object_slice_for_ids.\n\n     Arguments\n     ---------\n\n     obj: An object.\n\n     ids: An array of id strings.\n\n     */\n    var subset = {}, i = -1;\n    while (++i<ids.length) {\n        subset[ids[i]] = obj[ids[i]];\n    }\n    if (ids.length != Object.keys(subset).length) {\n        console.warn('did not find correct reaction subset');\n    }\n    return subset;\n}\n\nfunction c_plus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x + coords2.x,\n             \"y\": coords1.y + coords2.y };\n}\nfunction c_minus_c(coords1, coords2) {\n    if (coords1 === null || coords2 === null ||\n        coords1 === undefined || coords2 === undefined)\n        return null;\n    return { \"x\": coords1.x - coords2.x,\n             \"y\": coords1.y - coords2.y };\n}\n\nfunction c_times_scalar(coords, scalar) {\n    return { \"x\": coords.x * scalar,\n             \"y\": coords.y * scalar };\n}\n\nfunction download_json(json, name) {\n    /** Download json file in a blob.\n\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    var j = JSON.stringify(json),\n        blob = new Blob([j], {type: \"application/json\"});\n    saveAs(blob, name + '.json');\n}\n\nfunction load_json(f, callback, pre_fn, failure_fn) {\n    /** Try to load the file as JSON.\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     */\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n\n    var reader = new window.FileReader();\n    // Closure to capture the file information.\n    reader.onload = function(event) {\n        var result = event.target.result,\n            data;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            // if it failed, return the error\n            callback(e, null);\n            return;\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.readAsText(f);\n}\n\nfunction load_json_or_csv(f, csv_converter, callback, pre_fn, failure_fn,\n                          debug_event) {\n    /** Try to load the file as JSON or CSV (JSON first).\n\n     Arguments\n     ---------\n\n     f: The file path\n\n     csv_converter: A function to convert the CSV output to equivalent JSON.\n\n     callback: A callback function that accepts arguments: error, data.\n\n     pre_fn: (optional) A function to call before loading the data.\n\n     failure_fn: (optional) A function to call if the load fails or is aborted.\n\n     debug_event: (optional) An event, with a string at event.target.result, to\n     load as though it was the contents of a loaded file.\n\n     */\n\n    // Capture the file information.\n    var onload_function = function(event) {\n        var result = event.target.result,\n            data, errors;\n        // try JSON\n        try {\n            data = JSON.parse(result);\n        } catch (e) {\n            errors = 'JSON error: ' + e;\n\n            // try csv\n            try {\n                data = csv_converter(d3.csv.parseRows(result));\n            } catch (e) {\n                // if both failed, return the errors\n                callback(errors + '\\nCSV error: ' + e, null);\n                return;\n            }\n        }\n        // if successful, return the data\n        callback(null, data);\n    };\n    if (debug_event !== undefined && debug_event !== null) {\n        console.warn('Debugging load_json_or_csv');\n        return onload_function(debug_event);\n    }\n\n    // Check for the various File API support.\n    if (!(window.File && window.FileReader && window.FileList && window.Blob))\n        callback(\"The File APIs are not fully supported in this browser.\", null);\n    var reader = new window.FileReader();\n\n    if (pre_fn !== undefined && pre_fn !== null) {\n        try { pre_fn(); }\n        catch (e) { console.warn(e); }\n    }\n    reader.onabort = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    reader.onerror = function(event) {\n        try { failure_fn(); }\n        catch (e) { console.warn(e); }\n    };\n    // Read in the image file as a data URL.\n    reader.onload = onload_function;\n    reader.readAsText(f);\n}\n\nfunction download_svg(name, svg_sel, do_beautify) {\n    /** Download an svg file using FileSaver.js.\n     *\n     * Arguments\n     * ---------\n     *\n     * name: The filename (without extension).\n     *\n     * svg_sel: The d3 selection for the SVG element.\n     *\n     * do_beautify: (Boolean) If true, then beautify the SVG output.\n     *\n     */\n\n    // alert if blob isn't going to work\n    _check_filesaver();\n\n    // make the xml string\n    var xml = (new XMLSerializer()).serializeToString(svg_sel.node());\n    if (do_beautify) xml = vkbeautify.xml(xml);\n    xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n \\\n            <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n \\\n        \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' + xml;\n\n    // save\n    var blob = new Blob([xml], {type: \"image/svg+xml\"});\n    saveAs(blob, name + '.svg');\n};\n\nfunction rotate_coords_recursive(coords_array, angle, center) {\n    var rot = function(c) { return rotate_coords(c, angle, center); };\n    return coords_array.map(rot);\n}\n\nfunction rotate_coords(c, angle, center) {\n    /** Calculates displacement { x: dx, y: dy } based on rotating point c around\n     center with angle.\n\n     */\n    var dx = Math.cos(-angle) * (c.x - center.x) +\n            Math.sin(-angle) * (c.y - center.y)\n            + center.x - c.x,\n        dy = - Math.sin(-angle) * (c.x - center.x) +\n            Math.cos(-angle) * (c.y - center.y)\n            + center.y - c.y;\n    return { x: dx, y: dy };\n}\n\nfunction get_angle(coords) {\n    /* Takes an array of 2 coordinate objects {\"x\": 1, \"y\": 1}\n     *\n     * Returns angle between 0 and 2PI.\n     */\n    var denominator = coords[1].x - coords[0].x,\n        numerator = coords[1].y - coords[0].y;\n    if (denominator==0 && numerator >= 0) return Math.PI/2;\n    else if (denominator==0 && numerator < 0) return 3*Math.PI/2;\n    else if (denominator >= 0 && numerator >= 0) return Math.atan(numerator/denominator);\n    else if (denominator >= 0) return (Math.atan(numerator/denominator) + 2*Math.PI);\n    else return (Math.atan(numerator/denominator) + Math.PI);\n}\n\nfunction to_degrees(radians) { return radians*180/Math.PI; }\n\nfunction angle_for_event(displacement, point, center) {\n    var gamma =  Math.atan2((point.x - center.x), (center.y - point.y)),\n        beta = Math.atan2((point.x - center.x + displacement.x),\n                          (center.y - point.y - displacement.y)),\n        angle = beta - gamma;\n    return angle;\n}\n\nfunction distance(start, end) { return Math.sqrt(Math.pow(end.y-start.y, 2) + Math.pow(end.x-start.x, 2)); }\n\nfunction check_undefined(args, names) {\n    /** Report an error if any of the arguments are undefined.\n\n     Call by passing in *arguments* from any function and an array of\n     argument names.\n\n     */\n    names.map(function(name, i) {\n        if (args[i]===undefined) {\n            console.error('Argument is undefined: '+String(names[i]));\n        }\n    });\n}\n\nfunction compartmentalize(bigg_id, compartment_id) {\n    return bigg_id + '_' + compartment_id;\n}\n\n\n// definitions\nfunction decompartmentalize(id) {\n    /** Convert ids to bigg_id and compartment_id.\n\n     */\n    var out = no_compartment(id);\n    if (out===null) out = [id, null];\n    return out;\n\n    // definitions\n    function no_compartment(id) {\n        /** Returns an array of [bigg_id, compartment id].\n\n         Matches compartment ids with length 1 or 2.\n\n         Return null if no match is found.\n\n         */\n        var reg = /(.*)_([a-z0-9]{1,2})$/,\n            result = reg.exec(id);\n        if (result===null) return null;\n        return result.slice(1,3);\n    }\n}\n\nfunction mean(array) {\n    var sum = array.reduce(function(a, b) { return a + b; });\n    var avg = sum / array.length;\n    return avg;\n}\n\nfunction median(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if(array.length % 2 == 1)\n        return array[half];\n    else\n        return (array[half-1] + array[half]) / 2.0;\n}\n\nfunction quartiles(array) {\n    array.sort(function(a, b) { return a - b; });\n    var half = Math.floor(array.length / 2);\n    if (array.length == 1)\n        return [ array[0], array[0], array[0] ];\n    else if (array.length % 2 == 1)\n        return [ median(array.slice(0, half)),\n                 array[half],\n                 median(array.slice(half + 1)) ];\n    else\n        return [ median(array.slice(0, half)),\n                 (array[half-1] + array[half]) / 2.0,\n                 median(array.slice(half)) ];\n}\n\nfunction random_characters(num) {\n    // Thanks to @csharptest.net\n    // http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript\n    var text = '',\n        possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < num; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    return text;\n}\n\nfunction generate_map_id() {\n    return random_characters(12);\n}\n\nfunction check_for_parent_tag(el, tag) {\n    /** Check that the selection has the given parent tag.\n\n     el: A d3 selection or node.\n\n     tag: A tag name (case insensitive)\n\n     */\n    // make sure it is a node\n    if (el instanceof Array)\n        el = el.node();\n    while (el.parentNode !== null) {\n        el = el.parentNode;\n        if (el.tagName === undefined) continue;\n        if (el.tagName.toLowerCase() === tag.toLowerCase())\n            return true;\n    }\n    return false;\n}\n\nfunction name_to_url(name, download_url) {\n    /** Convert model or map name to url.\n\n     Arguments\n     ---------\n\n     name: The short name, e.g. e_coli.iJO1366.central_metabolism.\n\n     download_url: The url to prepend (optional).\n\n     */\n\n    if (download_url !== undefined && download_url !== null) {\n        // strip download_url\n        download_url = download_url.replace(/^\\/|\\/$/g, '');\n        name = [download_url, name].join('/');\n    }\n    // strip final path\n    return name.replace(/^\\/|\\/$/g, '') + '.json';\n}\n\nfunction parse_url_components(the_window, options) {\n    /** Parse the URL and return options based on the URL arguments.\n\n     Arguments\n     ---------\n\n     the_window: A reference to the global window.\n\n     options: (optional) an existing options object to which new options\n     will be added. Overwrites existing arguments in options.\n\n     Adapted from http://stackoverflow.com/questions/979975/how-to-get-the-value-from-url-parameter\n\n     */\n    if (options===undefined) options = {};\n\n    var query = the_window.location.search.substring(1),\n        vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\"),\n            val = decodeURIComponent(pair[1]);\n        // deal with array options\n        if (pair[0].indexOf('[]') == pair[0].length - 2) {\n            var o = pair[0].replace('[]', '');\n            if (!(o in options))\n                options[o] = [];\n            options[o].push(val);\n        } else {\n            options[pair[0]] = val;\n        }\n    }\n    return options;\n}\n\n\nfunction get_document(node) {\n    /** Get the document for the node */\n    return node.ownerDocument;\n}\n\n\nfunction get_window(node) {\n    /** Get the window for the node */\n    return get_document(node).defaultView;\n}\n\n\nfunction d3_transform_catch(transform_attr) {\n    /** Return the result of d3.transform, but catch errors if we are in\n     node/jsdom. See also https://github.com/mbostock/d3/issues/1545\n\n     */\n    try {\n        return d3.transform(transform_attr);\n    } catch (err) {\n        console.error('Cannot run d3.transform, probably becuase this is a node/jsdom test. ' +\n                      'Returning a tranform object for testing.');\n        return { translate: [0, 0], rotate: 0 };\n    }\n}\n","(function() {\nvar _slice = Array.prototype.slice;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nvar Bacon = {\n  toString: function () {\n    return \"Bacon\";\n  }\n};\n\nBacon.version = '0.7.82';\n\nvar Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\nvar nop = function () {};\nvar latter = function (_, x) {\n  return x;\n};\nvar former = function (x, _) {\n  return x;\n};\nvar cloneArray = function (xs) {\n  return xs.slice(0);\n};\nvar assert = function (message, condition) {\n  if (!condition) {\n    throw new Exception(message);\n  }\n};\nvar assertObservableIsProperty = function (x) {\n  if ((x != null ? x._isObservable : void 0) && !(x != null ? x._isProperty : void 0)) {\n    throw new Exception(\"Observable is not a Property : \" + x);\n  }\n};\nvar assertEventStream = function (event) {\n  if (!(event != null ? event._isEventStream : void 0)) {\n    throw new Exception(\"not an EventStream : \" + event);\n  }\n};\n\nvar assertObservable = function (event) {\n  if (!(event != null ? event._isObservable : void 0)) {\n    throw new Exception(\"not an Observable : \" + event);\n  }\n};\nvar assertFunction = function (f) {\n  return assert(\"not a function : \" + f, _.isFunction(f));\n};\nvar isArray = function (xs) {\n  return xs instanceof Array;\n};\nvar isObservable = function (x) {\n  return x && x._isObservable;\n};\nvar assertArray = function (xs) {\n  if (!isArray(xs)) {\n    throw new Exception(\"not an array : \" + xs);\n  }\n};\nvar assertNoArguments = function (args) {\n  return assert(\"no arguments supported\", args.length === 0);\n};\nvar assertString = function (x) {\n  if (typeof x === \"string\") {\n    throw new Exception(\"not a string : \" + x);\n  }\n};\n\nvar extend = function (target) {\n  var length = arguments.length;\n  for (var i = 1; 1 < length ? i < length : i > length; 1 < length ? i++ : i--) {\n    for (var prop in arguments[i]) {\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n};\n\nvar inherit = function (child, parent) {\n  var hasProp = ({}).hasOwnProperty;\n  var ctor = function () {};\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  return child;\n};\n\nvar _ = {\n  indexOf: (function () {\n    if (Array.prototype.indexOf) {\n      return function (xs, x) {\n        return xs.indexOf(x);\n      };\n    } else {\n      return function (xs, x) {\n        for (var i = 0, y; i < xs.length; i++) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      };\n    }\n  })(),\n  indexWhere: function (xs, f) {\n    for (var i = 0, y; i < xs.length; i++) {\n      y = xs[i];\n      if (f(y)) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  head: function (xs) {\n    return xs[0];\n  },\n  always: function (x) {\n    return function () {\n      return x;\n    };\n  },\n  negate: function (f) {\n    return function (x) {\n      return !f(x);\n    };\n  },\n  empty: function (xs) {\n    return xs.length === 0;\n  },\n  tail: function (xs) {\n    return xs.slice(1, xs.length);\n  },\n  filter: function (f, xs) {\n    var filtered = [];\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        filtered.push(x);\n      }\n    }\n    return filtered;\n  },\n  map: function (f, xs) {\n    return (function () {\n      var result = [];\n      for (var i = 0, x; i < xs.length; i++) {\n        x = xs[i];\n        result.push(f(x));\n      }\n      return result;\n    })();\n  },\n  each: function (xs, f) {\n    for (var key in xs) {\n      if (Object.prototype.hasOwnProperty.call(xs, key)) {\n        var value = xs[key];\n        f(key, value);\n      }\n    }\n  },\n  toArray: function (xs) {\n    return isArray(xs) ? xs : [xs];\n  },\n  contains: function (xs, x) {\n    return _.indexOf(xs, x) !== -1;\n  },\n  id: function (x) {\n    return x;\n  },\n  last: function (xs) {\n    return xs[xs.length - 1];\n  },\n  all: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (!f(x)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  any: function (xs) {\n    var f = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  without: function (x, xs) {\n    return _.filter(function (y) {\n      return y !== x;\n    }, xs);\n  },\n  remove: function (x, xs) {\n    var i = _.indexOf(xs, x);\n    if (i >= 0) {\n      return xs.splice(i, 1);\n    }\n  },\n  fold: function (xs, seed, f) {\n    for (var i = 0, x; i < xs.length; i++) {\n      x = xs[i];\n      seed = f(seed, x);\n    }\n    return seed;\n  },\n  flatMap: function (f, xs) {\n    return _.fold(xs, [], function (ys, x) {\n      return ys.concat(f(x));\n    });\n  },\n  cached: function (f) {\n    var value = None;\n    return function () {\n      if (typeof value !== \"undefined\" && value !== null ? value._isNone : undefined) {\n        value = f();\n        f = undefined;\n      }\n      return value;\n    };\n  },\n  bind: function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n  isFunction: function (f) {\n    return typeof f === \"function\";\n  },\n  toString: function (obj) {\n    var internals, key, value;\n    var hasProp = ({}).hasOwnProperty;\n    try {\n      recursionDepth++;\n      if (obj == null) {\n        return \"undefined\";\n      } else if (_.isFunction(obj)) {\n        return \"function\";\n      } else if (isArray(obj)) {\n        if (recursionDepth > 5) {\n          return \"[..]\";\n        }\n        return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n      } else if ((obj != null ? obj.toString : void 0) != null && obj.toString !== Object.prototype.toString) {\n        return obj.toString();\n      } else if (typeof obj === \"object\") {\n        if (recursionDepth > 5) {\n          return \"{..}\";\n        }\n        internals = (function () {\n          var results = [];\n          for (key in obj) {\n            if (!hasProp.call(obj, key)) continue;\n            value = (function () {\n              var error;\n              try {\n                return obj[key];\n              } catch (error) {\n                return error;\n              }\n            })();\n            results.push(_.toString(key) + \":\" + _.toString(value));\n          }\n          return results;\n        })();\n        return \"{\" + internals + \"}\";\n      } else {\n        return obj;\n      }\n    } finally {\n      recursionDepth--;\n    }\n  }\n};\n\nvar recursionDepth = 0;\n\nBacon._ = _;\n\nvar UpdateBarrier = Bacon.UpdateBarrier = (function () {\n  var rootEvent;\n  var waiterObs = [];\n  var waiters = {};\n  var afters = [];\n  var aftersIndex = 0;\n  var flushed = {};\n\n  var afterTransaction = function (f) {\n    if (rootEvent) {\n      return afters.push(f);\n    } else {\n      return f();\n    }\n  };\n\n  var whenDoneWith = function (obs, f) {\n    if (rootEvent) {\n      var obsWaiters = waiters[obs.id];\n      if (!(typeof obsWaiters !== \"undefined\" && obsWaiters !== null)) {\n        obsWaiters = waiters[obs.id] = [f];\n        return waiterObs.push(obs);\n      } else {\n        return obsWaiters.push(f);\n      }\n    } else {\n      return f();\n    }\n  };\n\n  var flush = function () {\n    while (waiterObs.length > 0) {\n      flushWaiters(0, true);\n    }\n    flushed = {};\n  };\n\n  var flushWaiters = function (index, deps) {\n    var obs = waiterObs[index];\n    var obsId = obs.id;\n    var obsWaiters = waiters[obsId];\n    waiterObs.splice(index, 1);\n    delete waiters[obsId];\n    if (deps && waiterObs.length > 0) {\n      flushDepsOf(obs);\n    }\n    for (var i = 0, f; i < obsWaiters.length; i++) {\n      f = obsWaiters[i];\n      f();\n    }\n  };\n\n  var flushDepsOf = function (obs) {\n    if (flushed[obs.id]) return;\n    var deps = obs.internalDeps();\n    for (var i = 0, dep; i < deps.length; i++) {\n      dep = deps[i];\n      flushDepsOf(dep);\n      if (waiters[dep.id]) {\n        var index = _.indexOf(waiterObs, dep);\n        flushWaiters(index, false);\n      }\n    }\n    flushed[obs.id] = true;\n  };\n\n  var inTransaction = function (event, context, f, args) {\n    if (rootEvent) {\n      return f.apply(context, args);\n    } else {\n      rootEvent = event;\n      try {\n        var result = f.apply(context, args);\n\n        flush();\n      } finally {\n        rootEvent = undefined;\n        while (aftersIndex < afters.length) {\n          var after = afters[aftersIndex];\n          aftersIndex++;\n          after();\n        }\n        aftersIndex = 0;\n        afters = [];\n      }\n      return result;\n    }\n  };\n\n  var currentEventId = function () {\n    return rootEvent ? rootEvent.id : undefined;\n  };\n\n  var wrappedSubscribe = function (obs, sink) {\n    var unsubd = false;\n    var shouldUnsub = false;\n    var doUnsub = function () {\n      shouldUnsub = true;\n      return shouldUnsub;\n    };\n    var unsub = function () {\n      unsubd = true;\n      return doUnsub();\n    };\n    doUnsub = obs.dispatcher.subscribe(function (event) {\n      return afterTransaction(function () {\n        if (!unsubd) {\n          var reply = sink(event);\n          if (reply === Bacon.noMore) {\n            return unsub();\n          }\n        }\n      });\n    });\n    if (shouldUnsub) {\n      doUnsub();\n    }\n    return unsub;\n  };\n\n  var hasWaiters = function () {\n    return waiterObs.length > 0;\n  };\n\n  return { whenDoneWith: whenDoneWith, hasWaiters: hasWaiters, inTransaction: inTransaction, currentEventId: currentEventId, wrappedSubscribe: wrappedSubscribe, afterTransaction: afterTransaction };\n})();\n\nfunction Source(obs, sync) {\n  var lazy = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  this.obs = obs;\n  this.sync = sync;\n  this.lazy = lazy;\n  this.queue = [];\n}\n\nextend(Source.prototype, {\n  _isSource: true,\n\n  subscribe: function (sink) {\n    return this.obs.dispatcher.subscribe(sink);\n  },\n  toString: function () {\n    return this.obs.toString();\n  },\n  markEnded: function () {\n    this.ended = true;\n    return true;\n  },\n  consume: function () {\n    if (this.lazy) {\n      return { value: _.always(this.queue[0]) };\n    } else {\n      return this.queue[0];\n    }\n  },\n  push: function (x) {\n    this.queue = [x];\n    return [x];\n  },\n  mayHave: function () {\n    return true;\n  },\n  hasAtLeast: function () {\n    return this.queue.length;\n  },\n  flatten: true\n});\n\nfunction ConsumingSource() {\n  Source.apply(this, arguments);\n}\n\ninherit(ConsumingSource, Source);\nextend(ConsumingSource.prototype, {\n  consume: function () {\n    return this.queue.shift();\n  },\n  push: function (x) {\n    return this.queue.push(x);\n  },\n  mayHave: function (c) {\n    return !this.ended || this.queue.length >= c;\n  },\n  hasAtLeast: function (c) {\n    return this.queue.length >= c;\n  },\n  flatten: false\n});\n\nfunction BufferingSource(obs) {\n  Source.call(this, obs, true);\n}\n\ninherit(BufferingSource, Source);\nextend(BufferingSource.prototype, {\n  consume: function () {\n    var values = this.queue;\n    this.queue = [];\n    return {\n      value: function () {\n        return values;\n      }\n    };\n  },\n  push: function (x) {\n    return this.queue.push(x.value());\n  },\n  hasAtLeast: function () {\n    return true;\n  }\n});\n\nSource.isTrigger = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s.sync;\n  } else {\n    return s != null ? s._isEventStream : void 0;\n  }\n};\n\nSource.fromObservable = function (s) {\n  if (s != null ? s._isSource : void 0) {\n    return s;\n  } else if (s != null ? s._isProperty : void 0) {\n    return new Source(s, false);\n  } else {\n    return new ConsumingSource(s, true);\n  }\n};\n\nfunction Desc(context, method, args) {\n  this.context = context;\n  this.method = method;\n  this.args = args;\n}\n\nextend(Desc.prototype, {\n  _isDesc: true,\n  deps: function () {\n    if (!this.cached) {\n      this.cached = findDeps([this.context].concat(this.args));\n    }\n    return this.cached;\n  },\n  toString: function () {\n    return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n  }\n});\n\nvar describe = function (context, method) {\n  var ref = context || method;\n  if (ref && ref._isDesc) {\n    return context || method;\n  } else {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return new Desc(context, method, args);\n  }\n};\n\nvar withDesc = function (desc, obs) {\n  obs.desc = desc;\n  return obs;\n};\n\nvar findDeps = function (x) {\n  if (isArray(x)) {\n    return _.flatMap(findDeps, x);\n  } else if (isObservable(x)) {\n    return [x];\n  } else if (typeof x !== \"undefined\" && x !== null ? x._isSource : undefined) {\n    return [x.obs];\n  } else {\n    return [];\n  }\n};\n\nBacon.Desc = Desc;\nBacon.Desc.empty = new Bacon.Desc(\"\", \"\", []);\n\nvar withMethodCallSupport = function (wrapped) {\n  return function (f) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof f === \"object\" && args.length) {\n      var context = f;\n      var methodName = args[0];\n      f = function () {\n        return context[methodName].apply(context, arguments);\n      };\n      args = args.slice(1);\n    }\n    return wrapped.apply(undefined, [f].concat(_toConsumableArray(args)));\n  };\n};\n\nvar makeFunctionArgs = function (args) {\n  args = Array.prototype.slice.call(args);\n  return makeFunction_.apply(undefined, _toConsumableArray(args));\n};\n\nvar partiallyApplied = function (f, applied) {\n  return function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return f.apply(undefined, _toConsumableArray(applied.concat(args)));\n  };\n};\n\nvar toSimpleExtractor = function (args) {\n  return function (key) {\n    return function (value) {\n      if (!(typeof value !== \"undefined\" && value !== null)) {\n        return;\n      } else {\n        var fieldValue = value[key];\n        if (_.isFunction(fieldValue)) {\n          return fieldValue.apply(value, args);\n        } else {\n          return fieldValue;\n        }\n      }\n    };\n  };\n};\n\nvar toFieldExtractor = function (f, args) {\n  var parts = f.slice(1).split(\".\");\n  var partFuncs = _.map(toSimpleExtractor(args), parts);\n  return function (value) {\n    for (var i = 0, f; i < partFuncs.length; i++) {\n      f = partFuncs[i];\n      value = f(value);\n    }\n    return value;\n  };\n};\n\nvar isFieldKey = function (f) {\n  return typeof f === \"string\" && f.length > 1 && f.charAt(0) === \".\";\n};\n\nvar makeFunction_ = withMethodCallSupport(function (f) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  if (_.isFunction(f)) {\n    if (args.length) {\n      return partiallyApplied(f, args);\n    } else {\n      return f;\n    }\n  } else if (isFieldKey(f)) {\n    return toFieldExtractor(f, args);\n  } else {\n    return _.always(f);\n  }\n});\n\nvar makeFunction = function (f, args) {\n  return makeFunction_.apply(undefined, [f].concat(_toConsumableArray(args)));\n};\n\nvar convertArgsToFunction = function (obs, f, args, method) {\n  if (typeof f !== \"undefined\" && f !== null ? f._isProperty : undefined) {\n    var sampled = f.sampledBy(obs, function (p, s) {\n      return [p, s];\n    });\n    return method.call(sampled, function (_ref) {\n      var p = _ref[0];\n      var s = _ref[1];\n      return p;\n    }).map(function (_ref2) {\n      var p = _ref2[0];\n      var s = _ref2[1];\n      return s;\n    });\n  } else {\n    f = makeFunction(f, args);\n    return method.call(obs, f);\n  }\n};\n\nvar toCombinator = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else if (isFieldKey(f)) {\n    var key = toFieldKey(f);\n    return function (left, right) {\n      return left[key](right);\n    };\n  } else {\n    throw new Exception(\"not a function or a field key: \" + f);\n  }\n};\n\nvar toFieldKey = function (f) {\n  return f.slice(1);\n};\n\nfunction Some(value) {\n  this.value = value;\n}\n\nextend(Some.prototype, {\n  _isSome: true,\n  getOrElse: function () {\n    return this.value;\n  },\n  get: function () {\n    return this.value;\n  },\n  filter: function (f) {\n    if (f(this.value)) {\n      return new Some(this.value);\n    } else {\n      return None;\n    }\n  },\n  map: function (f) {\n    return new Some(f(this.value));\n  },\n  forEach: function (f) {\n    return f(this.value);\n  },\n  isDefined: true,\n  toArray: function () {\n    return [this.value];\n  },\n  inspect: function () {\n    return \"Some(\" + this.value + \")\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n});\n\nvar None = {\n  _isNone: true,\n  getOrElse: function (value) {\n    return value;\n  },\n  filter: function () {\n    return None;\n  },\n  map: function () {\n    return None;\n  },\n  forEach: function () {},\n  isDefined: false,\n  toArray: function () {\n    return [];\n  },\n  inspect: function () {\n    return \"None\";\n  },\n  toString: function () {\n    return this.inspect();\n  }\n};\n\nvar toOption = function (v) {\n  if ((typeof v !== \"undefined\" && v !== null ? v._isSome : undefined) || (typeof v !== \"undefined\" && v !== null ? v._isNone : undefined)) {\n    return v;\n  } else {\n    return new Some(v);\n  }\n};\n\nBacon.noMore = \"<no-more>\";\nBacon.more = \"<more>\";\n\nvar eventIdCounter = 0;\n\nfunction Event() {\n  this.id = ++eventIdCounter;\n}\n\nEvent.prototype._isEvent = true;\nEvent.prototype.isEvent = function () {\n  return true;\n};\nEvent.prototype.isEnd = function () {\n  return false;\n};\nEvent.prototype.isInitial = function () {\n  return false;\n};\nEvent.prototype.isNext = function () {\n  return false;\n};\nEvent.prototype.isError = function () {\n  return false;\n};\nEvent.prototype.hasValue = function () {\n  return false;\n};\nEvent.prototype.filter = function () {\n  return true;\n};\nEvent.prototype.inspect = function () {\n  return this.toString();\n};\nEvent.prototype.log = function () {\n  return this.toString();\n};\n\nfunction Next(valueF, eager) {\n  if (!(this instanceof Next)) {\n    return new Next(valueF, eager);\n  }\n\n  Event.call(this);\n\n  if (!eager && _.isFunction(valueF) || (valueF != null ? valueF._isNext : void 0)) {\n    this.valueF = valueF;\n    this.valueInternal = void 0;\n  } else {\n    this.valueF = void 0;\n    this.valueInternal = valueF;\n  }\n}\n\ninherit(Next, Event);\n\nNext.prototype.isNext = function () {\n  return true;\n};\nNext.prototype.hasValue = function () {\n  return true;\n};\nNext.prototype.value = function () {\n  var ref;\n  if ((ref = this.valueF) != null ? ref._isNext : void 0) {\n    this.valueInternal = this.valueF.value();\n    this.valueF = void 0;\n  } else if (this.valueF) {\n    this.valueInternal = this.valueF();\n    this.valueF = void 0;\n  }\n  return this.valueInternal;\n};\n\nNext.prototype.fmap = function (f) {\n  var event, value;\n  if (this.valueInternal) {\n    value = this.valueInternal;\n    return this.apply(function () {\n      return f(value);\n    });\n  } else {\n    event = this;\n    return this.apply(function () {\n      return f(event.value());\n    });\n  }\n};\n\nNext.prototype.apply = function (value) {\n  return new Next(value);\n};\nNext.prototype.filter = function (f) {\n  return f(this.value());\n};\nNext.prototype.toString = function () {\n  return _.toString(this.value());\n};\nNext.prototype.log = function () {\n  return this.value();\n};\nNext.prototype._isNext = true;\n\nfunction Initial(valueF, eager) {\n  if (!(this instanceof Initial)) {\n    return new Initial(valueF, eager);\n  }\n  Next.call(this, valueF, eager);\n}\n\ninherit(Initial, Next);\nInitial.prototype._isInitial = true;\nInitial.prototype.isInitial = function () {\n  return true;\n};\nInitial.prototype.isNext = function () {\n  return false;\n};\nInitial.prototype.apply = function (value) {\n  return new Initial(value);\n};\nInitial.prototype.toNext = function () {\n  return new Next(this);\n};\n\nfunction End() {\n  if (!(this instanceof End)) {\n    return new End();\n  }\n  Event.call(this);\n}\n\ninherit(End, Event);\nEnd.prototype.isEnd = function () {\n  return true;\n};\nEnd.prototype.fmap = function () {\n  return this;\n};\nEnd.prototype.apply = function () {\n  return this;\n};\nEnd.prototype.toString = function () {\n  return \"<end>\";\n};\n\nfunction Error(error) {\n  if (!(this instanceof Error)) {\n    return new Error(error);\n  }\n  this.error = error;\n  Event.call(this);\n}\n\ninherit(Error, Event);\nError.prototype.isError = function () {\n  return true;\n};\nError.prototype.fmap = function () {\n  return this;\n};\nError.prototype.apply = function () {\n  return this;\n};\nError.prototype.toString = function () {\n  return \"<error> \" + _.toString(this.error);\n};\n\nBacon.Event = Event;\nBacon.Initial = Initial;\nBacon.Next = Next;\nBacon.End = End;\nBacon.Error = Error;\n\nvar initialEvent = function (value) {\n  return new Initial(value, true);\n};\nvar nextEvent = function (value) {\n  return new Next(value, true);\n};\nvar endEvent = function () {\n  return new End();\n};\nvar toEvent = function (x) {\n  if (x && x._isEvent) {\n    return x;\n  } else {\n    return nextEvent(x);\n  }\n};\n\nvar idCounter = 0;\nvar registerObs = function () {};\n\nfunction Observable(desc) {\n  this.desc = desc;\n  this.id = ++idCounter;\n  this.initialDesc = this.desc;\n}\n\nextend(Observable.prototype, {\n  _isObservable: true,\n\n  subscribe: function (sink) {\n    return UpdateBarrier.wrappedSubscribe(this, sink);\n  },\n\n  subscribeInternal: function (sink) {\n    return this.dispatcher.subscribe(sink);\n  },\n\n  onValue: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.hasValue()) {\n        return f(event.value());\n      }\n    });\n  },\n\n  onValues: function (f) {\n    return this.onValue(function (args) {\n      return f.apply(undefined, _toConsumableArray(args));\n    });\n  },\n\n  onError: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isError()) {\n        return f(event.error);\n      }\n    });\n  },\n\n  onEnd: function () {\n    var f = makeFunctionArgs(arguments);\n    return this.subscribe(function (event) {\n      if (event.isEnd()) {\n        return f();\n      }\n    });\n  },\n\n  name: function (name) {\n    this._name = name;\n    return this;\n  },\n\n  withDescription: function () {\n    this.desc = describe.apply(undefined, arguments);\n    return this;\n  },\n\n  toString: function () {\n    if (this._name) {\n      return this._name;\n    } else {\n      return this.desc.toString();\n    }\n  },\n\n  internalDeps: function () {\n    return this.initialDesc.deps();\n  }\n});\n\nObservable.prototype.assign = Observable.prototype.onValue;\nObservable.prototype.forEach = Observable.prototype.onValue;\nObservable.prototype.inspect = Observable.prototype.toString;\n\nBacon.Observable = Observable;\n\nfunction CompositeUnsubscribe() {\n  var ss = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n  this.unsubscribe = _.bind(this.unsubscribe, this);\n  this.unsubscribed = false;\n  this.subscriptions = [];\n  this.starting = [];\n  for (var i = 0, s; i < ss.length; i++) {\n    s = ss[i];\n    this.add(s);\n  }\n}\n\nextend(CompositeUnsubscribe.prototype, {\n  add: function (subscription) {\n    var _this2 = this;\n\n    if (this.unsubscribed) {\n      return;\n    }\n    var ended = false;\n    var unsub = nop;\n    this.starting.push(subscription);\n    var unsubMe = function () {\n      if (_this2.unsubscribed) {\n        return;\n      }\n      ended = true;\n      _this2.remove(unsub);\n      return _.remove(subscription, _this2.starting);\n    };\n    unsub = subscription(this.unsubscribe, unsubMe);\n    if (!(this.unsubscribed || ended)) {\n      this.subscriptions.push(unsub);\n    } else {\n      unsub();\n    }\n    _.remove(subscription, this.starting);\n    return unsub;\n  },\n\n  remove: function (unsub) {\n    if (this.unsubscribed) {\n      return;\n    }\n    if (_.remove(unsub, this.subscriptions) !== undefined) {\n      return unsub();\n    }\n  },\n\n  unsubscribe: function () {\n    if (this.unsubscribed) {\n      return;\n    }\n    this.unsubscribed = true;\n    var iterable = this.subscriptions;\n    for (var i = 0; i < iterable.length; i++) {\n      iterable[i]();\n    }\n    this.subscriptions = [];\n    this.starting = [];\n    return [];\n  },\n\n  count: function () {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.subscriptions.length + this.starting.length;\n  },\n\n  empty: function () {\n    return this.count() === 0;\n  }\n});\n\nBacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\nfunction Dispatcher(_subscribe, _handleEvent) {\n  this._subscribe = _subscribe;\n  this._handleEvent = _handleEvent;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.handleEvent = _.bind(this.handleEvent, this);\n  this.pushing = false;\n  this.ended = false;\n  this.prevError = undefined;\n  this.unsubSrc = undefined;\n  this.subscriptions = [];\n  this.queue = [];\n}\n\nDispatcher.prototype.hasSubscribers = function () {\n  return this.subscriptions.length > 0;\n};\n\nDispatcher.prototype.removeSub = function (subscription) {\n  this.subscriptions = _.without(subscription, this.subscriptions);\n  return this.subscriptions;\n};\n\nDispatcher.prototype.push = function (event) {\n  if (event.isEnd()) {\n    this.ended = true;\n  }\n  return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n};\n\nDispatcher.prototype.pushToSubscriptions = function (event) {\n  try {\n    var tmp = this.subscriptions;\n    var len = tmp.length;\n    for (var i = 0; i < len; i++) {\n      var sub = tmp[i];\n      var reply = sub.sink(event);\n      if (reply === Bacon.noMore || event.isEnd()) {\n        this.removeSub(sub);\n      }\n    }\n    return true;\n  } catch (error) {\n    this.pushing = false;\n    this.queue = [];\n    throw error;\n  }\n};\n\nDispatcher.prototype.pushIt = function (event) {\n  if (!this.pushing) {\n    if (event === this.prevError) {\n      return;\n    }\n    if (event.isError()) {\n      this.prevError = event;\n    }\n    this.pushing = true;\n    this.pushToSubscriptions(event);\n    this.pushing = false;\n    while (this.queue.length) {\n      event = this.queue.shift();\n      this.push(event);\n    }\n    if (this.hasSubscribers()) {\n      return Bacon.more;\n    } else {\n      this.unsubscribeFromSource();\n      return Bacon.noMore;\n    }\n  } else {\n    this.queue.push(event);\n    return Bacon.more;\n  }\n};\n\nDispatcher.prototype.handleEvent = function (event) {\n  if (this._handleEvent) {\n    return this._handleEvent(event);\n  } else {\n    return this.push(event);\n  }\n};\n\nDispatcher.prototype.unsubscribeFromSource = function () {\n  if (this.unsubSrc) {\n    this.unsubSrc();\n  }\n  this.unsubSrc = undefined;\n};\n\nDispatcher.prototype.subscribe = function (sink) {\n  var subscription;\n  if (this.ended) {\n    sink(endEvent());\n    return nop;\n  } else {\n    assertFunction(sink);\n    subscription = {\n      sink: sink\n    };\n    this.subscriptions.push(subscription);\n    if (this.subscriptions.length === 1) {\n      this.unsubSrc = this._subscribe(this.handleEvent);\n      assertFunction(this.unsubSrc);\n    }\n    return (function (_this) {\n      return function () {\n        _this.removeSub(subscription);\n        if (!_this.hasSubscribers()) {\n          return _this.unsubscribeFromSource();\n        }\n      };\n    })(this);\n  }\n};\n\nBacon.Dispatcher = Dispatcher;\n\nfunction EventStream(desc, subscribe, handler) {\n  if (!(this instanceof EventStream)) {\n    return new EventStream(desc, subscribe, handler);\n  }\n  if (_.isFunction(desc)) {\n    handler = subscribe;\n    subscribe = desc;\n    desc = Desc.empty;\n  }\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new Dispatcher(subscribe, handler);\n  registerObs(this);\n}\n\ninherit(EventStream, Observable);\nextend(EventStream.prototype, {\n  _isEventStream: true,\n\n  toProperty: function (initValue_) {\n    var initValue = arguments.length === 0 ? None : toOption(function () {\n      return initValue_;\n    });\n    var disp = this.dispatcher;\n    var desc = new Bacon.Desc(this, \"toProperty\", [initValue_]);\n    return new Property(desc, function (sink) {\n      var initSent = false;\n      var subbed = false;\n      var unsub = nop;\n      var reply = Bacon.more;\n      var sendInit = function () {\n        if (!initSent) {\n          return initValue.forEach(function (value) {\n            initSent = true;\n            reply = sink(new Initial(value));\n            if (reply === Bacon.noMore) {\n              unsub();\n              unsub = nop;\n              return nop;\n            }\n          });\n        }\n      };\n\n      unsub = disp.subscribe(function (event) {\n        if (event.hasValue()) {\n          if (event.isInitial() && !subbed) {\n            initValue = new Some(function () {\n              return event.value();\n            });\n            return Bacon.more;\n          } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = true;\n            initValue = new Some(event);\n            return sink(event);\n          }\n        } else {\n          if (event.isEnd()) {\n            reply = sendInit();\n          }\n          if (reply !== Bacon.noMore) {\n            return sink(event);\n          }\n        }\n      });\n      subbed = true;\n      sendInit();\n      return unsub;\n    });\n  },\n\n  toEventStream: function () {\n    return this;\n  },\n\n  withHandler: function (handler) {\n    return new EventStream(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  }\n});\n\nBacon.EventStream = EventStream;\n\nBacon.never = function () {\n  return new EventStream(describe(Bacon, \"never\"), function (sink) {\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.when = function () {\n  if (arguments.length === 0) {\n    return Bacon.never();\n  }\n  var len = arguments.length;\n  var usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\n  assert(usage, len % 2 === 0);\n  var sources = [];\n  var pats = [];\n  var i = 0;\n  var patterns = [];\n  while (i < len) {\n    patterns[i] = arguments[i];\n    patterns[i + 1] = arguments[i + 1];\n    var patSources = _.toArray(arguments[i]);\n    var f = constantToFunction(arguments[i + 1]);\n    var pat = { f: f, ixs: [] };\n    var triggerFound = false;\n    for (var j = 0, s; j < patSources.length; j++) {\n      s = patSources[j];\n      var index = _.indexOf(sources, s);\n      if (!triggerFound) {\n        triggerFound = Source.isTrigger(s);\n      }\n      if (index < 0) {\n        sources.push(s);\n        index = sources.length - 1;\n      }\n      for (var k = 0, ix; k < pat.ixs.length; k++) {\n        ix = pat.ixs[k];\n        if (ix.index === index) {\n          ix.count++;\n        }\n      }\n      pat.ixs.push({ index: index, count: 1 });\n    }\n\n    assert(\"At least one EventStream required\", triggerFound || !patSources.length);\n\n    if (patSources.length > 0) {\n      pats.push(pat);\n    }\n    i = i + 2;\n  }\n\n  if (!sources.length) {\n    return Bacon.never();\n  }\n\n  sources = _.map(Source.fromObservable, sources);\n  var needsBarrier = _.any(sources, function (s) {\n    return s.flatten;\n  }) && containsDuplicateDeps(_.map(function (s) {\n    return s.obs;\n  }, sources));\n\n  var desc = new Bacon.Desc(Bacon, \"when\", patterns);\n  var resultStream = new EventStream(desc, function (sink) {\n    var triggers = [];\n    var ends = false;\n    var match = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].hasAtLeast(i.count)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var cannotSync = function (source) {\n      return !source.sync || source.ended;\n    };\n    var cannotMatch = function (p) {\n      for (var i1 = 0, i; i1 < p.ixs.length; i1++) {\n        i = p.ixs[i1];\n        if (!sources[i.index].mayHave(i.count)) {\n          return true;\n        }\n      }\n    };\n    var nonFlattened = function (trigger) {\n      return !trigger.source.flatten;\n    };\n    var part = function (source) {\n      return function (unsubAll) {\n        var flushLater = function () {\n          return UpdateBarrier.whenDoneWith(resultStream, flush);\n        };\n        var flushWhileTriggers = function () {\n          if (triggers.length > 0) {\n            var reply = Bacon.more;\n            var trigger = triggers.pop();\n            for (var i1 = 0, p; i1 < pats.length; i1++) {\n              p = pats[i1];\n              if (match(p)) {\n                var events = (function () {\n                  var result = [];\n                  for (var i2 = 0, i; i2 < p.ixs.length; i2++) {\n                    i = p.ixs[i2];\n                    result.push(sources[i.index].consume());\n                  }\n                  return result;\n                })();\n                reply = sink(trigger.e.apply(function () {\n                  var _p;\n\n                  var values = (function () {\n                    var result = [];\n                    for (var i2 = 0, event; i2 < events.length; i2++) {\n                      event = events[i2];\n                      result.push(event.value());\n                    }\n                    return result;\n                  })();\n\n                  return (_p = p).f.apply(_p, _toConsumableArray(values));\n                }));\n                if (triggers.length) {\n                  triggers = _.filter(nonFlattened, triggers);\n                }\n                if (reply === Bacon.noMore) {\n                  return reply;\n                } else {\n                  return flushWhileTriggers();\n                }\n              }\n            }\n          } else {\n            return Bacon.more;\n          }\n        };\n        var flush = function () {\n          var reply = flushWhileTriggers();\n          if (ends) {\n            if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n              reply = Bacon.noMore;\n              sink(endEvent());\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n\n          return reply;\n        };\n        return source.subscribe(function (e) {\n          if (e.isEnd()) {\n            ends = true;\n            source.markEnded();\n            flushLater();\n          } else if (e.isError()) {\n            var reply = sink(e);\n          } else {\n            source.push(e);\n            if (source.sync) {\n              triggers.push({ source: source, e: e });\n              if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                flushLater();\n              } else {\n                flush();\n              }\n            }\n          }\n          if (reply === Bacon.noMore) {\n            unsubAll();\n          }\n          return reply || Bacon.more;\n        });\n      };\n    };\n\n    return new Bacon.CompositeUnsubscribe((function () {\n      var result = [];\n      for (var i1 = 0, s; i1 < sources.length; i1++) {\n        s = sources[i1];\n        result.push(part(s));\n      }\n      return result;\n    })()).unsubscribe;\n  });\n  return resultStream;\n};\n\nvar containsDuplicateDeps = function (observables) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  var checkObservable = function (obs) {\n    if (_.contains(state, obs)) {\n      return true;\n    } else {\n      var deps = obs.internalDeps();\n      if (deps.length) {\n        state.push(obs);\n        return _.any(deps, checkObservable);\n      } else {\n        state.push(obs);\n        return false;\n      }\n    }\n  };\n\n  return _.any(observables, checkObservable);\n};\n\nvar constantToFunction = function (f) {\n  if (_.isFunction(f)) {\n    return f;\n  } else {\n    return _.always(f);\n  }\n};\n\nBacon.groupSimultaneous = function () {\n  for (var _len5 = arguments.length, streams = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    streams[_key5] = arguments[_key5];\n  }\n\n  if (streams.length === 1 && isArray(streams[0])) {\n    streams = streams[0];\n  }\n  var sources = (function () {\n    var result = [];\n    for (var i = 0, s; i < streams.length; i++) {\n      s = streams[i];\n      result.push(new BufferingSource(s));\n    }\n    return result;\n  })();\n  return withDesc(new Bacon.Desc(Bacon, \"groupSimultaneous\", streams), Bacon.when(sources, function () {\n    for (var _len6 = arguments.length, xs = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      xs[_key6] = arguments[_key6];\n    }\n\n    return xs;\n  }));\n};\n\nfunction PropertyDispatcher(property, subscribe, handleEvent) {\n  Dispatcher.call(this, subscribe, handleEvent);\n  this.property = property;\n  this.subscribe = _.bind(this.subscribe, this);\n  this.current = None;\n  this.currentValueRootId = undefined;\n  this.propertyEnded = false;\n}\n\ninherit(PropertyDispatcher, Dispatcher);\nextend(PropertyDispatcher.prototype, {\n  push: function (event) {\n    if (event.isEnd()) {\n      this.propertyEnded = true;\n    }\n    if (event.hasValue()) {\n      this.current = new Some(event);\n      this.currentValueRootId = UpdateBarrier.currentEventId();\n    }\n    return Dispatcher.prototype.push.call(this, event);\n  },\n\n  maybeSubSource: function (sink, reply) {\n    if (reply === Bacon.noMore) {\n      return nop;\n    } else if (this.propertyEnded) {\n      sink(endEvent());\n      return nop;\n    } else {\n      return Dispatcher.prototype.subscribe.call(this, sink);\n    }\n  },\n\n  subscribe: function (sink) {\n    var _this3 = this;\n\n    var initSent = false;\n\n    var reply = Bacon.more;\n\n    if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n      var dispatchingId = UpdateBarrier.currentEventId();\n      var valId = this.currentValueRootId;\n      if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n        UpdateBarrier.whenDoneWith(this.property, function () {\n          if (_this3.currentValueRootId === valId) {\n            return sink(initialEvent(_this3.current.get().value()));\n          }\n        });\n\n        return this.maybeSubSource(sink, reply);\n      } else {\n        UpdateBarrier.inTransaction(undefined, this, function () {\n          reply = sink(initialEvent(this.current.get().value()));\n          return reply;\n        }, []);\n        return this.maybeSubSource(sink, reply);\n      }\n    } else {\n      return this.maybeSubSource(sink, reply);\n    }\n  }\n});\n\nfunction Property(desc, subscribe, handler) {\n  Observable.call(this, desc);\n  assertFunction(subscribe);\n  this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n  registerObs(this);\n}\n\ninherit(Property, Observable);\nextend(Property.prototype, {\n  _isProperty: true,\n\n  changes: function () {\n    var _this4 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"changes\", []), function (sink) {\n      return _this4.dispatcher.subscribe(function (event) {\n        if (!event.isInitial()) {\n          return sink(event);\n        }\n      });\n    });\n  },\n\n  withHandler: function (handler) {\n    return new Property(new Bacon.Desc(this, \"withHandler\", [handler]), this.dispatcher.subscribe, handler);\n  },\n\n  toProperty: function () {\n    assertNoArguments(arguments);\n    return this;\n  },\n\n  toEventStream: function () {\n    var _this5 = this;\n\n    return new EventStream(new Bacon.Desc(this, \"toEventStream\", []), function (sink) {\n      return _this5.dispatcher.subscribe(function (event) {\n        if (event.isInitial()) {\n          event = event.toNext();\n        }\n        return sink(event);\n      });\n    });\n  }\n});\n\nBacon.Property = Property;\n\nBacon.constant = function (value) {\n  return new Property(new Bacon.Desc(Bacon, \"constant\", [value]), function (sink) {\n    sink(initialEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.fromBinder = function (binder) {\n  var eventTransformer = arguments.length <= 1 || arguments[1] === undefined ? _.id : arguments[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromBinder\", [binder, eventTransformer]);\n  return new EventStream(desc, function (sink) {\n    var unbound = false;\n    var shouldUnbind = false;\n    var unbind = function () {\n      if (!unbound) {\n        if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n          unbinder();\n          return unbound = true;\n        } else {\n          return shouldUnbind = true;\n        }\n      }\n    };\n    var unbinder = binder(function () {\n      var ref;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var value = eventTransformer.apply(this, args);\n      if (!(isArray(value) && ((ref = _.last(value)) != null ? ref._isEvent : undefined))) {\n        value = [value];\n      }\n      var reply = Bacon.more;\n      for (var i = 0, event; i < value.length; i++) {\n        event = value[i];\n        reply = sink(event = toEvent(event));\n        if (reply === Bacon.noMore || event.isEnd()) {\n          unbind();\n          return reply;\n        }\n      }\n      return reply;\n    });\n    if (shouldUnbind) {\n      unbind();\n    }\n    return unbind;\n  });\n};\n\nBacon.Observable.prototype.map = function (p) {\n  for (var _len8 = arguments.length, args = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n\n  return convertArgsToFunction(this, p, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n      return this.push(event.fmap(f));\n    }));\n  });\n};\n\nvar argumentsToObservables = function (args) {\n  if (isArray(args[0])) {\n    return args[0];\n  } else {\n    return Array.prototype.slice.call(args);\n  }\n};\n\nvar argumentsToObservablesAndFunction = function (args) {\n  if (_.isFunction(args[0])) {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 1)), args[0]];\n  } else {\n    return [argumentsToObservables(Array.prototype.slice.call(args, 0, args.length - 1)), _.last(args)];\n  }\n};\n\nBacon.combineAsArray = function () {\n  var streams = argumentsToObservables(arguments);\n  for (var index = 0, stream; index < streams.length; index++) {\n    stream = streams[index];\n    if (!isObservable(stream)) {\n      streams[index] = Bacon.constant(stream);\n    }\n  }\n  if (streams.length) {\n    var sources = (function () {\n      var result = [];\n      for (var i = 0, s; i < streams.length; i++) {\n        s = streams[i];\n        result.push(new Source(s, true));\n      }\n      return result;\n    })();\n    return withDesc(new Bacon.Desc(Bacon, \"combineAsArray\", streams), Bacon.when(sources, function () {\n      for (var _len9 = arguments.length, xs = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        xs[_key9] = arguments[_key9];\n      }\n\n      return xs;\n    }).toProperty());\n  } else {\n    return Bacon.constant([]);\n  }\n};\n\nBacon.onValues = function () {\n  for (var _len10 = arguments.length, streams = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    streams[_key10] = arguments[_key10];\n  }\n\n  return Bacon.combineAsArray(streams.slice(0, streams.length - 1)).onValues(streams[streams.length - 1]);\n};\n\nBacon.combineWith = function () {\n  var _argumentsToObservablesAndFunction = argumentsToObservablesAndFunction(arguments);\n\n  var streams = _argumentsToObservablesAndFunction[0];\n  var f = _argumentsToObservablesAndFunction[1];\n\n  var desc = new Bacon.Desc(Bacon, \"combineWith\", [f].concat(_toConsumableArray(streams)));\n  return withDesc(desc, Bacon.combineAsArray(streams).map(function (values) {\n    return f.apply(undefined, _toConsumableArray(values));\n  }));\n};\n\nBacon.Observable.prototype.combine = function (other, f) {\n  var combinator = toCombinator(f);\n  var desc = new Bacon.Desc(this, \"combine\", [other, f]);\n  return withDesc(desc, Bacon.combineAsArray(this, other).map(function (values) {\n    return combinator(values[0], values[1]);\n  }));\n};\n\nBacon.Observable.prototype.withStateMachine = function (initState, f) {\n  var state = initState;\n  var desc = new Bacon.Desc(this, \"withStateMachine\", [initState, f]);\n  return withDesc(desc, this.withHandler(function (event) {\n    var fromF = f(state, event);\n    var newState = fromF[0];\n    var outputs = fromF[1];\n\n    state = newState;\n    var reply = Bacon.more;\n    for (var i = 0, output; i < outputs.length; i++) {\n      output = outputs[i];\n      reply = this.push(output);\n      if (reply === Bacon.noMore) {\n        return reply;\n      }\n    }\n    return reply;\n  }));\n};\n\nvar equals = function (a, b) {\n  return a === b;\n};\n\nvar isNone = function (object) {\n  return typeof object !== \"undefined\" && object !== null ? object._isNone : false;\n};\n\nBacon.Observable.prototype.skipDuplicates = function () {\n  var isEqual = arguments.length <= 0 || arguments[0] === undefined ? equals : arguments[0];\n\n  var desc = new Bacon.Desc(this, \"skipDuplicates\", []);\n  return withDesc(desc, this.withStateMachine(None, function (prev, event) {\n    if (!event.hasValue()) {\n      return [prev, [event]];\n    } else if (event.isInitial() || isNone(prev) || !isEqual(prev.get(), event.value())) {\n      return [new Some(event.value()), [event]];\n    } else {\n      return [prev, []];\n    }\n  }));\n};\n\nBacon.Observable.prototype.awaiting = function (other) {\n  var desc = new Bacon.Desc(this, \"awaiting\", [other]);\n  return withDesc(desc, Bacon.groupSimultaneous(this, other).map(function (values) {\n    return values[1].length === 0;\n  }).toProperty(false).skipDuplicates());\n};\n\nBacon.Observable.prototype.not = function () {\n  return withDesc(new Bacon.Desc(this, \"not\", []), this.map(function (x) {\n    return !x;\n  }));\n};\n\nBacon.Property.prototype.and = function (other) {\n  return withDesc(new Bacon.Desc(this, \"and\", [other]), this.combine(other, function (x, y) {\n    return x && y;\n  }));\n};\n\nBacon.Property.prototype.or = function (other) {\n  return withDesc(new Bacon.Desc(this, \"or\", [other]), this.combine(other, function (x, y) {\n    return x || y;\n  }));\n};\n\nBacon.scheduler = {\n  setTimeout: function (f, d) {\n    return setTimeout(f, d);\n  },\n  setInterval: function (f, i) {\n    return setInterval(f, i);\n  },\n  clearInterval: function (id) {\n    return clearInterval(id);\n  },\n  clearTimeout: function (id) {\n    return clearTimeout(id);\n  },\n  now: function () {\n    return new Date().getTime();\n  }\n};\n\nBacon.EventStream.prototype.bufferWithTime = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithTime\", [delay]), this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n};\n\nBacon.EventStream.prototype.bufferWithCount = function (count) {\n  return withDesc(new Bacon.Desc(this, \"bufferWithCount\", [count]), this.bufferWithTimeOrCount(undefined, count));\n};\n\nBacon.EventStream.prototype.bufferWithTimeOrCount = function (delay, count) {\n  var flushOrSchedule = function (buffer) {\n    if (buffer.values.length === count) {\n      return buffer.flush();\n    } else if (delay !== undefined) {\n      return buffer.schedule();\n    }\n  };\n  var desc = new Bacon.Desc(this, \"bufferWithTimeOrCount\", [delay, count]);\n  return withDesc(desc, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n};\n\nBacon.EventStream.prototype.buffer = function (delay) {\n  var onInput = arguments.length <= 1 || arguments[1] === undefined ? nop : arguments[1];\n  var onFlush = arguments.length <= 2 || arguments[2] === undefined ? nop : arguments[2];\n\n  var buffer = {\n    scheduled: null,\n    end: undefined,\n    values: [],\n    flush: function () {\n      if (this.scheduled) {\n        Bacon.scheduler.clearTimeout(this.scheduled);\n        this.scheduled = null;\n      }\n      if (this.values.length > 0) {\n        var valuesToPush = this.values;\n        this.values = [];\n        var reply = this.push(nextEvent(valuesToPush));\n        if (this.end != null) {\n          return this.push(this.end);\n        } else if (reply !== Bacon.noMore) {\n          return onFlush(this);\n        }\n      } else {\n        if (this.end != null) {\n          return this.push(this.end);\n        }\n      }\n    },\n    schedule: function () {\n      var _this6 = this;\n\n      if (!this.scheduled) {\n        return this.scheduled = delay(function () {\n          return _this6.flush();\n        });\n      }\n    }\n  };\n  var reply = Bacon.more;\n  if (!_.isFunction(delay)) {\n    var delayMs = delay;\n    delay = function (f) {\n      return Bacon.scheduler.setTimeout(f, delayMs);\n    };\n  }\n  return withDesc(new Bacon.Desc(this, \"buffer\", []), this.withHandler(function (event) {\n    var _this7 = this;\n\n    buffer.push = function (event) {\n      return _this7.push(event);\n    };\n    if (event.isError()) {\n      reply = this.push(event);\n    } else if (event.isEnd()) {\n      buffer.end = event;\n      if (!buffer.scheduled) {\n        buffer.flush();\n      }\n    } else {\n      buffer.values.push(event.value());\n\n      onInput(buffer);\n    }\n    return reply;\n  }));\n};\n\nBacon.Observable.prototype.filter = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len11 = arguments.length, args = Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    args[_key11 - 1] = arguments[_key11];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"filter\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.once = function (value) {\n  return new EventStream(new Desc(Bacon, \"once\", [value]), function (sink) {\n    sink(toEvent(value));\n    sink(endEvent());\n    return nop;\n  });\n};\n\nBacon.EventStream.prototype.concat = function (right) {\n  var left = this;\n  return new EventStream(new Bacon.Desc(left, \"concat\", [right]), function (sink) {\n    var unsubRight = nop;\n    var unsubLeft = left.dispatcher.subscribe(function (e) {\n      if (e.isEnd()) {\n        unsubRight = right.dispatcher.subscribe(sink);\n        return unsubRight;\n      } else {\n        return sink(e);\n      }\n    });\n    return function () {\n      return (unsubLeft(), unsubRight());\n    };\n  });\n};\n\nBacon.Observable.prototype.flatMap = function () {\n  return flatMap_(this, makeSpawner(arguments));\n};\n\nBacon.Observable.prototype.flatMapFirst = function () {\n  return flatMap_(this, makeSpawner(arguments), true);\n};\n\nvar makeSpawner = function (args) {\n  if (args.length === 1 && isObservable(args[0])) {\n    return _.always(args[0]);\n  } else {\n    return makeFunctionArgs(args);\n  }\n};\n\nvar makeObservable = function (x) {\n  if (isObservable(x)) {\n    return x;\n  } else {\n    return Bacon.once(x);\n  }\n};\n\nvar flatMap_ = function (root, f, firstOnly, limit) {\n  var rootDep = [root];\n  var childDeps = [];\n  var desc = new Bacon.Desc(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), [f]);\n  var result = new EventStream(desc, function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var queue = [];\n    var spawn = function (event) {\n      var child = makeObservable(f(event.value()));\n      childDeps.push(child);\n      return composite.add(function (unsubAll, unsubMe) {\n        return child.dispatcher.subscribe(function (event) {\n          if (event.isEnd()) {\n            _.remove(child, childDeps);\n            checkQueue();\n            checkEnd(unsubMe);\n            return Bacon.noMore;\n          } else {\n            if (typeof event !== \"undefined\" && event !== null ? event._isInitial : undefined) {\n              event = event.toNext();\n            }\n            var reply = sink(event);\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          }\n        });\n      });\n    };\n    var checkQueue = function () {\n      var event = queue.shift();\n      if (event) {\n        return spawn(event);\n      }\n    };\n    var checkEnd = function (unsub) {\n      unsub();\n      if (composite.empty()) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (__, unsubRoot) {\n      return root.dispatcher.subscribe(function (event) {\n        if (event.isEnd()) {\n          return checkEnd(unsubRoot);\n        } else if (event.isError()) {\n          return sink(event);\n        } else if (firstOnly && composite.count() > 1) {\n          return Bacon.more;\n        } else {\n          if (composite.unsubscribed) {\n            return Bacon.noMore;\n          }\n          if (limit && composite.count() > limit) {\n            return queue.push(event);\n          } else {\n            return spawn(event);\n          }\n        }\n      });\n    });\n    return composite.unsubscribe;\n  });\n  result.internalDeps = function () {\n    if (childDeps.length) {\n      return rootDep.concat(childDeps);\n    } else {\n      return rootDep;\n    }\n  };\n  return result;\n};\n\nBacon.Observable.prototype.flatMapWithConcurrencyLimit = function (limit) {\n  for (var _len12 = arguments.length, args = Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n    args[_key12 - 1] = arguments[_key12];\n  }\n\n  var desc = new Bacon.Desc(this, \"flatMapWithConcurrencyLimit\", [limit].concat(args));\n  return withDesc(desc, flatMap_(this, makeSpawner(args), false, limit));\n};\n\nBacon.Observable.prototype.flatMapConcat = function () {\n  var desc = new Bacon.Desc(this, \"flatMapConcat\", Array.prototype.slice.call(arguments, 0));\n  return withDesc(desc, this.flatMapWithConcurrencyLimit.apply(this, [1].concat(_slice.call(arguments))));\n};\n\nBacon.later = function (delay, value) {\n  return withDesc(new Bacon.Desc(Bacon, \"later\", [delay, value]), Bacon.fromBinder(function (sink) {\n    var sender = function () {\n      return sink([value, endEvent()]);\n    };\n    var id = Bacon.scheduler.setTimeout(sender, delay);\n    return function () {\n      return Bacon.scheduler.clearTimeout(id);\n    };\n  }));\n};\n\nBacon.Observable.prototype.bufferingThrottle = function (minimumInterval) {\n  var desc = new Bacon.Desc(this, \"bufferingThrottle\", [minimumInterval]);\n  return withDesc(desc, this.flatMapConcat(function (x) {\n    return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n  }));\n};\n\nBacon.Property.prototype.bufferingThrottle = function () {\n  return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n};\n\nfunction Bus() {\n  if (!(this instanceof Bus)) {\n    return new Bus();\n  }\n\n  this.unsubAll = _.bind(this.unsubAll, this);\n  this.subscribeAll = _.bind(this.subscribeAll, this);\n  this.guardedSink = _.bind(this.guardedSink, this);\n\n  this.sink = undefined;\n  this.subscriptions = [];\n  this.ended = false;\n  EventStream.call(this, new Bacon.Desc(Bacon, \"Bus\", []), this.subscribeAll);\n}\n\ninherit(Bus, EventStream);\nextend(Bus.prototype, {\n  unsubAll: function () {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (typeof sub.unsub === \"function\") {\n        sub.unsub();\n      }\n    }\n  },\n\n  subscribeAll: function (newSink) {\n    if (this.ended) {\n      newSink(endEvent());\n    } else {\n      this.sink = newSink;\n      var iterable = cloneArray(this.subscriptions);\n      for (var i = 0, subscription; i < iterable.length; i++) {\n        subscription = iterable[i];\n        this.subscribeInput(subscription);\n      }\n    }\n    return this.unsubAll;\n  },\n\n  guardedSink: function (input) {\n    var _this8 = this;\n\n    return function (event) {\n      if (event.isEnd()) {\n        _this8.unsubscribeInput(input);\n        return Bacon.noMore;\n      } else {\n        return _this8.sink(event);\n      }\n    };\n  },\n\n  subscribeInput: function (subscription) {\n    subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    return subscription.unsub;\n  },\n\n  unsubscribeInput: function (input) {\n    var iterable = this.subscriptions;\n    for (var i = 0, sub; i < iterable.length; i++) {\n      sub = iterable[i];\n      if (sub.input === input) {\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n        this.subscriptions.splice(i, 1);\n        return;\n      }\n    }\n  },\n\n  plug: function (input) {\n    var _this9 = this;\n\n    assertObservable(input);\n    if (this.ended) {\n      return;\n    }\n    var sub = { input: input };\n    this.subscriptions.push(sub);\n    if (typeof this.sink !== \"undefined\") {\n      this.subscribeInput(sub);\n    }\n    return function () {\n      return _this9.unsubscribeInput(input);\n    };\n  },\n\n  end: function () {\n    this.ended = true;\n    this.unsubAll();\n    if (typeof this.sink === \"function\") {\n      return this.sink(endEvent());\n    }\n  },\n\n  push: function (value) {\n    if (!this.ended && typeof this.sink === \"function\") {\n      return this.sink(nextEvent(value));\n    }\n  },\n\n  error: function (error) {\n    if (typeof this.sink === \"function\") {\n      return this.sink(new Error(error));\n    }\n  }\n});\n\nBacon.Bus = Bus;\n\nvar liftCallback = function (desc, wrapped) {\n  return withMethodCallSupport(function (f) {\n    var stream = partiallyApplied(wrapped, [function (values, callback) {\n      return f.apply(undefined, _toConsumableArray(values).concat([callback]));\n    }]);\n\n    for (var _len13 = arguments.length, args = Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n\n    return withDesc(new Bacon.Desc(Bacon, desc, [f].concat(args)), Bacon.combineAsArray(args).flatMap(stream));\n  });\n};\n\nBacon.fromCallback = liftCallback(\"fromCallback\", function (f) {\n  for (var _len14 = arguments.length, args = Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n    args[_key14 - 1] = arguments[_key14];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (value) {\n    return [value, endEvent()];\n  });\n});\n\nBacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function (f) {\n  for (var _len15 = arguments.length, args = Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n    args[_key15 - 1] = arguments[_key15];\n  }\n\n  return Bacon.fromBinder(function (handler) {\n    makeFunction(f, args)(handler);\n    return nop;\n  }, function (error, value) {\n    if (error) {\n      return [new Error(error), endEvent()];\n    }\n    return [value, endEvent()];\n  });\n});\n\nBacon.combineTemplate = function (template) {\n  function current(ctxStack) {\n    return ctxStack[ctxStack.length - 1];\n  }\n  function setValue(ctxStack, key, value) {\n    current(ctxStack)[key] = value;\n    return value;\n  }\n  function applyStreamValue(key, index) {\n    return function (ctxStack, values) {\n      return setValue(ctxStack, key, values[index]);\n    };\n  }\n  function constantValue(key, value) {\n    return function (ctxStack) {\n      return setValue(ctxStack, key, value);\n    };\n  }\n\n  function mkContext(template) {\n    return isArray(template) ? [] : {};\n  }\n\n  function pushContext(key, value) {\n    return function (ctxStack) {\n      var newContext = mkContext(value);\n      setValue(ctxStack, key, newContext);\n      return ctxStack.push(newContext);\n    };\n  }\n\n  function compile(key, value) {\n    if (isObservable(value)) {\n      streams.push(value);\n      return funcs.push(applyStreamValue(key, streams.length - 1));\n    } else if (value && (value.constructor == Object || value.constructor == Array)) {\n      var popContext = function (ctxStack) {\n        return ctxStack.pop();\n      };\n      funcs.push(pushContext(key, value));\n      compileTemplate(value);\n      return funcs.push(popContext);\n    } else {\n      return funcs.push(constantValue(key, value));\n    }\n  }\n\n  function combinator(values) {\n    var rootContext = mkContext(template);\n    var ctxStack = [rootContext];\n    for (var i = 0, f; i < funcs.length; i++) {\n      f = funcs[i];\n      f(ctxStack, values);\n    }\n    return rootContext;\n  }\n\n  function compileTemplate(template) {\n    return _.each(template, compile);\n  }\n\n  var funcs = [];\n  var streams = [];\n\n  compileTemplate(template);\n\n  return withDesc(new Bacon.Desc(Bacon, \"combineTemplate\", [template]), Bacon.combineAsArray(streams).map(combinator));\n};\n\nvar addPropertyInitValueToStream = function (property, stream) {\n  var justInitValue = new EventStream(describe(property, \"justInitValue\"), function (sink) {\n    var value = undefined;\n    var unsub = property.dispatcher.subscribe(function (event) {\n      if (!event.isEnd()) {\n        value = event;\n      }\n      return Bacon.noMore;\n    });\n    UpdateBarrier.whenDoneWith(justInitValue, function () {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sink(value);\n      }\n      return sink(endEvent());\n    });\n    return unsub;\n  });\n  return justInitValue.concat(stream).toProperty();\n};\n\nBacon.Observable.prototype.mapEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      this.push(nextEvent(f(event)));\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.skipErrors = function () {\n  return withDesc(new Bacon.Desc(this, \"skipErrors\", []), this.withHandler(function (event) {\n    if (event.isError()) {\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.takeUntil = function (stopper) {\n  var endMarker = {};\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      var _event$value = event.value();\n\n      var data = _event$value[0];\n      var stopper = _event$value[1];\n\n      if (stopper.length) {\n        return this.push(endEvent());\n      } else {\n        var reply = Bacon.more;\n        for (var i = 0, value; i < data.length; i++) {\n          value = data[i];\n          if (value === endMarker) {\n            reply = this.push(endEvent());\n          } else {\n            reply = this.push(nextEvent(value));\n          }\n        }\n        return reply;\n      }\n    }\n  }));\n};\n\nBacon.Property.prototype.takeUntil = function (stopper) {\n  var changes = this.changes().takeUntil(stopper);\n  return withDesc(new Bacon.Desc(this, \"takeUntil\", [stopper]), addPropertyInitValueToStream(this, changes));\n};\n\nBacon.Observable.prototype.flatMapLatest = function () {\n  var f = makeSpawner(arguments);\n  var stream = this.toEventStream();\n  return withDesc(new Bacon.Desc(this, \"flatMapLatest\", [f]), stream.flatMap(function (value) {\n    return makeObservable(f(value)).takeUntil(stream);\n  }));\n};\n\nBacon.Property.prototype.delayChanges = function (desc, f) {\n  return withDesc(desc, addPropertyInitValueToStream(this, f(this.changes())));\n};\n\nBacon.EventStream.prototype.delay = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"delay\", [delay]), this.flatMap(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.delay = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"delay\", [delay]), function (changes) {\n    return changes.delay(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounce = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounce\", [delay]), this.flatMapLatest(function (value) {\n    return Bacon.later(delay, value);\n  }));\n};\n\nBacon.Property.prototype.debounce = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"debounce\", [delay]), function (changes) {\n    return changes.debounce(delay);\n  });\n};\n\nBacon.EventStream.prototype.debounceImmediate = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"debounceImmediate\", [delay]), this.flatMapFirst(function (value) {\n    return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n  }));\n};\n\nBacon.Observable.prototype.decode = function (cases) {\n  return withDesc(new Bacon.Desc(this, \"decode\", [cases]), this.combine(Bacon.combineTemplate(cases), function (key, values) {\n    return values[key];\n  }));\n};\n\nBacon.Observable.prototype.scan = function (seed, f) {\n  var _this10 = this;\n\n  var resultProperty;\n  f = toCombinator(f);\n  var acc = toOption(seed);\n  var initHandled = false;\n  var subscribe = function (sink) {\n    var initSent = false;\n    var unsub = nop;\n    var reply = Bacon.more;\n    var sendInit = function () {\n      if (!initSent) {\n        return acc.forEach(function (value) {\n          initSent = initHandled = true;\n          reply = sink(new Initial(function () {\n            return value;\n          }));\n          if (reply === Bacon.noMore) {\n            unsub();\n            unsub = nop;\n            return unsub;\n          }\n        });\n      }\n    };\n    unsub = _this10.dispatcher.subscribe(function (event) {\n      if (event.hasValue()) {\n        if (initHandled && event.isInitial()) {\n          return Bacon.more;\n        } else {\n            if (!event.isInitial()) {\n              sendInit();\n            }\n            initSent = initHandled = true;\n            var prev = acc.getOrElse(undefined);\n            var next = f(prev, event.value());\n\n            acc = new Some(next);\n            return sink(event.apply(function () {\n              return next;\n            }));\n          }\n      } else {\n        if (event.isEnd()) {\n          reply = sendInit();\n        }\n        if (reply !== Bacon.noMore) {\n          return sink(event);\n        }\n      }\n    });\n    UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n    return unsub;\n  };\n  resultProperty = new Property(new Bacon.Desc(this, \"scan\", [seed, f]), subscribe);\n  return resultProperty;\n};\n\nBacon.Observable.prototype.diff = function (start, f) {\n  f = toCombinator(f);\n  return withDesc(new Bacon.Desc(this, \"diff\", [start, f]), this.scan([start], function (prevTuple, next) {\n    return [next, f(prevTuple[0], next)];\n  }).filter(function (tuple) {\n    return tuple.length === 2;\n  }).map(function (tuple) {\n    return tuple[1];\n  }));\n};\n\nBacon.Observable.prototype.doAction = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doAction\", [f]), this.withHandler(function (event) {\n    if (event.hasValue()) {\n      f(event.value());\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doEnd = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doEnd\", [f]), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      f();\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"doError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      f(event.error);\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.doLog = function () {\n  for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    args[_key16] = arguments[_key16];\n  }\n\n  return withDesc(new Bacon.Desc(this, \"doLog\", args), this.withHandler(function (event) {\n    if (typeof console !== \"undefined\" && console !== null && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n    return this.push(event);\n  }));\n};\n\nBacon.Observable.prototype.endOnError = function (f) {\n  if (!(typeof f !== \"undefined\" && f !== null)) {\n    f = true;\n  }\n\n  for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n    args[_key17 - 1] = arguments[_key17];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"endOnError\", []), this.withHandler(function (event) {\n      if (event.isError() && f(event.error)) {\n        this.push(event);\n        return this.push(endEvent());\n      } else {\n        return this.push(event);\n      }\n    }));\n  });\n};\n\nObservable.prototype.errors = function () {\n  return withDesc(new Bacon.Desc(this, \"errors\", []), this.filter(function () {\n    return false;\n  }));\n};\n\nBacon.Observable.prototype.take = function (count) {\n  if (count <= 0) {\n    return Bacon.never();\n  }\n  return withDesc(new Bacon.Desc(this, \"take\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else {\n      count--;\n      if (count > 0) {\n        return this.push(event);\n      } else {\n        if (count === 0) {\n          this.push(event);\n        }\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }\n  }));\n};\n\nBacon.Observable.prototype.first = function () {\n  return withDesc(new Bacon.Desc(this, \"first\", []), this.take(1));\n};\n\nBacon.Observable.prototype.mapError = function () {\n  var f = makeFunctionArgs(arguments);\n  return withDesc(new Bacon.Desc(this, \"mapError\", [f]), this.withHandler(function (event) {\n    if (event.isError()) {\n      return this.push(nextEvent(f(event.error)));\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.Observable.prototype.flatMapError = function (fn) {\n  var desc = new Bacon.Desc(this, \"flatMapError\", [fn]);\n  return withDesc(desc, this.mapError(function (err) {\n    return new Error(err);\n  }).flatMap(function (x) {\n    if (x instanceof Error) {\n      return fn(x.error);\n    } else {\n      return Bacon.once(x);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.sampledBy = function (sampler, combinator) {\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), this.toProperty().sampledBy(sampler, combinator));\n};\n\nBacon.Property.prototype.sampledBy = function (sampler, combinator) {\n  var lazy = false;\n  if (typeof combinator !== \"undefined\" && combinator !== null) {\n    combinator = toCombinator(combinator);\n  } else {\n    lazy = true;\n    combinator = function (f) {\n      return f.value();\n    };\n  }\n  var thisSource = new Source(this, false, lazy);\n  var samplerSource = new Source(sampler, true, lazy);\n  var stream = Bacon.when([thisSource, samplerSource], combinator);\n  var result = sampler._isProperty ? stream.toProperty() : stream;\n  return withDesc(new Bacon.Desc(this, \"sampledBy\", [sampler, combinator]), result);\n};\n\nBacon.Property.prototype.sample = function (interval) {\n  return withDesc(new Bacon.Desc(this, \"sample\", [interval]), this.sampledBy(Bacon.interval(interval, {})));\n};\n\nBacon.Observable.prototype.map = function (p) {\n  if (p && p._isProperty) {\n    return p.sampledBy(this, former);\n  } else {\n    for (var _len18 = arguments.length, args = Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n      args[_key18 - 1] = arguments[_key18];\n    }\n\n    return convertArgsToFunction(this, p, args, function (f) {\n      return withDesc(new Bacon.Desc(this, \"map\", [f]), this.withHandler(function (event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  }\n};\n\nBacon.Observable.prototype.fold = function (seed, f) {\n  return withDesc(new Bacon.Desc(this, \"fold\", [seed, f]), this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n};\n\nObservable.prototype.reduce = Observable.prototype.fold;\n\nvar eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\nvar findHandlerMethods = function (target) {\n  var pair;\n  for (var i = 0; i < eventMethods.length; i++) {\n    pair = eventMethods[i];\n    var methodPair = [target[pair[0]], target[pair[1]]];\n    if (methodPair[0] && methodPair[1]) {\n      return methodPair;\n    }\n  }\n  for (var j = 0; j < eventMethods.length; j++) {\n    pair = eventMethods[j];\n    var addListener = target[pair[0]];\n    if (addListener) {\n      return [addListener, function () {}];\n    }\n  }\n  throw new Error(\"No suitable event methods in \" + target);\n};\n\nBacon.fromEventTarget = function (target, eventName, eventTransformer) {\n  var _findHandlerMethods = findHandlerMethods(target);\n\n  var sub = _findHandlerMethods[0];\n  var unsub = _findHandlerMethods[1];\n\n  var desc = new Bacon.Desc(Bacon, \"fromEvent\", [target, eventName]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    sub.call(target, eventName, handler);\n    return function () {\n      return unsub.call(target, eventName, handler);\n    };\n  }, eventTransformer));\n};\n\nBacon.fromEvent = Bacon.fromEventTarget;\n\nBacon.fromPoll = function (delay, poll) {\n  var desc = new Bacon.Desc(Bacon, \"fromPoll\", [delay, poll]);\n  return withDesc(desc, Bacon.fromBinder(function (handler) {\n    var id = Bacon.scheduler.setInterval(handler, delay);\n    return function () {\n      return Bacon.scheduler.clearInterval(id);\n    };\n  }, poll));\n};\n\nfunction valueAndEnd(value) {\n  return [value, endEvent()];\n}\n\nBacon.fromPromise = function (promise, abort) {\n  var eventTransformer = arguments.length <= 2 || arguments[2] === undefined ? valueAndEnd : arguments[2];\n\n  return withDesc(new Bacon.Desc(Bacon, \"fromPromise\", [promise]), Bacon.fromBinder(function (handler) {\n    var bound = promise.then(handler, function (e) {\n      return handler(new Error(e));\n    });\n    if (bound && typeof bound.done === \"function\") {\n      bound.done();\n    }\n\n    if (abort) {\n      return function () {\n        if (typeof promise.abort === \"function\") {\n          return promise.abort();\n        }\n      };\n    } else {\n      return function () {};\n    }\n  }, eventTransformer));\n};\n\nBacon.Observable.prototype.groupBy = function (keyF) {\n  var limitF = arguments.length <= 1 || arguments[1] === undefined ? Bacon._.id : arguments[1];\n\n  var streams = {};\n  var src = this;\n  return src.filter(function (x) {\n    return !streams[keyF(x)];\n  }).map(function (x) {\n    var key = keyF(x);\n    var similar = src.filter(function (x) {\n      return keyF(x) === key;\n    });\n    var data = Bacon.once(x).concat(similar);\n    var limited = limitF(data, x).withHandler(function (event) {\n      this.push(event);\n      if (event.isEnd()) {\n        return delete streams[key];\n      }\n    });\n    streams[key] = limited;\n    return limited;\n  });\n};\n\nBacon.fromArray = function (values) {\n  assertArray(values);\n  if (!values.length) {\n    return withDesc(new Bacon.Desc(Bacon, \"fromArray\", values), Bacon.never());\n  } else {\n    var i = 0;\n    return new EventStream(new Bacon.Desc(Bacon, \"fromArray\", [values]), function (sink) {\n      var unsubd = false;\n      var reply = Bacon.more;\n      var pushing = false;\n      var pushNeeded = false;\n      var push = function () {\n        pushNeeded = true;\n        if (pushing) {\n          return;\n        }\n        pushing = true;\n        while (pushNeeded) {\n          pushNeeded = false;\n          if (reply !== Bacon.noMore && !unsubd) {\n            var value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                sink(endEvent());\n              } else {\n                UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        }\n        pushing = false;\n        return pushing;\n      };\n\n      push();\n      return function () {\n        unsubd = true;\n        return unsubd;\n      };\n    });\n  }\n};\n\nBacon.EventStream.prototype.holdWhen = function (valve) {\n  var onHold = false;\n  var bufferedValues = [];\n  var src = this;\n  return new EventStream(new Bacon.Desc(this, \"holdWhen\", [valve]), function (sink) {\n    var composite = new CompositeUnsubscribe();\n    var subscribed = false;\n    var endIfBothEnded = function (unsub) {\n      if (typeof unsub === \"function\") {\n        unsub();\n      }\n      if (composite.empty() && subscribed) {\n        return sink(endEvent());\n      }\n    };\n    composite.add(function (unsubAll, unsubMe) {\n      return valve.subscribeInternal(function (event) {\n        if (event.hasValue()) {\n          onHold = event.value();\n          if (!onHold) {\n            var toSend = bufferedValues;\n            bufferedValues = [];\n            return (function () {\n              var result = [];\n              for (var i = 0, value; i < toSend.length; i++) {\n                value = toSend[i];\n                result.push(sink(nextEvent(value)));\n              }\n              return result;\n            })();\n          }\n        } else if (event.isEnd()) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    composite.add(function (unsubAll, unsubMe) {\n      return src.subscribeInternal(function (event) {\n        if (onHold && event.hasValue()) {\n          return bufferedValues.push(event.value());\n        } else if (event.isEnd() && bufferedValues.length) {\n          return endIfBothEnded(unsubMe);\n        } else {\n          return sink(event);\n        }\n      });\n    });\n    subscribed = true;\n    endIfBothEnded();\n    return composite.unsubscribe;\n  });\n};\n\nBacon.interval = function (delay) {\n  var value = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  return withDesc(new Bacon.Desc(Bacon, \"interval\", [delay, value]), Bacon.fromPoll(delay, function () {\n    return nextEvent(value);\n  }));\n};\n\nBacon.$ = {};\nBacon.$.asEventStream = function (eventName, selector, eventTransformer) {\n  var _this11 = this;\n\n  if (_.isFunction(selector)) {\n    eventTransformer = selector;\n    selector = undefined;\n  }\n\n  return withDesc(new Bacon.Desc(this.selector || this, \"asEventStream\", [eventName]), Bacon.fromBinder(function (handler) {\n    _this11.on(eventName, selector, handler);\n    return function () {\n      return _this11.off(eventName, selector, handler);\n    };\n  }, eventTransformer));\n};\n\nif (typeof jQuery !== \"undefined\" && jQuery) {\n  jQuery.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nif (typeof Zepto !== \"undefined\" && Zepto) {\n  Zepto.fn.asEventStream = Bacon.$.asEventStream;\n}\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDesc(new Bacon.Desc(this, \"last\", []), this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.Observable.prototype.log = function () {\n  for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  this.subscribe(function (event) {\n    if (typeof console !== \"undefined\" && typeof console.log === \"function\") {\n      console.log.apply(console, args.concat([event.log()]));\n    }\n  });\n  return this;\n};\n\nBacon.EventStream.prototype.merge = function (right) {\n  assertEventStream(right);\n  var left = this;\n  return withDesc(new Bacon.Desc(left, \"merge\", [right]), Bacon.mergeAll(this, right));\n};\n\nBacon.mergeAll = function () {\n  var streams = argumentsToObservables(arguments);\n  if (streams.length) {\n    return new EventStream(new Bacon.Desc(Bacon, \"mergeAll\", streams), function (sink) {\n      var ends = 0;\n      var smartSink = function (obs) {\n        return function (unsubBoth) {\n          return obs.dispatcher.subscribe(function (event) {\n            if (event.isEnd()) {\n              ends++;\n              if (ends === streams.length) {\n                return sink(endEvent());\n              } else {\n                return Bacon.more;\n              }\n            } else {\n              var reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubBoth();\n              }\n              return reply;\n            }\n          });\n        };\n      };\n      var sinks = _.map(smartSink, streams);\n      return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n    });\n  } else {\n    return Bacon.never();\n  }\n};\n\nBacon.repeatedly = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"repeatedly\", [delay, values]), Bacon.fromPoll(delay, function () {\n    return values[index++ % values.length];\n  }));\n};\n\nBacon.repeat = function (generator) {\n  var index = 0;\n  return Bacon.fromBinder(function (sink) {\n    var flag = false;\n    var reply = Bacon.more;\n    var unsub = function () {};\n    function handleEvent(event) {\n      if (event.isEnd()) {\n        if (!flag) {\n          return flag = true;\n        } else {\n          return subscribeNext();\n        }\n      } else {\n        return reply = sink(event);\n      }\n    };\n    function subscribeNext() {\n      var next;\n      flag = true;\n      while (flag && reply !== Bacon.noMore) {\n        next = generator(index++);\n        flag = false;\n        if (next) {\n          unsub = next.subscribeInternal(handleEvent);\n        } else {\n          sink(endEvent());\n        }\n      }\n      return flag = true;\n    };\n    subscribeNext();\n    return function () {\n      return unsub();\n    };\n  });\n};\n\nBacon.retry = function (options) {\n  if (!_.isFunction(options.source)) {\n    throw new Exception(\"'source' option has to be a function\");\n  }\n  var source = options.source;\n  var retries = options.retries || 0;\n  var maxRetries = options.maxRetries || retries;\n  var delay = options.delay || function () {\n    return 0;\n  };\n  var isRetryable = options.isRetryable || function () {\n    return true;\n  };\n  var finished = false;\n  var error = null;\n\n  return withDesc(new Bacon.Desc(Bacon, \"retry\", [options]), Bacon.repeat(function () {\n    function valueStream() {\n      return source().endOnError().withHandler(function (event) {\n        if (event.isError()) {\n          error = event;\n          if (!(isRetryable(error.error) && retries > 0)) {\n            finished = true;\n            return this.push(event);\n          }\n        } else {\n          if (event.hasValue()) {\n            error = null;\n            finished = true;\n          }\n          return this.push(event);\n        }\n      });\n    }\n\n    if (finished) {\n      return null;\n    } else if (error) {\n      var context = {\n        error: error.error,\n        retriesDone: maxRetries - retries\n      };\n      var pause = Bacon.later(delay(context)).filter(false);\n      retries = retries - 1;\n      return pause.concat(Bacon.once().flatMap(valueStream));\n    } else {\n      return valueStream();\n    }\n  }));\n};\n\nBacon.sequentially = function (delay, values) {\n  var index = 0;\n  return withDesc(new Bacon.Desc(Bacon, \"sequentially\", [delay, values]), Bacon.fromPoll(delay, function () {\n    var value = values[index++];\n    if (index < values.length) {\n      return value;\n    } else if (index === values.length) {\n      return [value, endEvent()];\n    } else {\n      return endEvent();\n    }\n  }));\n};\n\nBacon.Observable.prototype.skip = function (count) {\n  return withDesc(new Bacon.Desc(this, \"skip\", [count]), this.withHandler(function (event) {\n    if (!event.hasValue()) {\n      return this.push(event);\n    } else if (count > 0) {\n      count--;\n      return Bacon.more;\n    } else {\n      return this.push(event);\n    }\n  }));\n};\n\nBacon.EventStream.prototype.skipUntil = function (starter) {\n  var started = starter.take(1).map(true).toProperty(false);\n  return withDesc(new Bacon.Desc(this, \"skipUntil\", [starter]), this.filter(started));\n};\n\nBacon.EventStream.prototype.skipWhile = function (f) {\n  assertObservableIsProperty(f);\n  var ok = false;\n\n  for (var _len20 = arguments.length, args = Array(_len20 > 1 ? _len20 - 1 : 0), _key20 = 1; _key20 < _len20; _key20++) {\n    args[_key20 - 1] = arguments[_key20];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"skipWhile\", [f]), this.withHandler(function (event) {\n      if (ok || !event.hasValue() || !f(event.value())) {\n        if (event.hasValue()) {\n          ok = true;\n        }\n        return this.push(event);\n      } else {\n        return Bacon.more;\n      }\n    }));\n  });\n};\n\nBacon.Observable.prototype.slidingWindow = function (n) {\n  var minValues = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n  return withDesc(new Bacon.Desc(this, \"slidingWindow\", [n, minValues]), this.scan([], function (window, value) {\n    return window.concat([value]).slice(-n);\n  }).filter(function (values) {\n    return values.length >= minValues;\n  }));\n};\n\nvar spies = [];\nvar registerObs = function (obs) {\n  if (spies.length) {\n    if (!registerObs.running) {\n      try {\n        registerObs.running = true;\n        spies.forEach(function (spy) {\n          spy(obs);\n        });\n      } finally {\n        delete registerObs.running;\n      }\n    }\n  }\n};\n\nBacon.spy = function (spy) {\n  return spies.push(spy);\n};\n\nBacon.Property.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), this.scan(seed, function (prev, next) {\n    return next;\n  }));\n};\n\nBacon.EventStream.prototype.startWith = function (seed) {\n  return withDesc(new Bacon.Desc(this, \"startWith\", [seed]), Bacon.once(seed).concat(this));\n};\n\nBacon.Observable.prototype.takeWhile = function (f) {\n  assertObservableIsProperty(f);\n\n  for (var _len21 = arguments.length, args = Array(_len21 > 1 ? _len21 - 1 : 0), _key21 = 1; _key21 < _len21; _key21++) {\n    args[_key21 - 1] = arguments[_key21];\n  }\n\n  return convertArgsToFunction(this, f, args, function (f) {\n    return withDesc(new Bacon.Desc(this, \"takeWhile\", [f]), this.withHandler(function (event) {\n      if (event.filter(f)) {\n        return this.push(event);\n      } else {\n        this.push(endEvent());\n        return Bacon.noMore;\n      }\n    }));\n  });\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDesc(new Bacon.Desc(this, \"throttle\", [delay]), this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(new Bacon.Desc(this, \"throttle\", [delay]), function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this12 = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this12.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nBacon[\"try\"] = function (f) {\n  return function (value) {\n    try {\n      return Bacon.once(f(value));\n    } catch (e) {\n      return new Bacon.Error(e);\n    }\n  };\n};\n\nBacon.update = function (initial) {\n  function lateBindFirst(f) {\n    return function () {\n      for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n        args[_key23] = arguments[_key23];\n      }\n\n      return function (i) {\n        return f.apply(undefined, _toConsumableArray([i].concat(args)));\n      };\n    };\n  }\n\n  for (var _len22 = arguments.length, patterns = Array(_len22 > 1 ? _len22 - 1 : 0), _key22 = 1; _key22 < _len22; _key22++) {\n    patterns[_key22 - 1] = arguments[_key22];\n  }\n\n  var i = patterns.length - 1;\n  while (i > 0) {\n    if (!(patterns[i] instanceof Function)) {\n      patterns[i] = _.always(patterns[i]);\n    }\n    patterns[i] = lateBindFirst(patterns[i]);\n    i = i - 2;\n  }\n  return withDesc(new Bacon.Desc(Bacon, \"update\", [initial].concat(patterns)), Bacon.when.apply(Bacon, patterns).scan(initial, function (x, f) {\n    return f(x);\n  }));\n};\n\nBacon.zipAsArray = function () {\n  for (var _len24 = arguments.length, args = Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n    args[_key24] = arguments[_key24];\n  }\n\n  var streams = argumentsToObservables(args);\n  return withDesc(new Bacon.Desc(Bacon, \"zipAsArray\", streams), Bacon.zipWith(streams, function () {\n    for (var _len25 = arguments.length, xs = Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n      xs[_key25] = arguments[_key25];\n    }\n\n    return xs;\n  }));\n};\n\nBacon.zipWith = function () {\n  for (var _len26 = arguments.length, args = Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n    args[_key26] = arguments[_key26];\n  }\n\n  var observablesAndFunction = argumentsToObservablesAndFunction(args);\n  var streams = observablesAndFunction[0];\n  var f = observablesAndFunction[1];\n\n  streams = _.map(function (s) {\n    return s.toEventStream();\n  }, streams);\n  return withDesc(new Bacon.Desc(Bacon, \"zipWith\", [f].concat(streams)), Bacon.when(streams, f));\n};\n\nBacon.Observable.prototype.zip = function (other, f) {\n  return withDesc(new Bacon.Desc(this, \"zip\", [other]), Bacon.zipWith([this, other], f || Array));\n};\n\nif (typeof define !== \"undefined\" && define !== null && define.amd != null) {\n  define([], function () {\n    return Bacon;\n  });\n  if (typeof this !== \"undefined\" && this !== null) {\n    this.Bacon = Bacon;\n  }\n} else if (typeof module !== \"undefined\" && module !== null && module.exports != null) {\n  module.exports = Bacon;\n  Bacon.Bacon = Bacon;\n} else {\n    this.Bacon = Bacon;\n  }\n}).call(this);\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","'use strict';\n\n(function() {\n\tvar diacritics = [\n\t\t{'base':'A', 'letters':'\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'},\n\t\t{'base':'AA','letters':'\\uA732'},\n\t\t{'base':'AE','letters':'\\u00C6\\u01FC\\u01E2'},\n\t\t{'base':'AO','letters':'\\uA734'},\n\t\t{'base':'AU','letters':'\\uA736'},\n\t\t{'base':'AV','letters':'\\uA738\\uA73A'},\n\t\t{'base':'AY','letters':'\\uA73C'},\n\t\t{'base':'B', 'letters':'\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'},\n\t\t{'base':'C', 'letters':'\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'},\n\t\t{'base':'D', 'letters':'\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'},\n\t\t{'base':'DZ','letters':'\\u01F1\\u01C4'},\n\t\t{'base':'Dz','letters':'\\u01F2\\u01C5'},\n\t\t{'base':'E', 'letters':'\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'},\n\t\t{'base':'F', 'letters':'\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'},\n\t\t{'base':'G', 'letters':'\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'},\n\t\t{'base':'H', 'letters':'\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'},\n\t\t{'base':'I', 'letters':'\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'},\n\t\t{'base':'J', 'letters':'\\u004A\\u24BF\\uFF2A\\u0134\\u0248'},\n\t\t{'base':'K', 'letters':'\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'},\n\t\t{'base':'L', 'letters':'\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'},\n\t\t{'base':'LJ','letters':'\\u01C7'},\n\t\t{'base':'Lj','letters':'\\u01C8'},\n\t\t{'base':'M', 'letters':'\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'},\n\t\t{'base':'N', 'letters':'\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'},\n\t\t{'base':'NJ','letters':'\\u01CA'},\n\t\t{'base':'Nj','letters':'\\u01CB'},\n\t\t{'base':'O', 'letters':'\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'},\n\t\t{'base':'OI','letters':'\\u01A2'},\n\t\t{'base':'OO','letters':'\\uA74E'},\n\t\t{'base':'OU','letters':'\\u0222'},\n\t\t{'base':'P', 'letters':'\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'},\n\t\t{'base':'Q', 'letters':'\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'},\n\t\t{'base':'R', 'letters':'\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'},\n\t\t{'base':'S', 'letters':'\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'},\n\t\t{'base':'T', 'letters':'\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'},\n\t\t{'base':'TZ','letters':'\\uA728'},\n\t\t{'base':'U', 'letters':'\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'},\n\t\t{'base':'V', 'letters':'\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'},\n\t\t{'base':'VY','letters':'\\uA760'},\n\t\t{'base':'W', 'letters':'\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'},\n\t\t{'base':'X', 'letters':'\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'},\n\t\t{'base':'Y', 'letters':'\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'},\n\t\t{'base':'Z', 'letters':'\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'},\n\t\t{'base':'a', 'letters':'\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'},\n\t\t{'base':'aa','letters':'\\uA733'},\n\t\t{'base':'ae','letters':'\\u00E6\\u01FD\\u01E3'},\n\t\t{'base':'ao','letters':'\\uA735'},\n\t\t{'base':'au','letters':'\\uA737'},\n\t\t{'base':'av','letters':'\\uA739\\uA73B'},\n\t\t{'base':'ay','letters':'\\uA73D'},\n\t\t{'base':'b', 'letters':'\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'},\n\t\t{'base':'c', 'letters':'\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'},\n\t\t{'base':'d', 'letters':'\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'},\n\t\t{'base':'dz','letters':'\\u01F3\\u01C6'},\n\t\t{'base':'e', 'letters':'\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'},\n\t\t{'base':'f', 'letters':'\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'},\n\t\t{'base':'g', 'letters':'\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'},\n\t\t{'base':'h', 'letters':'\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'},\n\t\t{'base':'hv','letters':'\\u0195'},\n\t\t{'base':'i', 'letters':'\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'},\n\t\t{'base':'j', 'letters':'\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'},\n\t\t{'base':'k', 'letters':'\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'},\n\t\t{'base':'l', 'letters':'\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'},\n\t\t{'base':'lj','letters':'\\u01C9'},\n\t\t{'base':'m', 'letters':'\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'},\n\t\t{'base':'n', 'letters':'\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'},\n\t\t{'base':'nj','letters':'\\u01CC'},\n\t\t{'base':'o', 'letters':'\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'},\n\t\t{'base':'oi','letters':'\\u01A3'},\n\t\t{'base':'ou','letters':'\\u0223'},\n\t\t{'base':'oo','letters':'\\uA74F'},\n\t\t{'base':'p','letters':'\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'},\n\t\t{'base':'q','letters':'\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'},\n\t\t{'base':'r','letters':'\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'},\n\t\t{'base':'s','letters':'\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'},\n\t\t{'base':'t','letters':'\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'},\n\t\t{'base':'tz','letters':'\\uA729'},\n\t\t{'base':'u','letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'},\n\t\t{'base':'v','letters':'\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'},\n\t\t{'base':'vy','letters':'\\uA761'},\n\t\t{'base':'w','letters':'\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'},\n\t\t{'base':'x','letters':'\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'},\n\t\t{'base':'y','letters':'\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'},\n\t\t{'base':'z','letters':'\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'}\n\t];\n\n\n\tvar diaMap = {};\n\tfor (var i=0; i < diacritics.length; i++){\n\t\tvar letters = diacritics[i].letters.split('');\n\t\tfor (var j=0; j < letters.length ; j++){\n\t\t\tdiaMap[letters[j]] = diacritics[i].base;\n\t\t}\n\t}\n\n\tvar removeDiacritics = function (str) {\n\t\tvar letters = str.split('');\n\t\tvar newStr = '';\n\t\tfor(var i=0; i< letters.length; i++) {\n\t\t\tnewStr += letters[i] in diaMap ? diaMap[letters[i]] : letters[i];\n\t\t}\n\t\treturn newStr;\n\t};\n\n\tvar transformName = function (name, space) {\n\t\tvar n = removeDiacritics( name );\n\t\tn = n.replace(/ /g, space);\n\t\tn = n.replace(/[^A-Za-z0-9-_\\.]/g, '');\n\t\tn = n.replace(/\\.+/g, '.');\n\t\tn = n.replace(/-+/g, '-');\n\t\tn = n.replace(/_+/g, '_');\n\t\treturn n;\n\t};\n\n\t/**\n\t * Get safe name for files\n\t * @param  {String} name string to transform\n\t * @param  {String} space    replace for spaces. Optional, low dash ('_') by default\n\t * @return {String}          safe name\n\t */\n\tvar safename = function (name, space) {\n\t\tspace = space || '_';\n\t\treturn transformName( name, space);\n\t};\n\n\t/**\n\t * Safe name with low dash '_'.\n\t *\n\t * Same as `safename('your file name.txt', '_');`\n\t */\n\tsafename.low = function (name) {\n\t\treturn transformName( name, '_');\n\t};\n\n\t/**\n\t * Safe name with middle dash '-'.\n\t *\n\t * Same as `safename('your file name.txt', '-');`\n\t */\n\tsafename.middle = function (name) {\n\t\treturn transformName( name, '-');\n\t};\n\n\t/**\n\t * Safe name with dots '.'.\n\t *\n\t * Same as `safename('your file name.txt', '.');`\n\t */\n\tsafename.dot = function (name) {\n\t\treturn transformName( name, '.');\n\t};\n\n\t// node.js\n\tif((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n\t\tmodule.exports = safename;\n\t// browser\n\t} else if(typeof window !== 'undefined') {\n\t\twindow.safename = safename;\n\t}\n})();","'use strict';\n\nvar mkdirp = require('mkdirp'),\n\tfs = require('fs'),\n\tchangeName = require('./changename'),\n\tpath = require('path'),\n\tsafename = require('safename');\n\n\n\n/*!\n * Rename file and launch callback\n * @param  {String}   oldPath  path to file to move\n * @param  {String}   newPath  path of destination\n * @param  {Function} callback signature: null, {filename, filepath}\n */\nvar move = function (oldPath, newPath, callback) {\n\tfs.rename( oldPath, newPath, function (err) {\n\t\tif (err) {\n\t\t\tcallback( err );\n\t\t} else {\n\t\t\tcallback( null, {\n\t\t\t\tfilename: newPath.split( '/' ).pop(),\n\t\t\t\tfilepath: newPath\n\t\t\t});\n\t\t}\n\t});\n};\n\n/*!\n * return safename file path\n * @param  {String} route target to analyze\n * @return {String}       route analyze\n */\nvar checkSafeName = function (route) {\n\tif ( this.safenames ) {\n\t\troute = route.split( '/' );\n\t\tvar name = route.pop();\n\t\tname = safename( name );\n\t\troute.push( name );\n\t\treturn route.join( '/' );\n\t} else {\n\t\treturn route;\n\t}\n};\n\n\n/*!\n * check if params are right\n */\nvar checker = function (folder, oldPath, newPath, callback) {\n\tvar cb = callback || function () {};\n\tif (typeof newPath === 'function') {\n\t\tcb = newPath;\n\t\tnewPath = oldPath.split( '/' ).pop();\n\t} else if (!newPath) {\n\t\tnewPath = oldPath.split( '/' ).pop();\n\t}\n\t// check for valid arguments\n\tif (folder && oldPath && (typeof folder === 'string') && (typeof oldPath === 'string') && fs.existsSync( oldPath )) {\n\t\t// check for existing folder\n\t\tif (this.folders[folder]) {\n\t\t\t// set target\n\t\t\tnewPath = path.resolve( this.folders[folder], newPath );\n\t\t\tnewPath = checkSafeName.call( this, newPath );\n\t\t\treturn {newPath: newPath, callback: cb};\n\t\t} else {\n\t\t\tcb( 'invalid folder' );\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tcb( 'folder or origin not valid' );\n\t\treturn false;\n\t}\n};\n\n\n/**\n * Filesaver constructor.\n *\n * Options:\n *\n * - folders: *Object*\t\twith folder routes\n * - safename: *Boolean*\tuse safe name for files\n *\n * Example:\n *\n * ```js\n * var folders = {\n *     images: './images',\n *     books: './books'\n * }\n * var filesaver = new Filesaver({\n *     folders: folders,\n *     safenames: true\n * });\n * ```\n *\n * @param {Object} options folders and safenames\n */\n\nvar Filesaver = function (options) {\n\tvar x;\n\toptions = options || {};\n\t// Store folders\n\tthis.folders = options.folders || {};\n\tthis.safenames = options.safenames || false;\n\n\t// check for existing folders\n\tfor (x in this.folders) {\n\t\tif (!fs.existsSync( this.folders[x] )){\n\t\t\t// create folder if not exists\n\t\t\tmkdirp( this.folders[x] );\n\t\t}\n\t}\n};\n\n\n/**\n * Add a new folder\n *\n * Example:\n *\n * ```js\n * filesaver.folder( 'documents', './path/to/folder', function () {\n *     // do something\n * });\n * ```\n * @param  {String}   name       name of new folder collection\n * @param  {Object}   path       path to its folder\n * @param  {Function} callback   no signature callback\n */\n\nFilesaver.prototype.folder = function (name, folderPath, callback) {\n\tvar _this = this;\n\n\tfs.exists( folderPath, function (exists) {\n\t\tif (!exists) {\n\t\t\t// create folder if not exists\n\t\t\tmkdirp( folderPath );\n\t\t}\n\t\t// add folder\n\t\t_this.folders[name] = folderPath;\n\t\t// optional callback\n\t\tif (callback){\n\t\t\tcallback();\n\t\t}\n\t});\n};\n\n\n/**\n * Write or overwrite file\n *\n * Example:\n *\n * ```js\n * filesaver.put( 'images', '/path/temp/file.jpg', 'photo.jpg', function (err, data) {\n *     console.log( data );\n *     // ->\n *     // filename: 'photo.jpg',\n *     // filepath: './images/photo.jpg'\n *     });\n * ```\n *\n * @param  {String}   folder     name of parent folder folder\n * @param  {String}   oldPath     path to origin file\n * @param  {String}   newPath     name of newPath file\n * @param  {Function} callback   Signature: error, data. Data signature:{filename, filepath}\n */\n\nFilesaver.prototype.put = function (folder, oldPath, newPath, callback) {\n\tvar data = checker.call( this, folder, oldPath, newPath, callback );\n\n\tif (data) {\n\t\tmove( oldPath, data.newPath, data.callback );\n\t}\n};\n\n\n\n/**\n * Write a file without overwriting anyone.\n *\n * Example:\n *\n * ```js\n * filesaver.add( 'images', '/path/temp/file.jpg', 'photo_1.jpg', function (err, data) {\n *     console.log( data );\n *     // ->\n *     // filename: 'photo_2.jpg',\n *     // filepath: './images/photo_2.jpg'\n *     });\n * ```\n *\n * @param  {String}   folder     name of parent folder folder\n * @param  {String}   oldPath     path to origin file\n * @param  {String}   newPath     Optional: name of newPath file\n * @param  {Function} callback   Optional: Signature: error, data. Data signature:{filename, filepath}\n */\n\nFilesaver.prototype.add = function (folder, oldPath, newPath, callback) {\n\n\tvar data = checker.call( this, folder, oldPath, newPath, callback );\n\n\tif (data) {\n\t\tnewPath = changeName( data.newPath );\n\t\tmove( oldPath, newPath, data.callback );\n\t}\n};\n\n\nmodule.exports = Filesaver;\n","var fs = require('fs');\n\n/*!\n * add 1 to suffix number\n * @param {String} name file basename\n * @return {String} name with addition\n */\nvar addOne = function (name) {\n\tname = name.split( '_' );\n\tvar n = Number( name.pop()) + 1;\n\tname.push( n );\n\treturn name.join( '_' );\n};\n\n\n/*!\n * detect if name has a number suffix after '_'\n * (example: picture_5.jpg)\n * @param  {string}  name basename to examinate\n * @return {Boolean|Number}      if has not suffix: false, else: name with addition\n */\nvar hasSuffix = function (name) {\n\tvar suffix, splitted;\n\tif (!isNaN( name )) {\n\t\treturn false;\n\t} else {\n\t\tsplitted = name.split( '_' );\n\t\tif (splitted.length > 1) {\n\t\t\tsuffix = splitted.pop();\n\t\t\tif (isNaN( suffix )) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn addOne( name );\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\n/*!\n * separate basename from file path and send it to rename\n * @param  {String} route route of the file\n * @return {String}       new name\n */\nvar newName = function ( route ) {\n\t// get filename\n\troute = route.split( '/' );\n\tvar filename = route.pop();\n\tvar splitted = filename.split( '.' );\n\tvar basename = splitted.shift();\n\tvar ext = splitted.join( '.' );\n\tvar suffix = hasSuffix( basename );\n\t// check if filefileName has suffix\n\tif (suffix) {\n\t\tbasename = suffix;\n\t} else {\n\t\tbasename = basename + '_1';\n\t}\n\tfilename = [basename, ext].join( '.' );\n\troute.push( filename );\n\treturn route.join('/');\n};\n\n/*!\n * detects if file route exist and send it to rename\n * @param  {String} route file path\n * @return {String}       unique path\n */\nvar finalName = function (route) {\n\tif (fs.existsSync( route )) {\n\t\treturn finalName( newName( route ));\n\t} else {\n\t\treturn route;\n\t}\n};\n\n\n\n\nmodule.exports = finalName;\n",null,"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\r\n* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.\r\n*  \r\n* Version - 0.99.00.beta \r\n* Copyright (c) 2012 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/vkbeautify/\r\n* \r\n* Dual licensed under the MIT and GPL licenses:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*   http://www.gnu.org/licenses/gpl.html\r\n*\r\n*   Pretty print\r\n*\r\n*        vkbeautify.xml(text [,indent_pattern]);\r\n*        vkbeautify.json(text [,indent_pattern]);\r\n*        vkbeautify.css(text [,indent_pattern]);\r\n*        vkbeautify.sql(text [,indent_pattern]);\r\n*\r\n*        @text - String; text to beatufy;\r\n*        @indent_pattern - Integer | String;\r\n*                Integer:  number of white spaces;\r\n*                String:   character string to visualize indentation ( can also be a set of white spaces )\r\n*   Minify\r\n*\r\n*        vkbeautify.xmlmin(text [,preserve_comments]);\r\n*        vkbeautify.jsonmin(text);\r\n*        vkbeautify.cssmin(text [,preserve_comments]);\r\n*        vkbeautify.sqlmin(text);\r\n*\r\n*        @text - String; text to minify;\r\n*        @preserve_comments - Bool; [optional];\r\n*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )\r\n*\r\n*   Examples:\r\n*        vkbeautify.xml(text); // pretty print XML\r\n*        vkbeautify.json(text, 4 ); // pretty print JSON\r\n*        vkbeautify.css(text, '. . . .'); // pretty print CSS\r\n*        vkbeautify.sql(text, '----'); // pretty print SQL\r\n*\r\n*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments\r\n*        vkbeautify.jsonmin(text);// minify JSON\r\n*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )\r\n*        vkbeautify.sqlmin(text);// minify SQL\r\n*\r\n*/\r\nfunction createShiftArr(step) {\r\n\r\n\tvar space = '    ';\r\n\t\r\n\tif ( isNaN(parseInt(step)) ) {  // argument is string\r\n\t\tspace = step;\r\n\t} else { // argument is integer\r\n\t\tswitch(step) {\r\n\t\t\tcase 1: space = ' '; break;\r\n\t\t\tcase 2: space = '  '; break;\r\n\t\t\tcase 3: space = '   '; break;\r\n\t\t\tcase 4: space = '    '; break;\r\n\t\t\tcase 5: space = '     '; break;\r\n\t\t\tcase 6: space = '      '; break;\r\n\t\t\tcase 7: space = '       '; break;\r\n\t\t\tcase 8: space = '        '; break;\r\n\t\t\tcase 9: space = '         '; break;\r\n\t\t\tcase 10: space = '          '; break;\r\n\t\t\tcase 11: space = '           '; break;\r\n\t\t\tcase 12: space = '            '; break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar shift = ['\\n']; // array of shifts\r\n\tfor(ix=0;ix<100;ix++){\r\n\t\tshift.push(shift[ix]+space); \r\n\t}\r\n\treturn shift;\r\n}\r\n\r\nfunction vkbeautify(){\r\n\tthis.step = '    '; // 4 spaces\r\n\tthis.shift = createShiftArr(this.step);\r\n};\r\n\r\nvkbeautify.prototype.xml = function(text,step) {\r\n\r\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\r\n\t\t\t\t .replace(/</g,\"~::~<\")\r\n\t\t\t\t .replace(/\\s*xmlns\\:/g,\"~::~xmlns:\")\r\n\t\t\t\t .replace(/\\s*xmlns\\=/g,\"~::~xmlns=\")\r\n\t\t\t\t .split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tinComment = false,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\r\n\t\t\tif(ar[ix].search(/<!/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tinComment = true; \r\n\t\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) { \r\n\t\t\t\t\tinComment = false; \r\n\t\t\t\t}\r\n\t\t\t} else \r\n\t\t\t// end comment  or <![CDATA[...]]> //\r\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tinComment = false; \r\n\t\t\t} else \r\n\t\t\t// <elm></elm> //\r\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\r\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) { \r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t\tif(!inComment) deep--;\r\n\t\t\t} else\r\n\t\t\t // <elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t // <elm>...</elm> //\r\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// </elm> //\r\n\t\t\tif(ar[ix].search(/<\\//) > -1) { \r\n\t\t\t\tstr = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <elm/> //\r\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) { \r\n\t\t\t\tstr = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];\r\n\t\t\t} else \r\n\t\t\t// <? xml ... ?> //\r\n\t\t\tif(ar[ix].search(/<\\?/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\t// xmlns //\r\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\r\n}\r\n\r\nvkbeautify.prototype.json = function(text,step) {\r\n\r\n\tvar step = step ? step : this.step;\r\n\t\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\tif ( typeof text === \"string\" ) return JSON.stringify(JSON.parse(text), null, step);\r\n\tif ( typeof text === \"object\" ) return JSON.stringify(text, null, step);\r\n\t\t\r\n\treturn text; // text is not string nor object\r\n}\r\n\r\nvkbeautify.prototype.css = function(text, step) {\r\n\r\n\tvar ar = text.replace(/\\s{1,}/g,' ')\r\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\r\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\r\n\t\t\t\t.replace(/\\;/g,\";~::~\")\r\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\r\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\r\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\r\n\t\t\t\t.split('~::~'),\r\n\t\tlen = ar.length,\r\n\t\tdeep = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;\r\n\t\t\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\r\n\t\t\tif( /\\{/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep++]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\}/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[--deep]+ar[ix];\r\n\t\t\t} else\r\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str.replace(/^\\n{1,}/,'');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nfunction isSubquery(str, parenthesisLevel) {\r\n\treturn  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length )\r\n}\r\n\r\nfunction split_sql(str, tab) {\r\n\r\n\treturn str.replace(/\\s{1,}/g,\" \")\r\n\r\n\t\t\t\t.replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\r\n\t\t\t\t.replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\r\n\t\t\t\t.replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\r\n\t\t\t\t.replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\r\n\t\t\t\t.replace(/ END /ig,\"~::~\"+tab+\"END \")\r\n\t\t\t\t.replace(/ FROM /ig,\"~::~FROM \")\r\n\t\t\t\t.replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\r\n\t\t\t\t.replace(/ HAVING /ig,\"~::~HAVING \")\r\n\t\t\t\t//.replace(/ SET /ig,\" SET~::~\")\r\n\t\t\t\t.replace(/ IN /ig,\" IN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ JOIN /ig,\"~::~JOIN \")\r\n\t\t\t\t.replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\r\n\t\t\t\t.replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\r\n\t\t\t\t.replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\r\n\t\t\t\t.replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ ON /ig,\"~::~\"+tab+\"ON \")\r\n\t\t\t\t.replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\r\n\t\t\t\t.replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\r\n\t\t\t\t.replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\r\n\r\n\t\t\t\t.replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\r\n\t\t\t\t.replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\r\n\t\t\t\t\r\n\t\t\t\t.replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\r\n\t\t\t\t.replace(/ UNION /ig,\"~::~UNION~::~\")\r\n\t\t\t\t.replace(/ USING /ig,\"~::~USING \")\r\n\t\t\t\t.replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\r\n\t\t\t\t.replace(/ WHERE /ig,\"~::~WHERE \")\r\n\t\t\t\t.replace(/ WITH /ig,\"~::~WITH \")\r\n\t\t\t\t\r\n\t\t\t\t//.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\r\n\t\t\t\t//.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\r\n\r\n\t\t\t\t.replace(/ ALL /ig,\" ALL \")\r\n\t\t\t\t.replace(/ AS /ig,\" AS \")\r\n\t\t\t\t.replace(/ ASC /ig,\" ASC \")\t\r\n\t\t\t\t.replace(/ DESC /ig,\" DESC \")\t\r\n\t\t\t\t.replace(/ DISTINCT /ig,\" DISTINCT \")\r\n\t\t\t\t.replace(/ EXISTS /ig,\" EXISTS \")\r\n\t\t\t\t.replace(/ NOT /ig,\" NOT \")\r\n\t\t\t\t.replace(/ NULL /ig,\" NULL \")\r\n\t\t\t\t.replace(/ LIKE /ig,\" LIKE \")\r\n\t\t\t\t.replace(/\\s{0,}SELECT /ig,\"SELECT \")\r\n\t\t\t\t.replace(/\\s{0,}UPDATE /ig,\"UPDATE \")\r\n\t\t\t\t.replace(/ SET /ig,\" SET \")\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t.replace(/~::~{1,}/g,\"~::~\")\r\n\t\t\t\t.split('~::~');\r\n}\r\n\r\nvkbeautify.prototype.sql = function(text,step) {\r\n\r\n\tvar ar_by_quote = text.replace(/\\s{1,}/g,\" \")\r\n\t\t\t\t\t\t\t.replace(/\\'/ig,\"~::~\\'\")\r\n\t\t\t\t\t\t\t.split('~::~'),\r\n\t\tlen = ar_by_quote.length,\r\n\t\tar = [],\r\n\t\tdeep = 0,\r\n\t\ttab = this.step,//+this.step,\r\n\t\tinComment = true,\r\n\t\tinQuote = false,\r\n\t\tparenthesisLevel = 0,\r\n\t\tstr = '',\r\n\t\tix = 0,\r\n\t\tshift = step ? createShiftArr(step) : this.shift;;\r\n\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\tif(ix%2) {\r\n\t\t\t\tar = ar.concat(ar_by_quote[ix]);\r\n\t\t\t} else {\r\n\t\t\t\tar = ar.concat(split_sql(ar_by_quote[ix], tab) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlen = ar.length;\r\n\t\tfor(ix=0;ix<len;ix++) {\r\n\t\t\t\r\n\t\t\tparenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\s{0,}SET\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  { \r\n\t\t\t\tdeep++;\r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t} else \r\n\t\t\tif( /\\'/.exec(ar[ix]) )  { \r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t\tstr += ar[ix];\r\n\t\t\t}\r\n\t\t\telse  { \r\n\t\t\t\tstr += shift[deep]+ar[ix];\r\n\t\t\t\tif(parenthesisLevel<1 && deep) {\r\n\t\t\t\t\tdeep--;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tvar junk = 0;\r\n\t\t}\r\n\r\n\t\tstr = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\r\n\t\treturn str;\r\n}\r\n\r\n\r\nvkbeautify.prototype.xmlmin = function(text, preserveComments) {\r\n\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\")\r\n\t\t\t\t\t\t\t\t\t .replace(/[ \\r\\n\\t]{1,}xmlns/g, ' xmlns');\r\n\treturn  str.replace(/>\\s{0,}</g,\"><\"); \r\n}\r\n\r\nvkbeautify.prototype.jsonmin = function(text) {\r\n\r\n\tif (typeof JSON === 'undefined' ) return text; \r\n\t\r\n\treturn JSON.stringify(JSON.parse(text), null, 0); \r\n\t\t\t\t\r\n}\r\n\r\nvkbeautify.prototype.cssmin = function(text, preserveComments) {\r\n\t\r\n\tvar str = preserveComments ? text\r\n\t\t\t\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\r\n\r\n\treturn str.replace(/\\s{1,}/g,' ')\r\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\r\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\r\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\r\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\r\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\r\n}\r\n\r\nvkbeautify.prototype.sqlmin = function(text) {\r\n\treturn text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\r\n}\r\n\r\nmodule.exports = new vkbeautify();\r\n\r\n"]}